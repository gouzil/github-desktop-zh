changed in both
  base   100644 a35180458a82b0798e47b0f48d10ec433a698f12 BUILD.gn
  our    100644 d00c4b1e3d3523641210ff20fda41d76c9eb546c BUILD.gn
  their  100644 c23b6856ebcb12004d45d87a1f71ad5f3e59b16c BUILD.gn
@@ -214,7 +214,6 @@
     "//ppapi/proxy",
     "//ppapi/shared_impl",
     "//printing",
-    "//services/device/wake_lock/power_save_blocker",  # TODO: this requires a visibility patch to chromium src
     "//skia",
     "//third_party/WebKit/public:blink",
     "//third_party/boringssl",
@@ -228,13 +227,19 @@
     "//v8",
   ]
 
+  # TODO: this requires a visibility patch to chromium src. it would be better
+  # to use the publicly-available API, which I think is mojo-based. Once
+  # electron switches to using the public API, we can remove this from the deps
+  # list and remove the visibility patch from chromium.
+  deps += [ "//services/device/wake_lock/power_save_blocker" ]
+
   include_dirs = [
     "chromium_src",
     ".",
     "$target_gen_dir",
 
     # TODO(nornagon): replace usage of SchemeRegistry by an actually exported
-    # API of blink, then delete this include dir.
+    # API of blink, then remove this from the include_dirs.
     "//third_party/WebKit/Source",
   ]
 
@@ -653,7 +658,6 @@
       ]
 
       deps += [
-        # TODO: move non-windows specific deps into the non-windows-specific list
         "//third_party/breakpad:breakpad_handler",
         "//third_party/breakpad:breakpad_sender",
         "//ui/native_theme:native_theme_browser",
@@ -672,9 +676,11 @@
       configs += [ "//build/config/win:windowed" ]
 
       ldflags = [
-        # TODO: these are for win7 compatibility, are there other things we need to do for that?
-        "/DELAYLOAD:API-MS-WIN-CORE-WINRT-L1-1-0.DLL",
-        "/DELAYLOAD:API-MS-WIN-CORE-WINRT-STRING-L1-1-0.DLL",
+        # Windows 7 doesn't have these DLLs.
+        # TODO: are there other DLLs we need to list here to be win7
+        # compatible?
+        "/DELAYLOAD:api-ms-win-core-winrt-l1-1-0.dll",
+        "/DELAYLOAD:api-ms-win-core-winrt-string-l1-1-0.dll",
       ]
     }
     if (is_linux) {
changed in both
  base   100644 23b15367a7ebdcb504f1b8ef41f8b27fa2e163d2 build/args/release.gn
  our    100644 dabe767ecc7d8a5ed5280e89b757625948de032d build/args/release.gn
  their  100644 d73be55c1b977521e28a9638cc945e6513328e65 build/args/release.gn
@@ -1,9 +1,15 @@
 import("all.gn")
 is_component_build = false
+<<<<<<< .our
 is_component_ffmpeg = true
 is_official_build = true
 strip_debug_info = true
+=======
+is_official_build = true
+>>>>>>> .their
 
-# TODO(nornagon): linking non-CFI code (nodejs) with CFI code fails at runtime.
-# Once we can build nodejs with CFI flags matching Electron's, remove this.
-is_cfi = false
+# By default, Electron builds ffmpeg with proprietary codecs enabled. In order
+# to facilitate users who don't want to ship proprietary codecs in ffmpeg, or
+# who have an LGPL requirement to ship ffmpeg as a dynamically linked library,
+# we build ffmpeg as a shared library.
+is_component_ffmpeg = true
