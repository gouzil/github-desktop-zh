changed in both
  base   100644 fdf76f3cb29159c62a2ef9dfec7c6c6351fd28ba atom/app/atom_main_delegate.cc
  our    100644 b3b5b8f2a8f24b8928f69a286c80e8a3b8464366 atom/app/atom_main_delegate.cc
  their  100644 f4c610028cb5e42ef0b3a482193568df353a4881 atom/app/atom_main_delegate.cc
@@ -101,11 +101,14 @@
   bool enable_stack_dumping = true;
 #else
   bool enable_stack_dumping = env->HasVar("ELECTRON_ENABLE_STACK_DUMPING");
+<<<<<<< .our
 #endif
 #if defined(ARCH_CPU_ARM_FAMILY) && defined(ARCH_CPU_32_BITS)
   // For 32bit ARM enabling stack printing would end up crashing.
   // https://github.com/electron/electron/pull/11230#issuecomment-363232482
   enable_stack_dumping = false;
+=======
+>>>>>>> .their
 #endif
   if (enable_stack_dumping)
     base::debug::EnableInProcessStackDumping();
changed in both
  base   100644 8c96f91bfe68e105a12c2d1a3c515a559ea4d6e6 atom/browser/atom_browser_main_parts_posix.cc
  our    100644 d79e60049f4db41b7b992c412cf271d461227115 atom/browser/atom_browser_main_parts_posix.cc
  their  100644 d208ea8b7447e8ac0d451eb9f555eb2183c85afc atom/browser/atom_browser_main_parts_posix.cc
@@ -120,7 +120,12 @@
   size_t bytes_read = 0;
   do {
     ssize_t ret = HANDLE_EINTR(
+<<<<<<< .our
         read(shutdown_fd_, reinterpret_cast<char*>(&signal) + bytes_read,
+=======
+        read(shutdown_fd_,
+             reinterpret_cast<char*>(&signal) + bytes_read,
+>>>>>>> .their
              sizeof(signal) - bytes_read));
     if (ret < 0) {
       NOTREACHED() << "Unexpected error: " << strerror(errno);
changed in both
  base   100644 6df090f9cf268fb70cf11d4fef85e1d6dbbfd65a atom/browser/atom_download_manager_delegate.cc
  our    100644 83276affb18df31ebe64fad6c53960baad498582 atom/browser/atom_download_manager_delegate.cc
  their  100644 0a79ee0195010c22c5b016a7e98ae6a091c2845c atom/browser/atom_download_manager_delegate.cc
@@ -97,7 +97,11 @@
   // Show save dialog if save path was not set already on item
   file_dialog::DialogSettings settings;
   settings.parent_window = window;
+<<<<<<< .our
   settings.force_detached = offscreen;
+=======
+  settings.force_detached = (window != nullptr) && window->is_offscreen_dummy();
+>>>>>>> .their
   settings.title = item->GetURL().spec();
   settings.default_path = default_path;
   if (path.empty() && file_dialog::ShowSaveDialog(settings, &path)) {
changed in both
  base   100644 d113e656084a626b246042f719145614c29bcfaa atom/browser/atom_web_ui_controller_factory.cc
  our    100644 b4e8c1b130a07e7be99b1cd136cd1d84b7bcd275 atom/browser/atom_web_ui_controller_factory.cc
  their  100644 3262dc974095405c563feb25bf5d03949462f130 atom/browser/atom_web_ui_controller_factory.cc
removed in local
  base   100644 715b2c540ec2c71bb2d67c78adb96a7c4c60f4a8 brightray/browser/net/devtools_network_protocol_handler.cc
  their  100644 caf738435fdf73fc9c490f619db57207e8ac515b brightray/browser/net/devtools_network_protocol_handler.cc
