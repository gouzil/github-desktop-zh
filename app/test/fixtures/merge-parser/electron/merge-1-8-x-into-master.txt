changed in both
  base   100644 e3a808718b918ad0b158ee4e8d0fdbb811fbf191 .circleci/config.yml
  our    100644 6d44d618aabcce04c60344f2274dec5b0c2a1f68 .circleci/config.yml
  their  100644 0563a8274cd113b56243a76f5057013bfafb7118 .circleci/config.yml
@@ -352,6 +352,7 @@
 version: 2
 jobs:
   electron-linux-arm:
+<<<<<<< .our
     environment:
       TARGET_ARCH: arm
     <<: *build-defaults
@@ -359,6 +360,13 @@
 
   electron-linux-arm-test:
     machine: true
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: arm
+    resource_class: 2xlarge
+>>>>>>> .their
     steps:
       - attach_workspace:
           at: /tmp/workspace/project/out
@@ -391,6 +399,7 @@
     resource_class: 2xlarge
 
   electron-linux-arm64:
+<<<<<<< .our
     environment:
       TARGET_ARCH: arm64
     <<: *build-defaults
@@ -398,6 +407,13 @@
 
   electron-linux-arm64-test:
     machine: true
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: arm64
+    resource_class: 2xlarge
+>>>>>>> .their
     steps:
       - attach_workspace:
           at: /tmp/workspace/project/out
@@ -430,12 +446,19 @@
     resource_class: 2xlarge
 
   electron-linux-ia32:
+<<<<<<< .our
     environment:
       TARGET_ARCH: ia32
       DISPLAY: ':99.0'
       RUN_TESTS: true
       RUN_HEADLESS_TESTS: true
     <<: *build-defaults
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: ia32
+>>>>>>> .their
     resource_class: xlarge
 
   electron-linux-ia32-release-nightly:
@@ -447,12 +470,20 @@
     resource_class: xlarge
 
   electron-linux-mips64el:
+<<<<<<< .our
     environment:
       TARGET_ARCH: mips64el
     <<: *build-defaults
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: mips64el
+>>>>>>> .their
     resource_class: xlarge
 
   electron-linux-x64:
+<<<<<<< .our
     environment:
       TARGET_ARCH: x64
       DISPLAY: ':99.0'
@@ -469,10 +500,107 @@
       NIGHTLY_BUILD: true
     <<: *build-defaults
     resource_class: xlarge
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: x64
+          DISPLAY: ':99.0'
+    resource_class: 2xlarge
+    steps:
+      - checkout
+      - run:
+          name: Setup for headless testing
+          command: sh -e /etc/init.d/xvfb start
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         no_output_timeout: 30m
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Test
+          environment:
+            MOCHA_FILE: junit/test-results.xml
+            MOCHA_REPORTER: mocha-junit-reporter
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Testing Electron debug build'
+                mkdir junit
+                script/test.py --ci --rebuild_native_modules
+             else
+                echo 'Skipping testing on release build'
+             fi
+      - run:
+          name: Verify FFmpeg
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Verifying ffmpeg on debug build'
+                script/verify-ffmpeg.py
+             else
+                echo 'Skipping verify ffmpeg on release build'
+             fi
+      - run:
+          name: Generate Typescript Definitions
+          command: npm run create-typescript-definitions
+      - store_test_results:
+          path: junit
+      - store_artifacts:
+          path: junit
+      - store_artifacts:
+          path: out/electron.d.ts
+      - store_artifacts:
+          path: out/electron-api.json
+>>>>>>> .their
 
   electron-osx-x64:
     environment:
       TARGET_ARCH: x64
+<<<<<<< .our
       RUN_TESTS: true
       INSTALL_MACOS_NODE: true
     macos:
@@ -488,11 +616,109 @@
     macos:
       xcode: "8.3.3"
     <<: *build-steps
+=======
+    macos:
+      xcode: "9.0"
+    resource_class: 2xlarge
+    steps:
+      - checkout
+      - run:
+          name: Reclaim disk space
+          command: |
+            df -h
+            sudo rm -rf /Library/Developer/CoreSimulator
+            df -h
+            sysctl -n hw.ncpu
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         no_output_timeout: 30m
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Test
+          environment:
+            MOCHA_FILE: junit/test-results.xml
+            MOCHA_REPORTER: mocha-junit-reporter
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Testing Electron debug build'
+                mkdir junit
+                script/test.py --ci --rebuild_native_modules
+             else
+                echo 'Skipping testing on release build'
+             fi
+      - run:
+          name: Verify FFmpeg
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Verifying ffmpeg on debug build'
+                script/verify-ffmpeg.py
+             else
+                echo 'Skipping verify ffmpeg on release build'
+             fi
+      - run:
+          name: Generate Typescript Definitions
+          command: npm run create-typescript-definitions
+      - store_test_results:
+          path: junit
+      - store_artifacts:
+          path: junit
+      - store_artifacts:
+          path: out/electron.d.ts
+      - store_artifacts:
+          path: out/electron-api.json
+>>>>>>> .their
 
   electron-mas-x64:
     environment:
       TARGET_ARCH: x64
       MAS_BUILD: 1
+<<<<<<< .our
       RUN_TESTS: true
       INSTALL_MACOS_NODE: true
     macos:
@@ -668,6 +894,103 @@
       GN_EXTRA_ARGS: 'is_mas_build = true'
     <<: *gn-mac-build-machine
     <<: *gn-mac-build-steps
+=======
+    macos:
+      xcode: "9.0"
+    resource_class: 2xlarge
+    steps:
+      - checkout
+      - run:
+          name: Reclaim disk space
+          command: |
+            df -h
+            sudo rm -rf /Library/Developer/CoreSimulator
+            df -h
+            sysctl -n hw.ncpu
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         no_output_timeout: 30m
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Test
+          environment:
+            MOCHA_FILE: junit/test-results.xml
+            MOCHA_REPORTER: mocha-junit-reporter
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Testing Electron debug build'
+                mkdir junit
+                script/test.py --ci --rebuild_native_modules
+             else
+                echo 'Skipping testing on release build'
+             fi
+      - run:
+          name: Verify FFmpeg
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Verifying ffmpeg on debug build'
+                script/verify-ffmpeg.py
+             else
+                echo 'Skipping verify ffmpeg on release build'
+             fi
+      - run:
+          name: Generate Typescript Definitions
+          command: npm run create-typescript-definitions
+      - store_test_results:
+          path: junit
+      - store_artifacts:
+          path: junit
+      - store_artifacts:
+          path: out/electron.d.ts
+      - store_artifacts:
+          path: out/electron-api.json
+>>>>>>> .their
 
 workflows:
   version: 2
@@ -689,12 +1012,19 @@
   build-x64:
     jobs:
       - electron-linux-x64
+<<<<<<< .our
+=======
+  build-mips64el:
+    jobs:
+      - electron-linux-mips64el
+>>>>>>> .their
   build-osx-x64:
     jobs:
       - electron-osx-x64
   build-mas-x64:
     jobs:
       - electron-mas-x64
+<<<<<<< .our
   build-gn-linux:
     jobs:
       - electron-gn-linux-x64-debug-fyi
@@ -745,3 +1075,5 @@
       - electron-gn-linux-arm64-release-fyi
       - electron-gn-mas-release-fyi
       - electron-gn-osx-release-fyi
+=======
+>>>>>>> .their
changed in both
  base   100644 eb045368b7a5ce226368c7c2955db1fe1ac676e5 .gitignore
  our    100644 f393b1cdcef87b41bb3ed47ebae59757fed3a780 .gitignore
  their  100644 97d35686044a0257a78fc58ed5fa2f096a6aec66 .gitignore
@@ -27,6 +27,7 @@
 /external_binaries/
 /out/
 /vendor/.gclient
+<<<<<<< .our
 /vendor/debian_jessie_mips64-sysroot/
 /vendor/debian_stretch_amd64-sysroot/
 /vendor/debian_stretch_arm-sysroot/
@@ -34,6 +35,17 @@
 /vendor/debian_stretch_i386-sysroot/
 /vendor/gcc-4.8.3-d197-n64-loongson/
 /vendor/readme-gcc483-loongson.txt
+=======
+/vendor/cross-gcc-4.9.3-n64-loongson-rc5.4
+/vendor/debian_jessie_amd64-sysroot/
+/vendor/debian_jessie_arm-sysroot/
+/vendor/debian_jessie_arm64-sysroot/
+/vendor/debian_jessie_i386-sysroot/
+/vendor/debian_jessie_mips64-sysroot/
+/vendor/debian_wheezy_amd64-sysroot/
+/vendor/debian_wheezy_arm-sysroot/
+/vendor/debian_wheezy_i386-sysroot/
+>>>>>>> .their
 /vendor/download/
 /vendor/llvm-build/
 /vendor/llvm/
changed in both
  base   100644 bff9a648f5bd1180cc5b1c9a2bc6fc080c09b616 CONTRIBUTING.md
  our    100644 414f83db905db904728facf3b40e70e7b7973193 CONTRIBUTING.md
  their  100644 fffa69e5aad572e7922eb83858572198cee0e453 CONTRIBUTING.md
changed in both
  base   100644 58da91e125094253096e1317eb10b2fc33901860 Dockerfile
  our    100644 74e5eeedea9bea87cd7a98ac2cb63f4376275a2a Dockerfile
  their  100644 526603ec9bac3e465ee378d22a49fa0abe72cee4 Dockerfile
@@ -7,8 +7,13 @@
 RUN chmod a+rwx /home
 
 # Install node.js
+<<<<<<< .our
 RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
 RUN apt-get install -y nodejs
+=======
+RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
+RUN apt-get update && apt-get install -y --force-yes nodejs
+>>>>>>> .their
 
 # Install wget used by crash reporter
 RUN apt-get install -y wget
added in both
  our    100644 a95dcfb73ddc8dcb4db9c8a82655e49580135dd9 Dockerfile.arm64v8
  their  100644 6272c9d16cf63ecbda6dae80592939a100233302 Dockerfile.arm64v8
@@ -42,6 +42,10 @@
  python-setuptools \
  python-pip \
  python-dbusmock \
+<<<<<<< .our
+=======
+ unzip \
+>>>>>>> .their
  wget \
  xvfb
 
changed in both
  base   100644 3c3a610ecab99f40e7db8441414a3089fabef045 Dockerfile.circleci
  our    100644 d369c8c640161fc3ba65935297aec7dd27eb1e9f Dockerfile.circleci
  their  100644 a186769291fa9010ffa4456ec08ab84f57aee9f8 Dockerfile.circleci
@@ -3,8 +3,13 @@
 USER root
 
 # Install node.js
+<<<<<<< .our
 RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
 RUN apt-get install -y nodejs
+=======
+RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
+RUN apt-get update && apt-get install -y --force-yes nodejs
+>>>>>>> .their
 
 # Install wget used by crash reporter
 RUN apt-get install -y wget
added in remote
  their  100644 1567ad810092ec3eb4efae628c38403a775e4d65 Jenkinsfile.arm64
@@ -0,0 +1,36 @@
+pipeline {
+  agent {
+    docker {
+      image 'electronbuilds/arm64v8:0.0.3'
+      args '--privileged'
+    }
+  }
+  environment {
+    TARGET_ARCH='arm64'
+    DISPLAY=':99.0'
+    MOCHA_TIMEOUT='60000'
+  }
+  stages {
+    stage('Bootstrap') {
+      steps {
+        sh 'script/bootstrap.py -v --dev --target_arch=$TARGET_ARCH'
+      }
+    }
+    stage('Build') {
+      steps {
+        sh 'script/build.py -c D --ninja-path /usr/local/ninja/ninja'
+      }
+    }
+    stage('Test') {
+      steps {
+        sh '/etc/init.d/xvfb start'
+        sh 'script/test.py --ci'
+      }
+    }
+  }
+  post {
+    always {
+      cleanWs()
+    }
+  }
+}
changed in both
  base   100644 d9ad098a6aca95172956ff4ed66b9542346e0771 README.md
  our    100644 ec09364417b767ac59b2d970fee5e2ab2db2173b README.md
  their  100644 1ea1ec27294ad3d8e85092b13dbd9cacfcdf38d0 README.md
changed in both
  base   100644 ff2f1018423a244508c90ad7554ca278d2b2a66a SECURITY.md
  our    100644 c113ff00e06f0fd2d5025b7fd87fa8d6bc9fcf74 SECURITY.md
  their  100644 a0d18da90d90d51745e3f9405991f9d8d067058e SECURITY.md
changed in both
  base   100644 ce0baaf989bdbd6897fa333d3af88d1d573a2bd2 appveyor.yml
  our    100644 67a2b2124619d866f67d849f57f3548ba28be26a appveyor.yml
  their  100644 5ee73c661b1079e9bf252868b31814d3aa4c2760 appveyor.yml
@@ -1,3 +1,4 @@
+<<<<<<< .our
 version: 1.0.{build}
 branches:
   except:
@@ -6,6 +7,10 @@
 image: electron-16-vs2017-15.4.5
 environment:
   DISABLE_CRASH_REPORTER_TESTS: true
+=======
+build_cloud: electron-16
+image: electron-16-vs2015
+>>>>>>> .their
 build_script:
 - ps: >-
     if(($env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME -split "/")[0] -eq ($env:APPVEYOR_REPO_NAME -split "/")[0]) {
@@ -61,6 +66,7 @@
 - path: test-results.xml
   name: test-results.xml
 deploy_script:
+<<<<<<< .our
 - ps: >-
     if (Test-Path Env:\ELECTRON_RELEASE) {
       if (Test-Path Env:\RUN_RELEASE_BUILD) {
@@ -71,3 +77,6 @@
         & python script\upload.py
       }
     }
+=======
+- ps: "if (Test-Path Env:\\ELECTRON_RELEASE) {\n  if (Test-Path Env:\\RUN_RELEASE_BUILD) {\n    Write-Output \"Uploading Electron release distribution to s3\"\n    & python script\\upload.py --upload_to_s3\n  } else {\n    Write-Output \"Uploading Electron release distribution to github releases\"\n    & python script\\upload.py\n  }\n} else {\n  Write-Output \"Skipping upload distribution because build is not for release\"\n}"
+>>>>>>> .their
changed in both
  base   100644 e1603fa5942f7b000c3385648530255032e775a2 atom/app/atom_library_main.h
  our    100644 2c7a27caa20a411558010c3c58bd78e7850c0737 atom/app/atom_library_main.h
  their  100644 63d285bb5e4838578d23505d7738c9ac88575df1 atom/app/atom_library_main.h
@@ -9,7 +9,12 @@
 
 #if defined(OS_MACOSX)
 extern "C" {
+<<<<<<< .our
 __attribute__((visibility("default"))) int AtomMain(int argc, char* argv[]);
+=======
+__attribute__((visibility("default")))
+int AtomMain(int argc, char* argv[]);
+>>>>>>> .their
 
 #ifdef ENABLE_RUN_AS_NODE
 __attribute__((visibility("default"))) int AtomInitializeICUandStartNode(
changed in both
  base   100644 7ee7522934689937f7be7b0f866134bf611c7d69 atom/app/atom_library_main.mm
  our    100644 57a519fcd0db28548ea75034cf92191161183385 atom/app/atom_library_main.mm
  their  100644 ae096acd4a931d397e285643d36580625dde14bf atom/app/atom_library_main.mm
@@ -14,6 +14,10 @@
 #include "brightray/common/mac/main_application_bundle.h"
 #include "content/public/app/content_main.h"
 
+<<<<<<< .our
+=======
+#if defined(OS_MACOSX)
+>>>>>>> .their
 int AtomMain(int argc, char* argv[]) {
   atom::AtomMainDelegate delegate;
   content::ContentMainParams params(&delegate);
changed in both
  base   100644 fa854ca1637a677332f4b01fdede12b23b945720 atom/app/atom_main.cc
  our    100644 fc77100d9acb58221c35f364c4db7866a44d347d atom/app/atom_main.cc
  their  100644 5fd93a88d60c926ebd50c4b453693b5ce066c20d atom/app/atom_main.cc
@@ -93,11 +93,15 @@
   }
 #endif
 
+<<<<<<< .our
 #ifdef ENABLE_RUN_AS_NODE
   bool run_as_node = IsEnvSet(kRunAsNode);
 #else
   bool run_as_node = false;
 #endif
+=======
+  bool run_as_node = IsEnvSet(kRunAsNode);
+>>>>>>> .their
 
   // Make sure the output is printed to console.
   if (run_as_node || !IsEnvSet("ELECTRON_NO_ATTACH_CONSOLE"))
@@ -132,10 +136,14 @@
     auto ret = atom::NodeMain(argv.size(), argv.data());
     std::for_each(argv.begin(), argv.end(), free);
     return ret;
+<<<<<<< .our
   }
 #endif
 
   if (IsEnvSet("ELECTRON_INTERNAL_CRASH_SERVICE")) {
+=======
+  } else if (IsEnvSet("ELECTRON_INTERNAL_CRASH_SERVICE")) {
+>>>>>>> .their
     return crash_service::Main(cmd);
   }
 
@@ -156,7 +164,10 @@
 #elif defined(OS_LINUX)  // defined(OS_WIN)
 
 int main(int argc, char* argv[]) {
+<<<<<<< .our
 #ifdef ENABLE_RUN_AS_NODE
+=======
+>>>>>>> .their
   if (IsEnvSet(kRunAsNode)) {
     base::i18n::InitializeICU();
     base::AtExitManager atexit_manager;
@@ -175,7 +186,10 @@
 #else  // defined(OS_LINUX)
 
 int main(int argc, char* argv[]) {
+<<<<<<< .our
 #ifdef ENABLE_RUN_AS_NODE
+=======
+>>>>>>> .their
   if (IsEnvSet(kRunAsNode)) {
     return AtomInitializeICUandStartNode(argc, argv);
   }
added in both
  our    100644 23e870cf4a32aecfc246a81edad46971b4456a55 atom/app/command_line_args.cc
  their  100644 82edd15b4ac52e5b14effdd8ff7e112f4331293b atom/app/command_line_args.cc
@@ -2,15 +2,30 @@
 // Use of this source code is governed by the MIT license that can be
 // found in the LICENSE file.
 
+<<<<<<< .our
 #include "atom/app/command_line_args.h"
 
+=======
+#include <string>
+
+#include "atom/app/command_line_args.h"
+
+#include "base/strings/string_util.h"
+#include "base/strings/utf_string_conversions.h"
+#include "content/public/common/content_switches.h"
+
+>>>>>>> .their
 namespace {
 
 bool IsUrlArg(const base::CommandLine::CharType* arg) {
   // the first character must be a letter for this to be a URL
   auto c = *arg;
   if (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')) {
+<<<<<<< .our
     for (auto* p = arg + 1; *p; ++p) {
+=======
+    for (auto p = arg + 1; *p; ++p) {
+>>>>>>> .their
       c = *p;
 
       // colon indicates that the argument starts with a URI scheme
@@ -31,12 +46,1345 @@
   return false;
 }
 
+<<<<<<< .our
+=======
+const char* blacklist[] = {
+  // node
+  "inspect",
+  "inspect-brk",
+
+  // chromium switches:
+  // find ./ \( -name "*switches.cc" -o -name "*switch_list.h" \) \
+  //  | xargs grep -P --no-filename '"\S+"[);]$' \
+  //  | perl -pe 's|^.*?"(\S+)"[);]$|  "$1",|'; \
+  //  | LANG="C" sort | uniq
+  "/prefetch:1",
+  "/prefetch:2",
+  "/prefetch:3",
+  "/prefetch:4",
+  "/prefetch:5",
+  "/prefetch:6",
+  "/prefetch:8",
+  "0",
+  "?",
+  "BlacklistOnly",
+  "ChromeOSMemoryPressureHandling",
+  "Disabled",
+  "OnlineCheckOnly",
+  "SafeSites",
+  "accept-resource-provider",
+  "adaboost",
+  "aec-refined-adaptive-filter",
+  "agc-startup-min-volume",
+  "aggressive",
+  "aggressive-cache-discard",
+  "aggressive-tab-discard",
+  "all-toolchains",
+  "allow-cross-origin-auth-prompt",
+  "allow-external-pages",
+  "allow-failed-policy-fetch-for-test",
+  "allow-file-access-from-files",
+  "allow-hidden-media-playback",
+  "allow-http-background-page",
+  "allow-http-screen-capture",
+  "allow-insecure-localhost",
+  "allow-legacy-extension-manifests",
+  "allow-loopback-in-peer-connection",
+  "allow-nacl-crxfs-api",
+  "allow-nacl-file-handle-api",
+  "allow-nacl-socket-api",
+  "allow-no-sandbox-job",
+  "allow-outdated-plugins",
+  "allow-ra-in-dev-mode",
+  "allow-running-insecure-content",
+  "allow-sandbox-debugging",
+  "allow-silent-push",
+  "alsa-check-close-timeout",
+  "alsa-enable-upsampling",
+  "alsa-fixed-output-sample-rate",
+  "alsa-input-device",
+  "alsa-mute-device-name",
+  "alsa-mute-element-name",
+  "alsa-output-avail-min",
+  "alsa-output-buffer-size",
+  "alsa-output-device",
+  "alsa-output-period-size",
+  "alsa-output-start-threshold",
+  "alsa-volume-device-name",
+  "alsa-volume-element-name",
+  "also-emit-success-logs",
+  "always-authorize-plugins",
+  "always-on",
+  "always-use-complex-text",
+  "alwaystrue",
+  "android-fonts-path",
+  "android-stderr-port",
+  "android-stdin-port",
+  "android-stdout-port",
+  "angle",
+  "app",
+  "app-auto-launched",
+  "app-id",
+  "app-mode-auth-code",
+  "app-mode-oauth-token",
+  "app-mode-oem-manifest",
+  "app-shell-allow-roaming",
+  "app-shell-host-window-size",
+  "app-shell-preferred-network",
+  "app-shell-refresh-token",
+  "app-shell-user",
+  "apple",
+  "apps-gallery-download-url",
+  "apps-gallery-update-url",
+  "apps-gallery-url",
+  "apps-keep-chrome-alive-in-tests",
+  "arc-always-start",
+  "arc-availability",
+  "arc-available",
+  "args",
+  "artifacts-dir",
+  "ash-adjustable-large-cursor",
+  "ash-animate-from-boot-splash-screen",
+  "ash-constrain-pointer-to-root",
+  "ash-copy-host-background-at-boot",
+  "ash-debug-shortcuts",
+  "ash-dev-shortcuts",
+  "ash-disable-maximize-mode-window-backdrop",
+  "ash-disable-screen-orientation-lock",
+  "ash-disable-touch-exploration-mode",
+  "ash-enable-magnifier-key-scroller",
+  "ash-enable-mirrored-screen",
+  "ash-enable-palette-on-all-displays",
+  "ash-enable-smooth-screen-rotation",
+  "ash-enable-software-mirroring",
+  "ash-enable-unified-desktop",
+  "ash-estimated-presentation-delay",
+  "ash-force-enable-palette",
+  "ash-hide-notifications-for-factory",
+  "ash-host-window-bounds",
+  "ash-shelf-color",
+  "ash-shelf-color-scheme",
+  "ash-touch-hud",
+  "ash-webui-init",
+  "attestation-server",
+  "audio-buffer-size",
+  "aura-legacy-power-button",
+  "auth-ext-path",
+  "auth-server-whitelist",
+  "auth-spnego-account-type",
+  "auto",
+  "auto-open-devtools-for-tabs",
+  "auto-select-desktop-capture-source",
+  "blink-settings",
+  "bootstrap",
+  "browser-subprocess-path",
+  "browser-test",
+  "bwsi",
+  "bypass-app-banner-engagement-checks",
+  "canvas-msaa-sample-count",
+  "cast-initial-screen-height",
+  "cast-initial-screen-width",
+  "cc-layer-tree-test-long-timeout",
+  "cc-layer-tree-test-no-timeout",
+  "cc-rebaseline-pixeltests",
+  "cellular-first",
+  "cellular-only",
+  "check-for-update-interval",
+  "check-layout-test-sys-deps",
+  "child-process",
+  "child-wallpaper-large",
+  "child-wallpaper-small",
+  "cipher-suite-blacklist",
+  "clamshell",
+  "class",
+  "clear-token-service",
+  "cloud-print-file",
+  "cloud-print-file-type",
+  "cloud-print-job-title",
+  "cloud-print-print-ticket",
+  "cloud-print-setup-proxy",
+  "cloud-print-url",
+  "cloud-print-xmpp-endpoint",
+  "color",
+  "compensate-for-unstable-pinch-zoom",
+  "compile-shader-always-succeeds",
+  "component-updater",
+  "connectivity-check-url",
+  "conservative",
+  "content-image-texture-target",
+  "content-shell-host-window-size",
+  "controller",
+  "crash-dumps-dir",
+  "crash-on-failure",
+  "crash-on-hang-threads",
+  "crash-server-url",
+  "crash-test",
+  "crashpad-handler",
+  "create-browser-on-startup-for-tests",
+  "create-default-gl-context",
+  "cros-region",
+  "cros-regions-mode",
+  "crosh-command",
+  "cryptauth-http-host",
+  "custom-devtools-frontend",
+  "custom-launcher-page",
+  "custom_summary",
+  "d3d11",
+  "d3d9",
+  "daemon",
+  "dark_muted",
+  "dark_vibrant",
+  "data-path",
+  "data-reduction-proxy-config-url",
+  "data-reduction-proxy-experiment",
+  "data-reduction-proxy-http-proxies",
+  "data-reduction-proxy-lo-fi",
+  "data-reduction-proxy-pingback-url",
+  "data-reduction-proxy-secure-proxy-check-url",
+  "data-reduction-proxy-server-experiments-disabled",
+  "data-reduction-proxy-warmup-url",
+  "dbus-stub",
+  "debug-devtools",
+  "debug-enable-frame-toggle",
+  "debug-packed-apps",
+  "debug-print",
+  "default",
+  "default-background-color",
+  "default-tile-height",
+  "default-tile-width",
+  "default-wallpaper-is-oem",
+  "default-wallpaper-large",
+  "default-wallpaper-small",
+  "demo",
+  "derelict-detection-timeout",
+  "derelict-idle-timeout",
+  "desktop",
+  "desktop-window-1080p",
+  "deterministic-fetch",
+  "device-management-url",
+  "device-scale-factor",
+  "devtools-flags",
+  "diagnostics",
+  "diagnostics-format",
+  "diagnostics-recovery",
+  "disable",
+  "disable-2d-canvas-clip-aa",
+  "disable-2d-canvas-image-chromium",
+  "disable-3d-apis",
+  "disable-accelerated-2d-canvas",
+  "disable-accelerated-jpeg-decoding",
+  "disable-accelerated-mjpeg-decode",
+  "disable-accelerated-video-decode",
+  "disable-add-to-shelf",
+  "disable-app-info-dialog-mac",
+  "disable-app-list-dismiss-on-blur",
+  "disable-app-window-cycling",
+  "disable-appcontainer",
+  "disable-arc-data-wipe",
+  "disable-arc-opt-in-verification",
+  "disable-audio-support-for-desktop-share",
+  "disable-autofill-keyboard-accessory-view",
+  "disable-avfoundation-overlays",
+  "disable-background-networking",
+  "disable-background-timer-throttling",
+  "disable-backgrounding-occluded-windows",
+  "disable-backing-store-limit",
+  "disable-blink-features",
+  "disable-boot-animation",
+  "disable-breakpad",
+  "disable-browser-task-scheduler",
+  "disable-bundled-ppapi-flash",
+  "disable-canvas-aa",
+  "disable-captive-portal-bypass-proxy",
+  "disable-cast-streaming-hw-encoding",
+  "disable-clear-browsing-data-counters",
+  "disable-client-side-phishing-detection",
+  "disable-cloud-import",
+  "disable-component-cloud-policy",
+  "disable-component-extensions-with-background-pages",
+  "disable-component-update",
+  "disable-composited-antialiasing",
+  "disable-contextual-search",
+  "disable-d3d11",
+  "disable-databases",
+  "disable-datasaver-prompt",
+  "disable-default-apps",
+  "disable-demo-mode",
+  "disable-device-disabling",
+  "disable-device-discovery-notifications",
+  "disable-dinosaur-easter-egg",
+  "disable-direct-composition",
+  "disable-direct-composition-layers",
+  "disable-directwrite-for-ui",
+  "disable-display-color-calibration",
+  "disable-display-list-2d-canvas",
+  "disable-distance-field-text",
+  "disable-domain-blocking-for-3d-apis",
+  "disable-domain-reliability",
+  "disable-download-image-renaming",
+  "disable-drive-search-in-app-launcher",
+  "disable-dwm-composition",
+  "disable-encryption-migration",
+  "disable-eol-notification",
+  "disable-es3-apis",
+  "disable-es3-gl-context",
+  "disable-extensions",
+  "disable-extensions-except",
+  "disable-extensions-file-access-check",
+  "disable-extensions-http-throttling",
+  "disable-fast-web-scroll-view-insets",
+  "disable-features",
+  "disable-field-trial-config",
+  "disable-file-system",
+  "disable-flash-3d",
+  "disable-flash-stage3d",
+  "disable-fullscreen-low-power-mode",
+  "disable-fullscreen-tab-detaching",
+  "disable-gaia-services",
+  "disable-gesture-editing",
+  "disable-gesture-requirement-for-media-playback",
+  "disable-gesture-requirement-for-presentation",
+  "disable-gesture-typing",
+  "disable-gl-drawing-for-tests",
+  "disable-gl-error-limit",
+  "disable-gl-extensions",
+  "disable-glsl-translator",
+  "disable-gpu",
+  "disable-gpu-async-worker-context",
+  "disable-gpu-compositing",
+  "disable-gpu-driver-bug-workarounds",
+  "disable-gpu-early-init",
+  "disable-gpu-memory-buffer-compositor-resources",
+  "disable-gpu-memory-buffer-video-frames",
+  "disable-gpu-process-crash-limit",
+  "disable-gpu-program-cache",
+  "disable-gpu-rasterization",
+  "disable-gpu-sandbox",
+  "disable-gpu-shader-disk-cache",
+  "disable-gpu-vsync",
+  "disable-gpu-watchdog",
+  "disable-hang-monitor",
+  "disable-hid-detection-on-oobe",
+  "disable-hide-inactive-stacked-tab-close-buttons",
+  "disable-histogram-customizer",
+  "disable-hosted-app-shim-creation",
+  "disable-hosted-apps-in-windows",
+  "disable-http2",
+  "disable-in-process-stack-traces",
+  "disable-infobars",
+  "disable-input-ime-api",
+  "disable-input-view",
+  "disable-ios-password-generation",
+  "disable-ios-password-suggestions",
+  "disable-ios-physical-web",
+  "disable-javascript-harmony-shipping",
+  "disable-kill-after-bad-ipc",
+  "disable-lcd-text",
+  "disable-legacy-window",
+  "disable-local-storage",
+  "disable-logging",
+  "disable-login-animations",
+  "disable-low-end-device-mode",
+  "disable-low-latency-dxva",
+  "disable-low-res-tiling",
+  "disable-lru-snapshot-cache",
+  "disable-mac-overlays",
+  "disable-mac-views-native-app-windows",
+  "disable-main-frame-before-activation",
+  "disable-md-oobe",
+  "disable-media-session-api",
+  "disable-media-suspend",
+  "disable-merge-key-char-events",
+  "disable-minimize-on-second-launcher-item-click",
+  "disable-mojo-renderer",
+  "disable-mtp-write-support",
+  "disable-multi-display-layout",
+  "disable-namespace-sandbox",
+  "disable-native-cups",
+  "disable-native-gpu-memory-buffers",
+  "disable-network-portal-notification",
+  "disable-new-channel-switcher-ui",
+  "disable-new-kiosk-ui",
+  "disable-new-korean-ime",
+  "disable-new-zip-unpacker",
+  "disable-notifications",
+  "disable-ntp-popular-sites",
+  "disable-nv12-dxgi-video",
+  "disable-offer-store-unmasked-wallet-cards",
+  "disable-offer-upload-credit-cards",
+  "disable-office-editing-component-extension",
+  "disable-offline-auto-reload",
+  "disable-offline-auto-reload-visible-only",
+  "disable-overscroll-edge-effect",
+  "disable-panel-fitting",
+  "disable-partial-raster",
+  "disable-password-generation",
+  "disable-payment-request",
+  "disable-pepper-3d",
+  "disable-pepper-3d-image-chromium",
+  "disable-per-monitor-dpi",
+  "disable-permission-action-reporting",
+  "disable-permissions-api",
+  "disable-physical-keyboard-autocorrect",
+  "disable-pinch",
+  "disable-pnacl-crash-throttling",
+  "disable-popup-blocking",
+  "disable-prefer-compositing-to-lcd-text",
+  "disable-presentation-api",
+  "disable-print-preview",
+  "disable-prompt-on-repost",
+  "disable-pull-to-refresh-effect",
+  "disable-push-api-background-mode",
+  "disable-quic",
+  "disable-reading-from-canvas",
+  "disable-remote-core-animation",
+  "disable-remote-fonts",
+  "disable-remote-playback-api",
+  "disable-renderer-accessibility",
+  "disable-renderer-backgrounding",
+  "disable-renderer-priority-management",
+  "disable-resize-lock",
+  "disable-rgba-4444-textures",
+  "disable-rollback-option",
+  "disable-rtc-smoothness-algorithm",
+  "disable-screen-orientation-lock",
+  "disable-search-geolocation-disclosure",
+  "disable-seccomp-filter-sandbox",
+  "disable-settings-window",
+  "disable-setuid-sandbox",
+  "disable-shader-name-hashing",
+  "disable-shared-workers",
+  "disable-signin-promo",
+  "disable-signin-scoped-device-id",
+  "disable-single-click-autofill",
+  "disable-slimming-paint-invalidation",
+  "disable-smart-virtual-keyboard",
+  "disable-smooth-scrolling",
+  "disable-software-rasterizer",
+  "disable-speech-api",
+  "disable-suggestions-ui",
+  "disable-sync",
+  "disable-sync-app-list",
+  "disable-sync-types",
+  "disable-system-timezone-automatic-detection",
+  "disable-tab-for-desktop-share",
+  "disable-tab-strip-autoscroll-new-tabs",
+  "disable-threaded-animation",
+  "disable-threaded-compositing",
+  "disable-threaded-scrolling",
+  "disable-touch-adjustment",
+  "disable-touch-drag-drop",
+  "disable-translate",
+  "disable-translate-new-ux",
+  "disable-usb-keyboard-detect",
+  "disable-v8-idle-tasks",
+  "disable-vaapi-accelerated-video-encode",
+  "disable-views-rect-based-targeting",
+  "disable-virtual-keyboard-overscroll",
+  "disable-voice-input",
+  "disable-volume-adjust-sound",
+  "disable-wake-on-wifi",
+  "disable-web-notification-custom-layouts",
+  "disable-web-security",
+  "disable-webgl",
+  "disable-webgl-image-chromium",
+  "disable-webrtc-encryption",
+  "disable-webrtc-hw-decoding",
+  "disable-webrtc-hw-encoding",
+  "disable-webrtc-hw-vp8-encoding",
+  "disable-win32k-lockdown",
+  "disable-xss-auditor",
+  "disable-zero-browsers-open-for-tests",
+  "disable-zero-copy",
+  "disable-zero-copy-dxgi-video",
+  "disabled",
+  "disk-cache-dir",
+  "disk-cache-size",
+  "display",
+  "dmg-device",
+  "dns-log-details",
+  "dom-automation",
+  "dotfile",
+  "draw-view-bounds-rects",
+  "duck-flash",
+  "dump-browser-histograms",
+  "dump-dom",
+  "eafe-path",
+  "eafe-url",
+  "early-tracing",
+  "easy-unlock-app-path",
+  "edge-touch-filtering",
+  "egl",
+  "elevate",
+  "embedded-extension-options",
+  "emphasize-titles-in-omnibox-dropdown",
+  "emulate-shader-precision",
+  "enable-accelerated-2d-canvas",
+  "enable-accelerated-vpx-decode",
+  "enable-accessibility-tab-switcher",
+  "enable-account-consistency",
+  "enable-adaptive-selection-handle-orientation",
+  "enable-add-to-shelf",
+  "enable-aggressive-domstorage-flushing",
+  "enable-android-wallpapers-app",
+  "enable-app-info-dialog-mac",
+  "enable-app-list",
+  "enable-app-window-cycling",
+  "enable-appcontainer",
+  "enable-arc",
+  "enable-arc-oobe-optin",
+  "enable-audio-debug-recordings-from-extension",
+  "enable-autofill-keyboard-accessory-view",
+  "enable-automation",
+  "enable-benchmarking",
+  "enable-ble-advertising-in-apps",
+  "enable-blink-features",
+  "enable-bookmark-undo",
+  "enable-browser-side-navigation",
+  "enable-browser-task-scheduler",
+  "enable-canvas-2d-dynamic-rendering-mode-switching",
+  "enable-checker-imaging",
+  "enable-chromevox-arc-support",
+  "enable-clear-browsing-data-counters",
+  "enable-cloud-print-proxy",
+  "enable-cloud-print-xps",
+  "enable-color-correct-rendering",
+  "enable-color-correct-rendering-default-mode",
+  "enable-consumer-kiosk",
+  "enable-contextual-search",
+  "enable-crash-reporter",
+  "enable-crash-reporter-for-testing",
+  "enable-crx-hash-check",
+  "enable-data-reduction-proxy-bypass-warning",
+  "enable-data-reduction-proxy-carrier-test",
+  "enable-data-reduction-proxy-force-pingback",
+  "enable-data-reduction-proxy-lite-page",
+  "enable-data-reduction-proxy-savings-promo",
+  "enable-datasaver-prompt",
+  "enable-default-media-session",
+  "enable-device-discovery-notifications",
+  "enable-devtools-experiments",
+  "enable-direct-composition-layers",
+  "enable-display-list-2d-canvas",
+  "enable-distance-field-text",
+  "enable-distillability-service",
+  "enable-dom-distiller",
+  "enable-domain-reliability",
+  "enable-download-image-renaming",
+  "enable-drive-search-in-app-launcher",
+  "enable-drm-atomic",
+  "enable-embedded-extension-options",
+  "enable-encryption-migration",
+  "enable-es3-apis",
+  "enable-exclusive-audio",
+  "enable-experimental-accessibility-features",
+  "enable-experimental-canvas-features",
+  "enable-experimental-extension-apis",
+  "enable-experimental-input-view-features",
+  "enable-experimental-web-platform-features",
+  "enable-extension-activity-log-testing",
+  "enable-extension-activity-logging",
+  "enable-extension-assets-sharing",
+  "enable-fast-unload",
+  "enable-fast-web-scroll-view-insets",
+  "enable-features",
+  "enable-first-run-ui-transitions",
+  "enable-floating-virtual-keyboard",
+  "enable-font-antialiasing",
+  "enable-fullscreen-tab-detaching",
+  "enable-fullscreen-toolbar-reveal",
+  "enable-google-branded-context-menu",
+  "enable-gpu-async-worker-context",
+  "enable-gpu-benchmarking",
+  "enable-gpu-client-logging",
+  "enable-gpu-client-tracing",
+  "enable-gpu-command-logging",
+  "enable-gpu-debugging",
+  "enable-gpu-driver-debug-logging",
+  "enable-gpu-memory-buffer-compositor-resources",
+  "enable-gpu-memory-buffer-video-frames",
+  "enable-gpu-rasterization",
+  "enable-gpu-service-logging",
+  "enable-gpu-service-tracing",
+  "enable-grouped-history",
+  "enable-hardware-overlays",
+  "enable-harfbuzz-rendertext",
+  "enable-hdr",
+  "enable-heap-profiling",
+  "enable-hosted-app-quit-notification",
+  "enable-hosted-apps-in-windows",
+  "enable-hosted-mode",
+  "enable-hotword-hardware",
+  "enable-hung-renderer-infobar",
+  "enable-inband-text-tracks",
+  "enable-input-ime-api",
+  "enable-ios-handoff-to-other-devices",
+  "enable-ios-password-generation",
+  "enable-ios-physical-web",
+  "enable-kiosk-mode",
+  "enable-layer-lists",
+  "enable-lcd-text",
+  "enable-leak-detection",
+  "enable-local-file-accesses",
+  "enable-local-sync-backend",
+  "enable-logging",
+  "enable-login-screen-apps",
+  "enable-longpress-drag-selection",
+  "enable-low-end-device-mode",
+  "enable-low-res-tiling",
+  "enable-lru-snapshot-cache",
+  "enable-mac-views-native-app-windows",
+  "enable-main-frame-before-activation",
+  "enable-md-feedback",
+  "enable-md-policy-page",
+  "enable-media-suspend",
+  "enable-merge-key-char-events",
+  "enable-message-center-always-scroll-up-upon-notification-removal",
+  "enable-nacl",
+  "enable-nacl-debug",
+  "enable-nacl-nonsfi-mode",
+  "enable-native-gpu-memory-buffers",
+  "enable-natural-scroll-default",
+  "enable-navigation-tracing",
+  "enable-net-benchmarking",
+  "enable-network-information",
+  "enable-network-portal-notification",
+  "enable-network-service",
+  "enable-new-vp9-codec-string",
+  "enable-ntp-popular-sites",
+  "enable-ntp-search-engine-country-detection",
+  "enable-offer-store-unmasked-wallet-cards",
+  "enable-offer-upload-credit-cards",
+  "enable-offline-auto-reload",
+  "enable-offline-auto-reload-visible-only",
+  "enable-osk-overscroll",
+  "enable-override-bookmarks-ui",
+  "enable-partial-raster",
+  "enable-password-generation",
+  "enable-payment-request",
+  "enable-pepper-testing",
+  "enable-per-monitor-dpi",
+  "enable-permission-action-reporting",
+  "enable-physical-keyboard-autocorrect",
+  "enable-pinch",
+  "enable-pixel-output-in-tests",
+  "enable-plugin-placeholder-testing",
+  "enable-potentially-annoying-security-features",
+  "enable-power-overlay",
+  "enable-precache",
+  "enable-precise-memory-info",
+  "enable-prefer-compositing-to-lcd-text",
+  "enable-print-browser",
+  "enable-print-preview-register-promos",
+  "enable-profile-shortcut-manager",
+  "enable-profiling",
+  "enable-proximity-auth-bluetooth-low-energy-discovery",
+  "enable-proximity-auth-proximity-detection",
+  "enable-push-api-background-mode",
+  "enable-quic",
+  "enable-reader-mode-toolbar-icon",
+  "enable-refresh-token-annotation-request",
+  "enable-request-tablet-site",
+  "enable-rgba-4444-textures",
+  "enable-sandbox",
+  "enable-sandbox-logging",
+  "enable-screenshot-testing-with-mode",
+  "enable-scripts-require-action",
+  "enable-scroll-prediction",
+  "enable-service-manager-tracing",
+  "enable-settings-window",
+  "enable-sgi-video-sync",
+  "enable-signin-promo",
+  "enable-single-click-autofill",
+  "enable-site-engagement-eviction-policy",
+  "enable-site-settings",
+  "enable-skia-benchmarking",
+  "enable-slimming-paint-invalidation",
+  "enable-slimming-paint-v2",
+  "enable-smooth-scrolling",
+  "enable-spatial-navigation",
+  "enable-spdy-proxy-auth",
+  "enable-speech-dispatcher",
+  "enable-spelling-feedback-field-trial",
+  "enable-spotlight-actions",
+  "enable-stats-collection-bindings",
+  "enable-stats-table",
+  "enable-strict-mixed-content-checking",
+  "enable-strict-powerful-feature-restrictions",
+  "enable-suggestions-ui",
+  "enable-suggestions-with-substring-match",
+  "enable-supervised-user-managed-bookmarks-folder",
+  "enable-surface-synchronization",
+  "enable-swap-buffers-with-bounds",
+  "enable-sync-app-list",
+  "enable-sync-articles",
+  "enable-tab-audio-muting",
+  "enable-tcp-fastopen",
+  "enable-tether",
+  "enable-threaded-compositing",
+  "enable-threaded-texture-mailboxes",
+  "enable-thumbnail-retargeting",
+  "enable-tile-compression",
+  "enable-touch-calibration-setting",
+  "enable-touch-drag-drop",
+  "enable-touch-support-for-screen-magnifier",
+  "enable-touchpad-three-finger-click",
+  "enable-touchview",
+  "enable-trace-app-source",
+  "enable-tracing",
+  "enable-tracing-output",
+  "enable-translate-new-ux",
+  "enable-ui-devtools",
+  "enable-use-zoom-for-dsf",
+  "enable-user-controlled-alternate-protocol-ports",
+  "enable-user-metrics",
+  "enable-usermedia-screen-capturing",
+  "enable-video-player-chromecast-support",
+  "enable-viewport",
+  "enable-virtual-keyboard",
+  "enable-voice-interaction",
+  "enable-vp9-in-mp4",
+  "enable-vtune-support",
+  "enable-vulkan",
+  "enable-wayland-server",
+  "enable-web-notification-custom-layouts",
+  "enable-webfonts-intervention-trigger",
+  "enable-webfonts-intervention-v2",
+  "enable-webgl-draft-extensions",
+  "enable-webgl-image-chromium",
+  "enable-webrtc-event-logging-from-extension",
+  "enable-webrtc-srtp-aes-gcm",
+  "enable-webrtc-stun-origin",
+  "enable-webvr",
+  "enable-wifi-credential-sync",
+  "enable-win7-webrtc-hw-h264-decoding",
+  "enable-zero-copy",
+  "enable-zip-archiver-on-file-manager",
+  "enabled",
+  "enabled-2g",
+  "enabled-3g",
+  "enabled-slow2g",
+  "encode-binary",
+  "enforce",
+  "enforce-gl-minimums",
+  "enforce-webrtc-ip-permission-check",
+  "enforce_strict",
+  "enterprise-disable-arc",
+  "enterprise-enable-forced-re-enrollment",
+  "enterprise-enable-zero-touch-enrollment",
+  "enterprise-enrollment-initial-modulus",
+  "enterprise-enrollment-modulus-limit",
+  "error-console",
+  "explicitly-allowed-ports",
+  "expose-internals-for-testing",
+  "extension-content-verification",
+  "extension-process",
+  "extensions-install-verification",
+  "extensions-multi-account",
+  "extensions-not-webstore",
+  "extensions-on-chrome-urls",
+  "extensions-update-frequency",
+  "extra-search-query-params",
+  "fail-on-unused-args",
+  "fake-variations-channel",
+  "false",
+  "fast",
+  "fast-start",
+  "feedback-server",
+  "field-trial-handle",
+  "first-exec-after-boot",
+  "flag-switches-begin",
+  "flag-switches-end",
+  "font-cache-shared-handle",
+  "force-android-app-mode",
+  "force-app-mode",
+  "force-desktop-ios-promotion",
+  "force-dev-mode-highlighting",
+  "force-device-scale-factor",
+  "force-display-list-2d-canvas",
+  "force-fieldtrial-params",
+  "force-fieldtrials",
+  "force-first-run",
+  "force-first-run-ui",
+  "force-gpu-mem-available-mb",
+  "force-gpu-rasterization",
+  "force-happiness-tracking-system",
+  "force-load-easy-unlock-app-in-tests",
+  "force-local-ntp",
+  "force-login-manager-in-tests",
+  "force-mediafoundation",
+  "force-overlay-fullscreen-video",
+  "force-pnacl-subzero",
+  "force-renderer-accessibility",
+  "force-show-update-menu-badge",
+  "force-show-update-menu-item",
+  "force-system-compositor-mode",
+  "force-tablet-mode",
+  "force-ui-direction",
+  "force-variation-ids",
+  "force-video-overlays",
+  "force-wave-audio",
+  "force-webrtc-ip-handling-policy",
+  "full-memory-crash-report",
+  "gaia-url",
+  "gcm-checkin-url",
+  "gcm-mcs-endpoint",
+  "gcm-registration-url",
+  "generate-accessibility-test-expectations",
+  "gl",
+  "gl-composited-texture-quad-border",
+  "gl-shader-interm-output",
+  "gles",
+  "golden-screenshots-dir",
+  "google-apis-url",
+  "google-base-url",
+  "google-doodle-url",
+  "google-url",
+  "gpu-active-device-id",
+  "gpu-active-vendor-id",
+  "gpu-device-id",
+  "gpu-driver-bug-workarounds",
+  "gpu-driver-date",
+  "gpu-driver-vendor",
+  "gpu-driver-version",
+  "gpu-launcher",
+  "gpu-no-complete-info-collection",
+  "gpu-no-context-lost",
+  "gpu-process",
+  "gpu-program-cache-size-kb",
+  "gpu-rasterization-msaa-sample-count",
+  "gpu-sandbox-allow-sysv-shm",
+  "gpu-sandbox-failures-fatal",
+  "gpu-sandbox-start-early",
+  "gpu-secondary-device-ids",
+  "gpu-secondary-vendor-ids",
+  "gpu-startup-dialog",
+  "gpu-testing-device-id",
+  "gpu-testing-driver-date",
+  "gpu-testing-gl-renderer",
+  "gpu-testing-gl-vendor",
+  "gpu-testing-gl-version",
+  "gpu-testing-os-version",
+  "gpu-testing-secondary-device-ids",
+  "gpu-testing-secondary-vendor-ids",
+  "gpu-testing-vendor-id",
+  "gpu-vendor-id",
+  "guest-wallpaper-large",
+  "guest-wallpaper-small",
+  "h",
+  "has-chromeos-diamond-key",
+  "headless",
+  "help",
+  "hide",
+  "hide-icons",
+  "hide-scrollbars",
+  "history-entry-requires-user-gesture",
+  "homedir",
+  "homepage",
+  "host",
+  "host-pairing-oobe",
+  "host-resolver-retry-attempts",
+  "host-resolver-rules",
+  "host-rules",
+  "icu-data-dir",
+  "ignore-autocomplete-off-autofill",
+  "ignore-certificate-errors",
+  "ignore-gpu-blacklist",
+  "ignore-urlfetcher-cert-requests",
+  "ignore-user-profile-mapping-for-tests",
+  "in-process-gpu",
+  "incognito",
+  "inert-visual-viewport",
+  "input",
+  "inspect",
+  "inspect-brk",
+  "install-chrome-app",
+  "install-supervised-user-whitelists",
+  "instant-process",
+  "interests-url",
+  "invalidation-use-gcm-channel",
+  "ipc-connection-timeout",
+  "ipc-dump-directory",
+  "ipc-fuzzer-testcase",
+  "is-running-in-mash",
+  "isolate-extensions",
+  "isolate-sites-for-testing",
+  "javascript-harmony",
+  "js-flags",
+  "keep-alive-for-test",
+  "kiosk",
+  "kiosk-printing",
+  "lang",
+  "last-launched-app",
+  "layer",
+  "light_muted",
+  "light_vibrant",
+  "load-and-launch-app",
+  "load-apps",
+  "load-extension",
+  "load-media-router-component-extension",
+  "local-heuristics-only-for-password-generation",
+  "local-ntp-reload",
+  "local-sync-backend-dir",
+  "log-gpu-control-list-decisions",
+  "log-level",
+  "log-net-log",
+  "login-manager",
+  "login-profile",
+  "login-user",
+  "lso-url",
+  "ltr",
+  "main-frame-resizes-are-orientation-changes",
+  "make-chrome-default",
+  "make-default-browser",
+  "managed-user-id",
+  "managed-user-sync-token",
+  "mark-non-secure-as",
+  "markdown",
+  "market-url-for-testing",
+  "mash",
+  "material",
+  "material-design-ink-drop-animation-speed",
+  "material-hybrid",
+  "max-gum-fps",
+  "max-output-volume-dba1m",
+  "max-untiled-layer-height",
+  "max-untiled-layer-width",
+  "media-cache-size",
+  "mem-pressure-system-reserved-kb",
+  "memory-metrics",
+  "memory-pressure-off",
+  "memory-pressure-thresholds",
+  "memory-pressure-thresholds-mb",
+  "message-center-changes-while-open",
+  "metrics-client-id",
+  "metrics-recording-only",
+  "mhtml-generator-option",
+  "mock",
+  "mojo-channel-token",
+  "mojo-local-storage",
+  "mojo-pipe-token",
+  "monitoring-destination-id",
+  "mse-audio-buffer-size-limit",
+  "mse-video-buffer-size-limit",
+  "mus",
+  "mus-config",
+  "mute-audio",
+  "nacl-broker",
+  "nacl-dangerous-no-sandbox-nonsfi",
+  "nacl-debug-mask",
+  "nacl-gdb",
+  "nacl-gdb-script",
+  "nacl-loader",
+  "nacl-loader-nonsfi",
+  "native",
+  "native-crx-bindings",
+  "net-log-capture-mode",
+  "netifs-to-ignore",
+  "network-country-iso",
+  "new-window",
+  "no-default-browser-check",
+  "no-experiments",
+  "no-first-run",
+  "no-managed-user-acknowledgment-check",
+  "no-network-profile-warning",
+  "no-pings",
+  "no-proxy-server",
+  "no-referrers",
+  "no-sandbox",
+  "no-service-autorun",
+  "no-startup-window",
+  "no-wifi",
+  "no-zygote",
+  "nocolor",
+  "noerrdialogs",
+  "non-material",
+  "non-secure",
+  "none",
+  "normal_muted",
+  "normal_vibrant",
+  "note-taking-app-ids",
+  "ntp-snippets-add-incomplete",
+  "ntp-switch-to-existing-tab",
+  "null",
+  "num-pac-threads",
+  "num-raster-threads",
+  "oauth2-client-id",
+  "oauth2-client-secret",
+  "off",
+  "on",
+  "oobe-bootstrapping-master",
+  "oobe-guest-session",
+  "oobe-skip-postlogin",
+  "oobe-timer-interval",
+  "open-ash",
+  "opengraph",
+  "origin-to-force-quic-on",
+  "origin-trial-disabled-features",
+  "origin-trial-disabled-tokens",
+  "origin-trial-public-key",
+  "original-process-start-time",
+  "osmesa",
+  "output",
+  "override",
+  "override-metrics-upload-url",
+  "override-plugin-power-saver-for-testing",
+  "override-use-software-gl-for-tests",
+  "overscroll-history-navigation",
+  "overscroll-start-threshold",
+  "ozone-dump-file",
+  "ozone-platform",
+  "pack-extension",
+  "pack-extension-key",
+  "parent-profile",
+  "parent-window",
+  "passive-listeners-default",
+  "password-store",
+  "permission-request-api-scope",
+  "permission-request-api-url",
+  "power-stub",
+  "ppapi",
+  "ppapi-antialiased-text-enabled",
+  "ppapi-broker",
+  "ppapi-flash-args",
+  "ppapi-flash-path",
+  "ppapi-flash-version",
+  "ppapi-in-process",
+  "ppapi-plugin-launcher",
+  "ppapi-startup-dialog",
+  "ppapi-subpixel-rendering-setting",
+  "precache-config-settings-url",
+  "precache-manifest-url-prefix",
+  "prerender-from-omnibox",
+  "previous-app",
+  "primary",
+  "primordial-pipe-token",
+  "print-to-pdf",
+  "privet-ipv6-only",
+  "process-per-site",
+  "process-per-tab",
+  "process-service-name",
+  "product-version",
+  "profile-directory",
+  "profiler-timing",
+  "profiling-at-start",
+  "profiling-file",
+  "profiling-flush",
+  "progress-bar-animation",
+  "progress-bar-completion",
+  "prompt-for-external-extensions",
+  "proxy-auto-detect",
+  "proxy-bypass-list",
+  "proxy-pac-url",
+  "proxy-server",
+  "q",
+  "quic-connection-options",
+  "quic-host-whitelist",
+  "quic-max-packet-length",
+  "quic-version",
+  "rdp_desktop_session",
+  "reader-mode-feedback",
+  "reader-mode-heuristics",
+  "rebaseline-pixel-tests",
+  "reduce-security-for-testing",
+  "reduced-referrer-granularity",
+  "register-font-files",
+  "register-pepper-plugins",
+  "relauncher",
+  "remote-debugging-address",
+  "remote-debugging-port",
+  "remote-debugging-socket-name",
+  "remote-debugging-targets",
+  "renderer",
+  "renderer-client-id",
+  "renderer-cmd-prefix",
+  "renderer-process-limit",
+  "renderer-startup-dialog",
+  "renderer-wait-for-java-debugger",
+  "renderpass",
+  "repl",
+  "report-vp9-as-an-unsupported-mime-type",
+  "require-audio-hardware-for-testing",
+  "reset-app-list-install-state",
+  "reset-variation-state",
+  "restore-last-session",
+  "root",
+  "root-layer-scrolls",
+  "rtl",
+  "run-layout-test",
+  "runtime-deps-list-file",
+  "safebrowsing-disable-auto-update",
+  "safebrowsing-disable-download-protection",
+  "safebrowsing-disable-extension-blacklist",
+  "safebrowsing-manual-download-blacklist",
+  "sandbox-ipc",
+  "save-page-as-mhtml",
+  "saveas-menu-label",
+  "screen-config",
+  "screenshot",
+  "script-executable",
+  "scripts-require-action",
+  "scroll-end-effect",
+  "secondary",
+  "secondary-display-layout",
+  "secondary-ui-md",
+  "service",
+  "service-overrides",
+  "service-request-channel-token",
+  "shared-files",
+  "shill-stub",
+  "show-app-list",
+  "show-autofill-signatures",
+  "show-autofill-type-predictions",
+  "show-component-extension-options",
+  "show-composited-layer-borders",
+  "show-fps-counter",
+  "show-icons",
+  "show-layer-animation-bounds",
+  "show-mac-overlay-borders",
+  "show-overdraw-feedback",
+  "show-paint-rects",
+  "show-property-changed-rects",
+  "show-saved-copy",
+  "show-screenspace-rects",
+  "show-surface-damage-rects",
+  "show_summary",
+  "silent-debugger-extension-api",
+  "silent-launch",
+  "simulate-critical-update",
+  "simulate-elevated-recovery",
+  "simulate-outdated",
+  "simulate-outdated-no-au",
+  "simulate-upgrade",
+  "single-process",
+  "site-per-process",
+  "skip-gpu-data-loading",
+  "skip-nostore-all",
+  "skip-nostore-main",
+  "skip-reencoding-on-skp-capture",
+  "slow",
+  "slow-connections-only",
+  "slow-down-raster-scale-factor",
+  "sms-test-messages",
+  "spdy-proxy-auth-fallback",
+  "spdy-proxy-auth-origin",
+  "spdy-proxy-auth-value",
+  "spelling-service-feedback-interval-seconds",
+  "spelling-service-feedback-url",
+  "ssl-key-log-file",
+  "ssl-version-max",
+  "ssl-version-min",
+  "stable-release-mode",
+  "start-fullscreen",
+  "start-maximized",
+  "start-stack-profiler",
+  "started",
+  "stub",
+  "stub-cros-settings",
+  "supports-dual-gpus",
+  "surface",
+  "swiftshader",
+  "swiftshader-webgl",
+  "sync-allow-insecure-xmpp-connection",
+  "sync-deferred-startup-timeout-seconds",
+  "sync-disable-deferred-startup",
+  "sync-enable-get-update-avoidance",
+  "sync-notification-host-port",
+  "sync-on-draw-hardware",
+  "sync-short-initial-retry-override",
+  "sync-short-nudge-delay-for-test",
+  "sync-url",
+  "system-developer-mode",
+  "system-log-upload-frequency",
+  "tab-management-experiment-type-disabled",
+  "tab-management-experiment-type-elderberry",
+  "task-profiler",
+  "team-drives",
+  "test-auto-update-ui",
+  "test-child-process",
+  "test-cros-gaia-id-migration",
+  "test-do-not-initialize-icu",
+  "test-encryption-migration-ui",
+  "test-gl-lib",
+  "test-launcher-batch-limit",
+  "test-launcher-bot-mode",
+  "test-launcher-debug-launcher",
+  "test-launcher-filter-file",
+  "test-launcher-force-run-broken-tests",
+  "test-launcher-jobs",
+  "test-launcher-list-tests",
+  "test-launcher-output",
+  "test-launcher-print-test-stdio",
+  "test-launcher-print-writable-path",
+  "test-launcher-retry-limit",
+  "test-launcher-shard-index",
+  "test-launcher-summary-output",
+  "test-launcher-timeout",
+  "test-launcher-total-shards",
+  "test-launcher-trace",
+  "test-name",
+  "test-tiny-timeout",
+  "test-type",
+  "testing-fixed-http-port",
+  "testing-fixed-https-port",
+  "threads",
+  "time",
+  "timeout",
+  "tls1",
+  "tls1.1",
+  "tls1.2",
+  "tls1.3",
+  "top-chrome-md",
+  "top-controls-hide-threshold",
+  "top-controls-show-threshold",
+  "top-document-isolation",
+  "touch-calibration",
+  "touch-devices",
+  "touch-events",
+  "touch-noise-filtering",
+  "touch-selection-strategy",
+  "touch_view",
+  "trace-config-file",
+  "trace-export-events-to-etw",
+  "trace-shutdown",
+  "trace-shutdown-file",
+  "trace-startup",
+  "trace-startup-duration",
+  "trace-startup-file",
+  "trace-to-console",
+  "trace-to-file",
+  "trace-to-file-name",
+  "trace-upload-url",
+  "tracelog",
+  "translate-ranker-model-url",
+  "translate-script-url",
+  "translate-security-origin",
+  "true",
+  "try-chrome-again",
+  "try-supported-channel-layouts",
+  "type",
+  "ui-disable-partial-swap",
+  "ui-enable-layer-lists",
+  "ui-enable-rgba-4444-textures",
+  "ui-enable-zero-copy",
+  "ui-prioritize-in-gpu-process",
+  "ui-show-fps-counter",
+  "ui-show-layer-animation-bounds",
+  "ui-show-layer-borders",
+  "ui-show-paint-rects",
+  "ui-show-property-changed-rects",
+  "ui-show-screenspace-rects",
+  "ui-show-surface-damage-rects",
+  "ui-slow-animations",
+  "ui-test-action-max-timeout",
+  "ui-test-action-timeout",
+  "uninstall",
+  "unlimited-storage",
+  "unsafe-pac-url",
+  "unsafely-allow-protected-media-identifier-for-domain",
+  "unsafely-treat-insecure-origin-as-secure",
+  "use-angle",
+  "use-cras",
+  "use-double-buffering",
+  "use-fake-device-for-media-stream",
+  "use-fake-jpeg-decode-accelerator",
+  "use-fake-ui-for-media-stream",
+  "use-file-for-fake-audio-capture",
+  "use-file-for-fake-video-capture",
+  "use-first-display-as-internal",
+  "use-gl",
+  "use-gpu-in-tests",
+  "use-mobile-user-agent",
+  "use-mock-keychain",
+  "use-new-virtual-keyboard-behavior",
+  "use-passthrough-cmd-decoder",
+  "use-simple-cache-backend",
+  "use-test-config",
+  "use_new_features_summary",
+  "user-agent",
+  "user-always-affiliated",
+  "user-data-dir",
+  "utility",
+  "utility-allowed-dir",
+  "utility-cmd-prefix",
+  "utility-run-elevated",
+  "v",
+  "v8-cache-options",
+  "v8-cache-strategies-for-cache-storage",
+  "validate-crx",
+  "validate-input-event-stream",
+  "variations-server-url",
+  "version",
+  "video-image-texture-target",
+  "video-threads",
+  "video-underflow-threshold-ms",
+  "viewer-launch-via-appid",
+  "virtual-time-budget",
+  "vmodule",
+  "wait-for-debugger",
+  "wait-for-debugger-children",
+  "wake-on-wifi-packet",
+  "wallet-service-use-sandbox",
+  "watcher",
+  "waveout-buffers",
+  "webapk-server-url",
+  "webrtc-max-cpu-consumption-percentage",
+  "webrtc-stun-probe-trial",
+  "webview-enable-safebrowsing-support",
+  "webview-sandboxed-renderer",
+  "whitelisted-extension-id",
+  "win-jumplist-action",
+  "window-position",
+  "window-size",
+  "window-workspace",
+  "windows10-custom-titlebar",
+  "windows8-search",
+  "winhttp-proxy-resolver",
+  "wm-window-animations-disabled",
+  "yield-between-content-script-runs",
+  "zygote",
+  "zygote-cmd-prefix"
+};
+
+bool IsBlacklistedArg(const base::CommandLine::CharType* arg) {
+#if defined(OS_WIN)
+  const auto converted = base::WideToUTF8(arg);
+  const char* a = converted.c_str();
+#else
+  const char* a = arg;
+#endif
+
+  static const char* prefixes[] = {"--", "-", "/"};
+
+  int prefix_length = 0;
+  for (auto& prefix : prefixes) {
+    if (base::StartsWith(a, prefix, base::CompareCase::SENSITIVE)) {
+      prefix_length = strlen(prefix);
+      break;
+    }
+  }
+
+  if (prefix_length > 0) {
+    a += prefix_length;
+    std::string switch_name =
+        base::ToLowerASCII(base::StringPiece(a, strcspn(a, "=")));
+    for (auto& item : blacklist) {
+      if (switch_name == item)
+        return true;
+    }
+  }
+
+  return false;
+}
+
+>>>>>>> .their
 }  // namespace
 
 namespace atom {
 
 bool CheckCommandLineArguments(int argc, base::CommandLine::CharType** argv) {
   const base::CommandLine::StringType dashdash(2, '-');
+<<<<<<< .our
   bool block_args = false;
   for (int i = 0; i < argc; ++i) {
     if (argv[i] == dashdash)
@@ -45,6 +1393,17 @@
       return false;
     } else if (IsUrlArg(argv[i])) {
       block_args = true;
+=======
+  bool block_blacklisted_args = false;
+  for (int i = 0; i < argc; ++i) {
+    if (argv[i] == dashdash)
+      break;
+    if (block_blacklisted_args) {
+      if (IsBlacklistedArg(argv[i]))
+        return false;
+    } else if (IsUrlArg(argv[i])) {
+      block_blacklisted_args = true;
+>>>>>>> .their
     }
   }
   return true;
added in both
  our    100644 2c0acc1648ff3b4bc574f000643069f8ef8e94bb atom/app/command_line_args.h
  their  100644 1f5fd756868898e7a304c754d89625059d36441f atom/app/command_line_args.h
@@ -14,3 +14,7 @@
 }  // namespace atom
 
 #endif  // ATOM_APP_COMMAND_LINE_ARGS_H_
+<<<<<<< .our
+=======
+
+>>>>>>> .their
changed in both
  base   100644 1534f648498f991dbf16f53a1f8b7f816fc8fd27 atom/browser/api/atom_api_app.cc
  our    100644 089a2b63d1bae3afebea925582a3aac81ddeaa4f atom/browser/api/atom_api_app.cc
  their  100644 b3d79045c0d482495618f47801492d8f04c81af2 atom/browser/api/atom_api_app.cc
changed in both
  base   100644 4bd88a5a43c03ceba308ec06fdf0cbadeddcaae3 atom/browser/api/atom_api_browser_view.cc
  our    100644 bd83208694c61c4d7c43ce4be26939c2682b2a13 atom/browser/api/atom_api_browser_view.cc
  their  100644 41f0e99cdd79bf1ad2c4c8c0db5aaa97ac5e1297 atom/browser/api/atom_api_browser_view.cc
changed in both
  base   100644 79feb7520b0d8209b1b024f17261161a350f09a3 atom/browser/api/atom_api_desktop_capturer.cc
  our    100644 135b4edd11048a4635f9017f569f4b4ae644a09c atom/browser/api/atom_api_desktop_capturer.cc
  their  100644 7a7c41503e22572cdfddc4be915d1f7ab2b77ef7 atom/browser/api/atom_api_desktop_capturer.cc
@@ -62,6 +62,7 @@
                        const gfx::Size& thumbnail_size,
                        atom::api::DesktopCapturer* cap) {
 #if defined(OS_WIN)
+<<<<<<< .our
   if (content::desktop_capture::CreateDesktopCaptureOptions()
       .allow_directx_capturer()) {
     // DxgiDuplicatorController should be alive in this scope according to
@@ -71,6 +72,18 @@
         webrtc::ScreenCapturerWinDirectx::IsSupported();
   }
 #endif  // defined(OS_WIN)
+=======
+  // On windows, desktop effects (e.g. Aero) will be disabled when the Desktop
+  // capture API is active by default.
+  // We keep the desktop effects in most times. Howerver, the screen still
+  // fickers when the API is capturing the window due to limitation of current
+  // implemetation. This is a known and wontFix issue in webrtc (see:
+  // http://code.google.com/p/webrtc/issues/detail?id=3373)
+  options.set_disable_effects(false);
+  options.set_allow_directx_capturer(true);
+#endif
+
+>>>>>>> .their
   std::unique_ptr<webrtc::DesktopCapturer> screen_capturer(
       capture_screen ? content::desktop_capture::CreateScreenCapturer()
                      : nullptr);
changed in both
  base   100644 59fdac39491ceaae7340d08164c091dafdb8a388 atom/browser/api/atom_api_menu_views.cc
  our    100644 3da7dc2842fa4561e037aa67f290d0cc6ca71014 atom/browser/api/atom_api_menu_views.cc
  their  100644 66adeb8271d8720aad9f9974242f26db583e10cc atom/browser/api/atom_api_menu_views.cc
@@ -19,11 +19,16 @@
 
 MenuViews::~MenuViews() = default;
 
+<<<<<<< .our
 void MenuViews::PopupAt(TopLevelWindow* window,
                         int x,
                         int y,
                         int positioning_item,
                         const base::Closure& callback) {
+=======
+void MenuViews::PopupAt(
+    Window* window, int x, int y, int positioning_item, bool async) {
+>>>>>>> .their
   auto* native_window = static_cast<NativeWindowViews*>(window->window());
   if (!native_window)
     return;
@@ -45,12 +50,24 @@
   // Show the menu.
   int32_t window_id = window->weak_map_id();
   auto close_callback = base::Bind(
+<<<<<<< .our
       &MenuViews::OnClosed, weak_factory_.GetWeakPtr(), window_id, callback);
   menu_runners_[window_id] =
       std::make_unique<MenuRunner>(model(), flags, close_callback);
   menu_runners_[window_id]->RunMenuAt(
       native_window->widget(), NULL, gfx::Rect(location, gfx::Size()),
       views::MENU_ANCHOR_TOPLEFT, ui::MENU_SOURCE_MOUSE);
+=======
+      &MenuViews::ClosePopupAt, weak_factory_.GetWeakPtr(), window_id);
+  menu_runners_[window_id] = std::unique_ptr<MenuRunner>(new MenuRunner(
+      model(), flags, close_callback));
+  ignore_result(menu_runners_[window_id]->RunMenuAt(
+      native_window->widget(),
+      NULL,
+      gfx::Rect(location, gfx::Size()),
+      views::MENU_ANCHOR_TOPLEFT,
+      ui::MENU_SOURCE_MOUSE));
+>>>>>>> .their
 }
 
 void MenuViews::ClosePopupAt(int32_t window_id) {
changed in both
  base   100644 40dc30600f936e9a89fc8b201e1a9816a94b721e atom/browser/api/atom_api_protocol.h
  our    100644 deaf680c996ce0dd74af45e7c7c95f711884bb07 atom/browser/api/atom_api_protocol.h
  their  100644 dfc32be6bc57cb9c9c18803ff13e2045ce7f6caa atom/browser/api/atom_api_protocol.h
changed in both
  base   100644 7df905a8ee9decfc0406db717c0149655e399234 atom/browser/api/atom_api_web_contents.cc
  our    100644 20a1ac2e672f08ffea528b6e094ba530ff8083d1 atom/browser/api/atom_api_web_contents.cc
  their  100644 1aa7878fd435a355575cac8034a19e40e021c422 atom/browser/api/atom_api_web_contents.cc
@@ -280,7 +280,12 @@
 
 // Called when CapturePage is done.
 void OnCapturePageDone(const base::Callback<void(const gfx::Image&)>& callback,
+<<<<<<< .our
                        const SkBitmap& bitmap) {
+=======
+                       const SkBitmap& bitmap,
+                       content::ReadbackResponse response) {
+>>>>>>> .their
   // Hack to enable transparency in captured image
   // TODO(nitsakh) Remove hack once fixed in chromium
   const_cast<SkBitmap&>(bitmap).setAlphaType(kPremul_SkAlphaType);
@@ -397,8 +402,8 @@
     options.Get("transparent", &transparent);
 
     content::WebContents::CreateParams params(session->browser_context());
-    auto* view = new OffScreenWebContentsView(
-        transparent, base::Bind(&WebContents::OnPaint, base::Unretained(this)));
+    auto* view = new OffScreenWebContentsView(transparent,
+        base::Bind(&WebContents::OnPaint, base::Unretained(this)));
     params.view = view;
     params.delegate_view = view;
 
@@ -1742,7 +1747,12 @@
     return;
 
 #if defined(ENABLE_OSR)
+<<<<<<< .our
   auto* osr_wcv = GetOffScreenWebContentsView();
+=======
+  const auto* wc_impl = static_cast<content::WebContentsImpl*>(web_contents());
+  auto* osr_wcv = static_cast<OffScreenWebContentsView*>(wc_impl->GetView());
+>>>>>>> .their
   if (osr_wcv)
     osr_wcv->SetPainting(true);
 #endif
@@ -1753,7 +1763,12 @@
     return;
 
 #if defined(ENABLE_OSR)
+<<<<<<< .our
   auto* osr_wcv = GetOffScreenWebContentsView();
+=======
+  const auto* wc_impl = static_cast<content::WebContentsImpl*>(web_contents());
+  auto* osr_wcv = static_cast<OffScreenWebContentsView*>(wc_impl->GetView());
+>>>>>>> .their
   if (osr_wcv)
     osr_wcv->SetPainting(false);
 #endif
@@ -1764,7 +1779,13 @@
     return false;
 
 #if defined(ENABLE_OSR)
+<<<<<<< .our
   auto* osr_wcv = GetOffScreenWebContentsView();
+=======
+  const auto* wc_impl = static_cast<content::WebContentsImpl*>(web_contents());
+  auto* osr_wcv = static_cast<OffScreenWebContentsView*>(wc_impl->GetView());
+
+>>>>>>> .their
   return osr_wcv && osr_wcv->IsPainting();
 #else
   return false;
@@ -1776,7 +1797,13 @@
     return;
 
 #if defined(ENABLE_OSR)
+<<<<<<< .our
   auto* osr_wcv = GetOffScreenWebContentsView();
+=======
+  const auto* wc_impl = static_cast<content::WebContentsImpl*>(web_contents());
+  auto* osr_wcv = static_cast<OffScreenWebContentsView*>(wc_impl->GetView());
+
+>>>>>>> .their
   if (osr_wcv)
     osr_wcv->SetFrameRate(frame_rate);
 #endif
@@ -1787,7 +1814,13 @@
     return 0;
 
 #if defined(ENABLE_OSR)
+<<<<<<< .our
   auto* osr_wcv = GetOffScreenWebContentsView();
+=======
+  const auto* wc_impl = static_cast<content::WebContentsImpl*>(web_contents());
+  auto* osr_wcv = static_cast<OffScreenWebContentsView*>(wc_impl->GetView());
+
+>>>>>>> .their
   return osr_wcv ? osr_wcv->GetFrameRate() : 0;
 #else
   return 0;
@@ -1871,6 +1904,7 @@
   return mate::ConvertToV8(isolate, *web_preferences->preference());
 }
 
+<<<<<<< .our
 v8::Local<v8::Value> WebContents::GetLastWebPreferences(
     v8::Isolate* isolate) const {
   auto* web_preferences = WebContentsPreferences::From(web_contents());
@@ -1880,6 +1914,17 @@
 }
 
 v8::Local<v8::Value> WebContents::GetOwnerBrowserWindow() const {
+=======
+v8::Local<v8::Value> WebContents::GetLastWebPreferences(v8::Isolate* isolate) {
+  WebContentsPreferences* web_preferences =
+      WebContentsPreferences::FromWebContents(web_contents());
+  if (!web_preferences)
+    return v8::Null(isolate);
+  return mate::ConvertToV8(isolate, *web_preferences->last_web_preferences());
+}
+
+v8::Local<v8::Value> WebContents::GetOwnerBrowserWindow() {
+>>>>>>> .their
   if (owner_window())
     return BrowserWindow::From(isolate(), owner_window());
   else
changed in both
  base   100644 ffeb8f7241802ba1bd188752b3b3ef9a81c7dd66 atom/browser/api/atom_api_web_contents.h
  our    100644 7939f8268aa8c3371623e0c15f3b6001d7f1efa4 atom/browser/api/atom_api_web_contents.h
  their  100644 a5b96adb94fa384f8ba50737be07f05f2074580f atom/browser/api/atom_api_web_contents.h
@@ -234,8 +234,13 @@
   v8::Local<v8::Value> GetPreloadPath(v8::Isolate* isolate) const;
 
   // Returns the web preferences of current WebContents.
+<<<<<<< .our
   v8::Local<v8::Value> GetWebPreferences(v8::Isolate* isolate) const;
   v8::Local<v8::Value> GetLastWebPreferences(v8::Isolate* isolate) const;
+=======
+  v8::Local<v8::Value> GetWebPreferences(v8::Isolate* isolate);
+  v8::Local<v8::Value> GetLastWebPreferences(v8::Isolate* isolate);
+>>>>>>> .their
 
   // Returns the owner window.
   v8::Local<v8::Value> GetOwnerBrowserWindow() const;
removed in local
  base   100644 bb7060adb76d9f7993f18774be599c2bd604cb9f atom/browser/api/atom_api_window.cc
  their  100644 5a135ea522d56f89a8d56f41814ca483040ed62f atom/browser/api/atom_api_window.cc
changed in both
  base   100644 61c97f2c35ce3c9e76cee59f9e4becd9649c993b atom/browser/atom_browser_client.cc
  our    100644 57c4ee582405e6d501ec23940ccb10689ecd64a1 atom/browser/atom_browser_client.cc
  their  100644 49c8656c882a5aedf27649504c65d4f64f0ae416 atom/browser/atom_browser_client.cc
@@ -296,6 +296,7 @@
     base::CommandLine* command_line,
     int process_id) {
   // Make sure we're about to launch a known executable
+<<<<<<< .our
   {
     base::FilePath child_path;
     PathService::Get(content::CHILD_PROCESS_EXE, &child_path);
@@ -303,6 +304,11 @@
     base::ThreadRestrictions::ScopedAllowIO allow_io;
     CHECK(base::MakeAbsoluteFilePath(command_line->GetProgram()) == child_path);
   }
+=======
+  base::FilePath child_path;
+  PathService::Get(content::CHILD_PROCESS_EXE, &child_path);
+  CHECK(base::MakeAbsoluteFilePath(command_line->GetProgram()) == child_path);
+>>>>>>> .their
 
   std::string process_type =
       command_line->GetSwitchValueASCII(::switches::kProcessType);
changed in both
  base   100644 7c154b60b00e25c42847ceefb98723b50ea03dd0 atom/browser/native_browser_view.h
  our    100644 56937e4c8c69e3605d2b6cc71a0877b74ff4e83d atom/browser/native_browser_view.h
  their  100644 cab6980fa2cf035c1a5ca6b4aee822a0ee604fd4 atom/browser/native_browser_view.h
changed in both
  base   100644 17b0a1ee9006dd70888165a9209076fd7065f3cc atom/browser/native_browser_view_mac.mm
  our    100644 0416e26e89f1e0f37366ef1798b4359da0729225 atom/browser/native_browser_view_mac.mm
  their  100644 86df632638ef7772270569824515b251470d0c08 atom/browser/native_browser_view_mac.mm
changed in both
  base   100644 08a8123bcaef664aa660d1bea6d6baf783b78e89 atom/browser/native_browser_view_views.cc
  our    100644 6414005a1e40d80ae86102b12edee0255cab9adb atom/browser/native_browser_view_views.cc
  their  100644 3e7df488c73e98ba2870c913542f478865e15575 atom/browser/native_browser_view_views.cc
changed in both
  base   100644 5dcda13447cde098fccaf8782fefb97d861d47f4 atom/browser/native_browser_view_views.h
  our    100644 8f8e860292baddad1156c50ae7cfaa0fd6e87d99 atom/browser/native_browser_view_views.h
  their  100644 abf47178302ad7527c1640a3f41492f871f137e5 atom/browser/native_browser_view_views.h
changed in both
  base   100644 1e02a37fc07da1616026915cea6c61f467a4751d atom/browser/native_window.h
  our    100644 35b67e2dd230692c415a32aae5f0a5e99ab74ac0 atom/browser/native_window.h
  their  100644 d2e1ff876c1678dc2749b5d98a8cc46e948bb2dc atom/browser/native_window.h
@@ -221,6 +221,8 @@
       content::WebContents*,
       const content::NativeWebKeyboardEvent& event) {}
 
+  virtual void UpdateDraggableRegionViews() {}
+
   // Public API used by platform-dependent delegates and observers to send UI
   // related notifications.
   void NotifyWindowRequestPreferredWith(int* width);
changed in both
  base   100644 24d9a0aab87837e39a4c1e1368cfb3a724dd0410 atom/browser/native_window_mac.h
  our    100644 44a78198f44cdba9875e3fb27c8e2c87eaa6f33b atom/browser/native_window_mac.h
  their  100644 e0c548a2d616d90c5ac3de0a879bcd7943e503b0 atom/browser/native_window_mac.h
@@ -130,8 +130,19 @@
   gfx::Rect ContentBoundsToWindowBounds(const gfx::Rect& bounds) const override;
   gfx::Rect WindowBoundsToContentBounds(const gfx::Rect& bounds) const override;
 
+<<<<<<< .our
   // Use a custom content view instead of Chromium's BridgedContentView.
   void OverrideNSWindowContentView();
+=======
+  // content::WebContentsObserver:
+  void RenderViewHostChanged(content::RenderViewHost* old_host,
+                             content::RenderViewHost* new_host) override;
+
+  // Refresh the DraggableRegion views.
+  void UpdateDraggableRegionViews() override {
+    UpdateDraggableRegionViews(draggable_regions_);
+  }
+>>>>>>> .their
 
   // Set the attribute of NSWindow while work around a bug of zoom button.
   void SetStyleMask(bool on, NSUInteger flag);
changed in both
  base   100644 59301fc7a982605ca204bb541410ac74a872e127 atom/browser/native_window_mac.mm
  our    100644 004263ec127709067e903ffbf31003b8844226b4 atom/browser/native_window_mac.mm
  their  100644 1db35693d8ae2b9ade1d13d0f28631ee5b8417cc atom/browser/native_window_mac.mm
@@ -1387,6 +1387,7 @@
     [parent->GetNativeWindow() addChildWindow:window_ ordered:NSWindowAbove];
 }
 
+<<<<<<< .our
 void NativeWindowMac::ShowWindowButton(NSWindowButton button) {
   auto view = [window_ standardWindowButton:button];
   [view.superview addSubview:view positioned:NSWindowAbove relativeTo:nil];
@@ -1395,6 +1396,35 @@
 void NativeWindowMac::SetForwardMouseMessages(bool forward) {
   [window_ setAcceptsMouseMovedEvents:forward];
 }
+=======
+  // Remove all ControlRegionViews that are added last time.
+  // Note that [webView subviews] returns the view's mutable internal array and
+  // it should be copied to avoid mutating the original array while enumerating
+  // it.
+  base::scoped_nsobject<NSArray> subviews([[webView subviews] copy]);
+  for (NSView* subview in subviews.get())
+    if ([subview isKindOfClass:[ControlRegionView class]])
+      [subview removeFromSuperview];
+
+  // Draggable regions is implemented by having the whole web view draggable
+  // (mouseDownCanMoveWindow) and overlaying regions that are not draggable.
+  std::vector<gfx::Rect> drag_exclude_rects =
+      CalculateNonDraggableRegions(regions, webViewWidth, webViewHeight);
+
+  if (browser_view_) {
+    browser_view_->UpdateDraggableRegions(drag_exclude_rects);
+  }
+
+  // Create and add a ControlRegionView for each region that needs to be
+  // excluded from the dragging.
+  for (const auto& rect : drag_exclude_rects) {
+    base::scoped_nsobject<NSView> controlRegion(
+        [[ControlRegionView alloc] initWithFrame:NSZeroRect]);
+    [controlRegion setFrame:NSMakeRect(rect.x(), webViewHeight - rect.bottom(),
+                                       rect.width(), rect.height())];
+    [webView addSubview:controlRegion];
+  }
+>>>>>>> .their
 
 void NativeWindowMac::OverrideNSWindowContentView() {
   // When using `views::Widget` to hold WebContents, Chromium would use
changed in both
  base   100644 0ae5092b4397fbf999ada9007eaadcd3e9c4b43a atom/browser/native_window_views.cc
  our    100644 0dba39942f92d54ba34db7709b73012055680d94 atom/browser/native_window_views.cc
  their  100644 26f1a926ac94a6838eeba2208a15e37ebd1e4019 atom/browser/native_window_views.cc
@@ -55,6 +55,7 @@
 #include "atom/browser/ui/views/win_frame_view.h"
 #include "atom/browser/ui/win/atom_desktop_native_widget_aura.h"
 #include "atom/browser/ui/win/atom_desktop_window_tree_host_win.h"
+#include "content/public/browser/gpu_data_manager.h"
 #include "skia/ext/skia_utils_win.h"
 #include "ui/base/win/shell.h"
 #include "ui/display/display.h"
@@ -247,7 +248,16 @@
     ::SetWindowLong(GetAcceleratedWidget(), GWL_STYLE, frame_style);
   }
 
+  bool hardware_accelerated =
+    content::GpuDataManager::GetInstance()->HardwareAccelerationEnabled();
   LONG ex_style = ::GetWindowLong(GetAcceleratedWidget(), GWL_EXSTYLE);
+<<<<<<< .our
+=======
+  // Window without thick frame has to have WS_EX_COMPOSITED style when GPU
+  // acceleration is enabled.
+  if (!thick_frame_ && hardware_accelerated)
+    ex_style |= WS_EX_COMPOSITED;
+>>>>>>> .their
   if (window_type == "toolbar")
     ex_style |= WS_EX_TOOLWINDOW;
   ::SetWindowLong(GetAcceleratedWidget(), GWL_EXSTYLE, ex_style);
@@ -1237,9 +1247,141 @@
 void NativeWindowViews::HandleKeyboardEvent(
     content::WebContents*,
     const content::NativeWebKeyboardEvent& event) {
+<<<<<<< .our
   keyboard_event_handler_->HandleKeyboardEvent(event,
                                                root_view_->GetFocusManager());
   root_view_->HandleKeyEvent(event);
+=======
+  keyboard_event_handler_->HandleKeyboardEvent(event, GetFocusManager());
+
+  if (!menu_bar_)
+    return;
+
+  // Show accelerator when "Alt" is pressed.
+  if (menu_bar_visible_ && IsAltKey(event))
+    menu_bar_->SetAcceleratorVisibility(
+        event.GetType() == blink::WebInputEvent::kRawKeyDown);
+
+  // Show the submenu when "Alt+Key" is pressed.
+  if (event.GetType() == blink::WebInputEvent::kRawKeyDown &&
+      !IsAltKey(event) && IsAltModifier(event)) {
+    if (!menu_bar_visible_ &&
+        (menu_bar_->GetAcceleratorIndex(event.windows_key_code) != -1))
+      SetMenuBarVisibility(true);
+    menu_bar_->ActivateAccelerator(event.windows_key_code);
+    return;
+  }
+
+  if (!menu_bar_autohide_)
+    return;
+
+  // Toggle the menu bar only when a single Alt is released.
+  if (event.GetType() == blink::WebInputEvent::kRawKeyDown && IsAltKey(event)) {
+    // When a single Alt is pressed:
+    menu_bar_alt_pressed_ = true;
+  } else if (event.GetType() == blink::WebInputEvent::kKeyUp &&
+             IsAltKey(event) && menu_bar_alt_pressed_) {
+    // When a single Alt is released right after a Alt is pressed:
+    menu_bar_alt_pressed_ = false;
+    SetMenuBarVisibility(!menu_bar_visible_);
+  } else {
+    // When any other keys except single Alt have been pressed/released:
+    menu_bar_alt_pressed_ = false;
+  }
+}
+
+void NativeWindowViews::ShowAutofillPopup(
+    content::RenderFrameHost* frame_host,
+    content::WebContents* web_contents,
+    const gfx::RectF& bounds,
+    const std::vector<base::string16>& values,
+    const std::vector<base::string16>& labels) {
+  bool is_offsceen = false;
+  bool is_embedder_offscreen = false;
+
+  auto* web_contents_preferences =
+      WebContentsPreferences::FromWebContents(web_contents);
+  if (web_contents_preferences) {
+    const auto* web_preferences = web_contents_preferences->web_preferences();
+
+    web_preferences->GetBoolean("offscreen", &is_offsceen);
+    int guest_instance_id = 0;
+    web_preferences->GetInteger(options::kGuestInstanceID, &guest_instance_id);
+
+    if (guest_instance_id) {
+      auto manager = WebViewManager::GetWebViewManager(web_contents);
+      if (manager) {
+        auto embedder = manager->GetEmbedder(guest_instance_id);
+        if (embedder) {
+          is_embedder_offscreen = WebContentsPreferences::IsPreferenceEnabled(
+              "offscreen", embedder);
+        }
+      }
+    }
+  }
+
+  autofill_popup_->CreateView(
+      frame_host,
+      is_offsceen || is_embedder_offscreen,
+      widget(),
+      bounds);
+  autofill_popup_->SetItems(values, labels);
+  autofill_popup_->UpdatePopupBounds(menu_bar_visible_ ? 0 : kMenuBarHeight);
+}
+
+void NativeWindowViews::HideAutofillPopup(
+    content::RenderFrameHost* frame_host) {
+  autofill_popup_->Hide();
+}
+
+void NativeWindowViews::Layout() {
+  const auto size = GetContentsBounds().size();
+  const auto menu_bar_bounds =
+      menu_bar_visible_ ? gfx::Rect(0, 0, size.width(), kMenuBarHeight)
+                        : gfx::Rect();
+  if (menu_bar_) {
+    menu_bar_->SetBoundsRect(menu_bar_bounds);
+  }
+
+  if (web_view_) {
+    web_view_->SetBoundsRect(
+        gfx::Rect(0, menu_bar_bounds.height(), size.width(),
+                  size.height() - menu_bar_bounds.height()));
+  }
+
+  if (autofill_popup_.get())
+    autofill_popup_->UpdatePopupBounds(menu_bar_visible_ ? 0 : kMenuBarHeight);
+}
+
+gfx::Size NativeWindowViews::GetMinimumSize() const {
+  return NativeWindow::GetMinimumSize();
+}
+
+gfx::Size NativeWindowViews::GetMaximumSize() const {
+  return NativeWindow::GetMaximumSize();
+}
+
+bool NativeWindowViews::AcceleratorPressed(const ui::Accelerator& accelerator) {
+  return accelerator_util::TriggerAcceleratorTableCommand(
+      &accelerator_table_, accelerator);
+}
+
+void NativeWindowViews::RegisterAccelerators(AtomMenuModel* menu_model) {
+  // Clear previous accelerators.
+  views::FocusManager* focus_manager = GetFocusManager();
+  accelerator_table_.clear();
+  focus_manager->UnregisterAccelerators(this);
+
+  // Register accelerators with focus manager.
+  accelerator_util::GenerateAcceleratorTable(&accelerator_table_, menu_model);
+  accelerator_util::AcceleratorTable::const_iterator iter;
+  for (iter = accelerator_table_.begin();
+       iter != accelerator_table_.end();
+       ++iter) {
+    focus_manager->RegisterAccelerator(
+        iter->first, ui::AcceleratorManager::kNormalPriority, this);
+  }
+>>>>>>> .their
 }
 
 ui::WindowShowState NativeWindowViews::GetRestoredState() {
changed in both
  base   100644 ad02ed620d6d94ba15e7f8d154063a0968178110 atom/browser/net/asar/url_request_asar_job.cc
  our    100644 85eb2e1dd142b6d64aafb5350ae47603db989e8f atom/browser/net/asar/url_request_asar_job.cc
  their  100644 5c4472a315911a6c2da533b35d489f8f9da5cd53 atom/browser/net/asar/url_request_asar_job.cc
@@ -243,6 +243,24 @@
     meta_info->mime_type_result = net::GetWellKnownMimeTypeFromExtension(
         file_extension.substr(1), &meta_info->mime_type);
   }
+<<<<<<< .our
+=======
+
+  // We use GetWellKnownMimeTypeFromExtension() to ensure that configurations
+  // that may have been set by other programs on a user's machine don't affect
+  // the mime type returned (in particular, JS should always be
+  // (application/javascript). See https://crbug.com/797712. Using an accurate
+  // mime type is necessary at least for modules and sw, which enforce strict
+  // mime type requirements.
+  // TODO(deepak1556): Revert this when sw support is removed for file scheme.
+  base::FilePath::StringType file_extension = file_path.Extension();
+  if (file_extension.empty()) {
+    meta_info->mime_type_result = false;
+  } else {
+    meta_info->mime_type_result = net::GetWellKnownMimeTypeFromExtension(
+        file_extension.substr(1), &meta_info->mime_type);
+  }
+>>>>>>> .their
 }
 
 void URLRequestAsarJob::DidFetchMetaInfo(const FileMetaInfo* meta_info) {
changed in both
  base   100644 9400f361f11a2e709b4cb0837ff638219aa519a7 atom/browser/net/atom_url_request.cc
  our    100644 5ffbfd65a48b4459b2ebca66a5c2259f18ed80a8 atom/browser/net/atom_url_request.cc
  their  100644 f259889edab7c64ac8c682e2bd68a778463135e0 atom/browser/net/atom_url_request.cc
changed in both
  base   100644 79dd80b586600cb5e3b98d03f69f9bd8aed4a526 atom/browser/net/atom_url_request_job_factory.cc
  our    100644 7047f7a6f7f83e782121f2a849a621fb836ad534 atom/browser/net/atom_url_request_job_factory.cc
  their  100644 20680adf7da826e94e555865d4f023d8a9217eab atom/browser/net/atom_url_request_job_factory.cc
changed in both
  base   100644 56f979c2ff60b06aea1c62f5cefa78b1a9df6e21 atom/browser/net/atom_url_request_job_factory.h
  our    100644 c0e26568fdea57dd473f917d597624ab10efe129 atom/browser/net/atom_url_request_job_factory.h
  their  100644 a560839b68e0ccd00f414deff245bc237de9deba atom/browser/net/atom_url_request_job_factory.h
changed in both
  base   100644 be3d76bc047d1723eaed3db1bfac827baa063009 atom/browser/node_debugger.cc
  our    100644 56e68e2b8b817aae2786775e3977977474420cc2 atom/browser/node_debugger.cc
  their  100644 a0d0b0dc42b913937bedbb08d1e344dc00ba26c7 atom/browser/node_debugger.cc
@@ -31,11 +31,27 @@
 #endif
   }
 
+<<<<<<< .our
   // Set process._debugWaitConnect if --inspect-brk was specified to stop
   // the debugger on the first line
   if (options.wait_for_connect()) {
     mate::Dictionary process(env_->isolate(), env_->process_object());
     process.Set("_breakFirstLine", true);
+=======
+  if (options.inspector_enabled()) {
+    // Use custom platform since the gin platform does not work correctly
+    // with node's inspector agent
+    platform_.reset(v8::platform::CreateDefaultPlatform());
+
+    // Set process._debugWaitConnect if --inspect-brk was specified to stop
+    // the debugger on the first line
+    if (options.wait_for_connect()) {
+      mate::Dictionary process(env_->isolate(), env_->process_object());
+      process.Set("_breakFirstLine", true);
+    }
+
+    inspector->Start(platform_.get(), nullptr, options);
+>>>>>>> .their
   }
 
   inspector->Start(static_cast<node::NodePlatform*>(platform), nullptr,
changed in both
  base   100644 42d3b7792e3b17eb2b1c508f2e433e9dbd945452 atom/browser/osr/osr_render_widget_host_view.cc
  our    100644 4a2a0747fe2e6bf38c8999b80dbfea31e52a17fd atom/browser/osr/osr_render_widget_host_view.cc
  their  100644 80a13ef96656b3fe7820b8412aacad0b005526e1 atom/browser/osr/osr_render_widget_host_view.cc
@@ -259,12 +259,29 @@
       native_window_(native_window),
       transparent_(transparent),
       callback_(callback),
+<<<<<<< .our
       frame_rate_(frame_rate),
+=======
+      parent_callback_(nullptr),
+      frame_rate_(frame_rate),
+      frame_rate_threshold_us_(0),
+      last_time_(base::Time::Now()),
+>>>>>>> .their
       scale_factor_(kDefaultScaleFactor),
       size_(native_window->GetSize()),
       painting_(painting),
       is_showing_(!render_widget_host_->is_hidden()),
+<<<<<<< .our
       mouse_wheel_phase_handler_(render_widget_host_, this),
+=======
+      is_destroyed_(false),
+      popup_position_(gfx::Rect()),
+      hold_resize_(false),
+      pending_resize_(false),
+      paint_callback_running_(false),
+      renderer_compositor_frame_sink_(nullptr),
+      background_color_(SkColor()),
+>>>>>>> .their
       weak_ptr_factory_(this) {
   DCHECK(render_widget_host_);
   bool is_guest_view_hack = parent_host_view_ != nullptr;
@@ -292,9 +309,13 @@
   compositor_.reset(
       new ui::Compositor(context_factory_private->AllocateFrameSinkId(),
                          content::GetContextFactory(), context_factory_private,
+<<<<<<< .our
                          base::ThreadTaskRunnerHandle::Get(),
                          features::IsSurfaceSynchronizationEnabled(),
                          false /* enable_pixel_canvas */));
+=======
+                         base::ThreadTaskRunnerHandle::Get()));
+>>>>>>> .their
   compositor_->SetAcceleratedWidget(gfx::kNullAcceleratedWidget);
   compositor_->SetRootLayer(root_layer_.get());
 #endif
@@ -713,8 +734,18 @@
   }
 
   return new OffScreenRenderWidgetHostView(
+<<<<<<< .our
       transparent_, true, embedder_host_view->GetFrameRate(), callback_,
       render_widget_host, embedder_host_view, native_window_);
+=======
+      transparent_,
+      true,
+      embedder_host_view->GetFrameRate(),
+      callback_,
+      render_widget_host,
+      embedder_host_view,
+      native_window_);
+>>>>>>> .their
 }
 
 #if !defined(OS_MACOSX)
@@ -1204,7 +1235,11 @@
 
   SetupFrameRate(true);
 
+<<<<<<< .our
   for (auto* guest_host_view : guest_host_views_)
+=======
+  for (auto guest_host_view : guest_host_views_)
+>>>>>>> .their
     guest_host_view->SetFrameRate(frame_rate);
 }
 
@@ -1233,10 +1268,15 @@
 
   frame_rate_threshold_us_ = 1000000 / frame_rate_;
 
+<<<<<<< .our
   if (GetCompositor()) {
     GetCompositor()->SetAuthoritativeVSyncInterval(
         base::TimeDelta::FromMicroseconds(frame_rate_threshold_us_));
   }
+=======
+  GetCompositor()->SetAuthoritativeVSyncInterval(
+      base::TimeDelta::FromMicroseconds(frame_rate_threshold_us_));
+>>>>>>> .their
 
   if (copy_frame_generator_.get()) {
     copy_frame_generator_->set_frame_rate_threshold_us(
changed in both
  base   100644 23549838c335b37b479b2f154eaab29d86abbc4a atom/browser/osr/osr_render_widget_host_view.h
  our    100644 b81f6310f864c00fea50b1aac49dc89173eaa302 atom/browser/osr/osr_render_widget_host_view.h
  their  100644 ed0c46f6b41a044e9f4f224b3fe9322efe1937b3 atom/browser/osr/osr_render_widget_host_view.h
@@ -317,6 +317,8 @@
   viz::LocalSurfaceId local_surface_id_;
   viz::ParentLocalSurfaceIdAllocator local_surface_id_allocator_;
 
+  bool paint_callback_running_;
+
   std::unique_ptr<ui::Layer> root_layer_;
   std::unique_ptr<ui::Compositor> compositor_;
   std::unique_ptr<content::DelegatedFrameHost> delegated_frame_host_;
changed in both
  base   100644 0e10abf6a034ab604f51553eb905b18e18f45552 atom/browser/osr/osr_web_contents_view.cc
  our    100644 c8223df0d8c6f3436d323059686e42684ff98462 atom/browser/osr/osr_web_contents_view.cc
  their  100644 4cbc6a5c42f9762b81fc4d601ebb534dedcd4914 atom/browser/osr/osr_web_contents_view.cc
@@ -13,9 +13,18 @@
 namespace atom {
 
 OffScreenWebContentsView::OffScreenWebContentsView(
+<<<<<<< .our
     bool transparent,
     const OnPaintCallback& callback)
     : transparent_(transparent), callback_(callback) {
+=======
+    bool transparent, const OnPaintCallback& callback)
+    : transparent_(transparent),
+      painting_(true),
+      frame_rate_(60),
+      callback_(callback),
+      web_contents_(nullptr) {
+>>>>>>> .their
 #if defined(OS_MACOSX)
   PlatformCreate();
 #endif
@@ -104,8 +113,18 @@
 
   auto* relay = NativeWindowRelay::FromWebContents(web_contents_);
   return new OffScreenRenderWidgetHostView(
+<<<<<<< .our
       transparent_, painting_, GetFrameRate(), callback_, render_widget_host,
       nullptr, relay->window.get());
+=======
+      transparent_,
+      painting_,
+      GetFrameRate(),
+      callback_,
+      render_widget_host,
+      nullptr,
+      relay->window.get());
+>>>>>>> .their
 }
 
 content::RenderWidgetHostViewBase*
@@ -124,8 +143,18 @@
               : web_contents_impl->GetRenderWidgetHostView());
 
   return new OffScreenRenderWidgetHostView(
+<<<<<<< .our
       transparent_, true, view->GetFrameRate(), callback_, render_widget_host,
       view, relay->window.get());
+=======
+      transparent_,
+      true,
+      view->GetFrameRate(),
+      callback_,
+      render_widget_host,
+      view,
+      relay->window.get());
+>>>>>>> .their
 }
 
 void OffScreenWebContentsView::SetPageTitle(const base::string16& title) {}
@@ -209,6 +238,42 @@
   }
 }
 
+void OffScreenWebContentsView::SetPainting(bool painting) {
+  auto* view = GetView();
+  if (view != nullptr) {
+    view->SetPainting(painting);
+  } else {
+    painting_ = painting;
+  }
+}
+
+bool OffScreenWebContentsView::IsPainting() const {
+  auto* view = GetView();
+  if (view != nullptr) {
+    return view->IsPainting();
+  } else {
+    return painting_;
+  }
+}
+
+void OffScreenWebContentsView::SetFrameRate(int frame_rate) {
+  auto* view = GetView();
+  if (view != nullptr) {
+    view->SetFrameRate(frame_rate);
+  } else {
+    frame_rate_ = frame_rate;
+  }
+}
+
+int OffScreenWebContentsView::GetFrameRate() const {
+  auto* view = GetView();
+  if (view != nullptr) {
+    return view->GetFrameRate();
+  } else {
+    return frame_rate_;
+  }
+}
+
 OffScreenRenderWidgetHostView* OffScreenWebContentsView::GetView() const {
   if (web_contents_) {
     return static_cast<OffScreenRenderWidgetHostView*>(
changed in both
  base   100644 ffb3b38619c4521f9947fe29e3871ed06d97978e atom/browser/osr/osr_web_contents_view.h
  our    100644 206ab9dd3421af522a12aba615c6f040ba176ba4 atom/browser/osr/osr_web_contents_view.h
  their  100644 788e55bf316d8069811fc026bf610ad231371fce atom/browser/osr/osr_web_contents_view.h
@@ -83,8 +83,13 @@
   OffScreenRenderWidgetHostView* GetView() const;
 
   const bool transparent_;
+<<<<<<< .our
   bool painting_ = true;
   int frame_rate_ = 60;
+=======
+  bool painting_;
+  int frame_rate_;
+>>>>>>> .their
   OnPaintCallback callback_;
 
   // Weak refs.
changed in both
  base   100644 9610d80693b1670f696f82812442419504d61454 atom/browser/relauncher.cc
  our    100644 35c6785e3d87d21eaea27ad5818434d870326047 atom/browser/relauncher.cc
  their  100644 9dfb6edd06661f302ca7498a2ba34f0ce70c938b atom/browser/relauncher.cc
changed in both
  base   100644 3313eba36bb903426778fac6cd18258a95fec677 atom/browser/resources/mac/Info.plist
  our    100644 9094f0f7335edf833d51f688851e6a105de60433 atom/browser/resources/mac/Info.plist
  their  100644 a9ccf0ef539f713789b79e05d83092561a96fc80 atom/browser/resources/mac/Info.plist
@@ -17,9 +17,15 @@
   <key>CFBundleIconFile</key>
   <string>electron.icns</string>
   <key>CFBundleVersion</key>
+<<<<<<< .our
   <string>4.0.0</string>
   <key>CFBundleShortVersionString</key>
   <string>4.0.0</string>
+=======
+  <string>1.8.8</string>
+  <key>CFBundleShortVersionString</key>
+  <string>1.8.8</string>
+>>>>>>> .their
   <key>LSApplicationCategoryType</key>
   <string>public.app-category.developer-tools</string>
   <key>LSMinimumSystemVersion</key>
changed in both
  base   100644 c349f99d712ff69960d35b18587ddb6c417f7cd5 atom/browser/resources/win/atom.rc
  our    100644 c0bd831e8bddf10180f75cd40694831e2e98622d atom/browser/resources/win/atom.rc
  their  100644 cd274bfcb0537b6f7830ef0a0fd6958ce06aec45 atom/browser/resources/win/atom.rc
@@ -56,8 +56,13 @@
 //
 
 VS_VERSION_INFO VERSIONINFO
+<<<<<<< .our
  FILEVERSION 4,0,0,20180821
  PRODUCTVERSION 4,0,0,20180821
+=======
+ FILEVERSION 1,8,8,0
+ PRODUCTVERSION 1,8,8,0
+>>>>>>> .their
  FILEFLAGSMASK 0x3fL
 #ifdef _DEBUG
  FILEFLAGS 0x1L
@@ -74,12 +79,20 @@
         BEGIN
             VALUE "CompanyName", "GitHub, Inc."
             VALUE "FileDescription", "Electron"
+<<<<<<< .our
             VALUE "FileVersion", "4.0.0"
+=======
+            VALUE "FileVersion", "1.8.8"
+>>>>>>> .their
             VALUE "InternalName", "electron.exe"
             VALUE "LegalCopyright", "Copyright (C) 2015 GitHub, Inc. All rights reserved."
             VALUE "OriginalFilename", "electron.exe"
             VALUE "ProductName", "Electron"
+<<<<<<< .our
             VALUE "ProductVersion", "4.0.0"
+=======
+            VALUE "ProductVersion", "1.8.8"
+>>>>>>> .their
             VALUE "SquirrelAwareVersion", "1"
         END
     END
changed in both
  base   100644 276f782ce0d25b7c24fdf829b74074ead01cf7d8 atom/browser/ui/file_dialog_mac.mm
  our    100644 18b18a8b240cda5512ae49e0afde5c749bdf75c0 atom/browser/ui/file_dialog_mac.mm
  their  100644 295d9a57b895db9c6f66c64fd4d94d0d8f365e4c atom/browser/ui/file_dialog_mac.mm
@@ -282,6 +282,7 @@
   return true;
 }
 
+<<<<<<< .our
 void OpenDialogCompletion(int chosen,
                           NSOpenPanel* dialog,
                           const DialogSettings& settings,
@@ -307,6 +308,17 @@
     ReadDialogPaths(dialog, &paths);
     callback.Run(true, paths);
 #endif
+=======
+void OpenDialogCompletion(int chosen, NSOpenPanel* dialog,
+                          const DialogSettings& settings,
+                          const OpenDialogCallback& callback) {
+  if (chosen == NSFileHandlingPanelCancelButton) {
+    callback.Run(false, std::vector<base::FilePath>());
+  } else {
+    std::vector<base::FilePath> paths;
+    ReadDialogPaths(dialog, &paths);
+    callback.Run(true, paths);
+>>>>>>> .their
   }
 }
 
@@ -330,8 +342,13 @@
     NSWindow* window = settings.parent_window->GetNativeWindow();
     [dialog beginSheetModalForWindow:window
                    completionHandler:^(NSInteger chosen) {
+<<<<<<< .our
                      OpenDialogCompletion(chosen, dialog, settings, callback);
                    }];
+=======
+      OpenDialogCompletion(chosen, dialog, settings, callback);
+    }];
+>>>>>>> .their
   }
 }
 
@@ -349,6 +366,7 @@
   return true;
 }
 
+<<<<<<< .our
 void SaveDialogCompletion(int chosen,
                           NSSavePanel* dialog,
                           const DialogSettings& settings,
@@ -370,6 +388,16 @@
 #else
     callback.Run(true, base::FilePath(path));
 #endif
+=======
+void SaveDialogCompletion(int chosen, NSSavePanel* dialog,
+                          const DialogSettings& settings,
+                          const SaveDialogCallback& callback) {
+  if (chosen == NSFileHandlingPanelCancelButton) {
+    callback.Run(false, base::FilePath());
+  } else {
+    std::string path = base::SysNSStringToUTF8([[dialog URL] path]);
+    callback.Run(true, base::FilePath(path));
+>>>>>>> .their
   }
 }
 
@@ -391,8 +419,13 @@
     NSWindow* window = settings.parent_window->GetNativeWindow();
     [dialog beginSheetModalForWindow:window
                    completionHandler:^(NSInteger chosen) {
+<<<<<<< .our
                      SaveDialogCompletion(chosen, dialog, settings, callback);
                    }];
+=======
+      SaveDialogCompletion(chosen, dialog, settings, callback);
+    }];
+>>>>>>> .their
   }
 }
 
changed in both
  base   100644 8f495f3bf7afef98c62456bda19607adab35c930 atom/browser/ui/message_box_mac.mm
  our    100644 ee2f59dc8c84ba0bf5fe049a133f403d550a9473 atom/browser/ui/message_box_mac.mm
  their  100644 17c66043a27f76077f20ac4ff61522fac0bb2b51 atom/browser/ui/message_box_mac.mm
changed in both
  base   100644 e0cd68608a33e999032a7ff2ce4c0e6971c5e8f2 atom/browser/ui/win/atom_desktop_native_widget_aura.cc
  our    100644 21300409add439f7513536eaf255601da0778299 atom/browser/ui/win/atom_desktop_native_widget_aura.cc
  their  100644 c38760f7c39ea60a6504c700a0262539619999eb atom/browser/ui/win/atom_desktop_native_widget_aura.cc
@@ -12,7 +12,11 @@
     views::internal::NativeWidgetDelegate* delegate)
     : views::DesktopNativeWidgetAura(delegate) {
   // This is to enable the override of OnWindowActivated
+<<<<<<< .our
   wm::SetActivationChangeObserver(GetNativeWindow(), this);
+=======
+  aura::client::SetActivationChangeObserver(GetNativeWindow(), this);
+>>>>>>> .their
 }
 
 void AtomDesktopNativeWidgetAura::Activate() {
@@ -24,6 +28,7 @@
 }
 
 void AtomDesktopNativeWidgetAura::OnWindowActivated(
+<<<<<<< .our
     wm::ActivationChangeObserver::ActivationReason reason,
     aura::Window* gained_active,
     aura::Window* lost_active) {
@@ -32,6 +37,16 @@
   if (lost_active != nullptr) {
     auto* tooltip_controller = static_cast<views::corewm::TooltipController*>(
         wm::GetTooltipClient(lost_active->GetRootWindow()));
+=======
+    aura::client::ActivationChangeObserver::ActivationReason reason,
+    aura::Window* gained_active,
+    aura::Window* lost_active) {
+  views::DesktopNativeWidgetAura::OnWindowActivated(
+    reason, gained_active, lost_active);
+  if (lost_active != nullptr) {
+    auto* tooltip_controller = static_cast<views::corewm::TooltipController*>(
+      aura::client::GetTooltipClient(lost_active->GetRootWindow()));
+>>>>>>> .their
 
     // This will cause the tooltip to be hidden when a window is deactivated,
     // as it should be.
changed in both
  base   100644 b5a6c0933d5b6527e3f4ee2607acf888197b61ca atom/browser/ui/win/atom_desktop_native_widget_aura.h
  our    100644 81c6f2b394a8c1501d97fb017b1a58e4ca240d18 atom/browser/ui/win/atom_desktop_native_widget_aura.h
  their  100644 79ce3dd5cd4cc77fd2016e7ed4c93044a4873236 atom/browser/ui/win/atom_desktop_native_widget_aura.h
@@ -19,9 +19,16 @@
   void Activate() override;
 
  private:
+<<<<<<< .our
   void OnWindowActivated(wm::ActivationChangeObserver::ActivationReason reason,
                          aura::Window* gained_active,
                          aura::Window* lost_active) override;
+=======
+  void OnWindowActivated(
+      aura::client::ActivationChangeObserver::ActivationReason reason,
+      aura::Window* gained_active,
+      aura::Window* lost_active) override;
+>>>>>>> .their
   DISALLOW_COPY_AND_ASSIGN(AtomDesktopNativeWidgetAura);
 };
 
changed in both
  base   100644 cc621625818feaeddf4fb76cd9103c822795e652 atom/browser/web_contents_preferences.cc
  our    100644 c21c93383155091a7481cdd4e741cefad90a4a55 atom/browser/web_contents_preferences.cc
  their  100644 2a07ba7f22d06c3e0c1b072c2e291e0b9a8f3eb2 atom/browser/web_contents_preferences.cc
@@ -97,6 +97,7 @@
   instances_.push_back(this);
 
   // Set WebPreferences defaults onto the JS object
+<<<<<<< .our
   SetDefaultBoolIfUndefined(options::kPlugins, false);
   SetDefaultBoolIfUndefined(options::kExperimentalFeatures, false);
   bool node = SetDefaultBoolIfUndefined(options::kNodeIntegration, true);
@@ -104,12 +105,23 @@
   SetDefaultBoolIfUndefined(options::kWebviewTag, node);
   SetDefaultBoolIfUndefined(options::kSandbox, false);
   SetDefaultBoolIfUndefined(options::kNativeWindowOpen, false);
+=======
+  SetDefaultBoolIfUndefined("plugins", false);
+  SetDefaultBoolIfUndefined(options::kExperimentalFeatures, false);
+  SetDefaultBoolIfUndefined(options::kExperimentalCanvasFeatures, false);
+  bool node = SetDefaultBoolIfUndefined(options::kNodeIntegration, true);
+  SetDefaultBoolIfUndefined(options::kNodeIntegrationInWorker, false);
+  SetDefaultBoolIfUndefined(options::kWebviewTag, node);
+  SetDefaultBoolIfUndefined("sandbox", false);
+  SetDefaultBoolIfUndefined("nativeWindowOpen", false);
+>>>>>>> .their
   SetDefaultBoolIfUndefined(options::kContextIsolation, false);
   SetDefaultBoolIfUndefined("javascript", true);
   SetDefaultBoolIfUndefined("images", true);
   SetDefaultBoolIfUndefined("textAreasAreResizable", true);
   SetDefaultBoolIfUndefined("webgl", true);
   bool webSecurity = true;
+<<<<<<< .our
   SetDefaultBoolIfUndefined(options::kWebSecurity, webSecurity);
   // If webSecurity was explicity set to false, let's inherit that into
   // insecureContent
@@ -125,6 +137,21 @@
   SetDefaultBoolIfUndefined(options::kOffscreen, false);
 
   last_preference_ = preference_.Clone();
+=======
+  SetDefaultBoolIfUndefined("webSecurity", webSecurity);
+  // If webSecurity was explicity set to false, let's inherit that into
+  // insecureContent
+  if (web_preferences.Get("webSecurity", &webSecurity) && !webSecurity) {
+    SetDefaultBoolIfUndefined("allowRunningInsecureContent", true);
+  } else {
+    SetDefaultBoolIfUndefined("allowRunningInsecureContent", false);
+  }
+  #if defined(OS_MACOSX)
+  SetDefaultBoolIfUndefined(options::kScrollBounce, false);
+  #endif
+  SetDefaultBoolIfUndefined("offscreen", false);
+  last_web_preferences_.MergeDictionary(&web_preferences_);
+>>>>>>> .their
 }
 
 WebContentsPreferences::~WebContentsPreferences() {
@@ -154,6 +181,16 @@
   return default_value;
 }
 
+bool WebContentsPreferences::SetDefaultBoolIfUndefined(const std::string key,
+                                                       bool val) {
+  bool existing;
+  if (!web_preferences_.GetBoolean(key, &existing)) {
+    web_preferences_.SetBoolean(key, val);
+    return val;
+  }
+  return existing;
+}
+
 void WebContentsPreferences::Merge(const base::DictionaryValue& extend) {
   if (preference_.is_dict())
     static_cast<base::DictionaryValue*>(&preference_)->MergeDictionary(&extend);
@@ -212,8 +249,18 @@
   return FromWebContents(web_contents);
 }
 
+<<<<<<< .our
 void WebContentsPreferences::AppendCommandLineSwitches(
     base::CommandLine* command_line) {
+=======
+  // We are appending args to a webContents so let's save the current state
+  // of our preferences object so that during the lifetime of the WebContents
+  // we can fetch the options used to initally configure the WebContents
+  self->last_web_preferences_.Clear();
+  self->last_web_preferences_.MergeDictionary(&web_preferences);
+
+  bool b;
+>>>>>>> .their
   // Check if plugins are enabled.
   if (IsEnabled(options::kPlugins))
     command_line->AppendSwitch(switches::kEnablePlugins);
changed in both
  base   100644 366aa1d9520847d6b81e673cc5a2156d53cc5ba5 atom/browser/web_contents_preferences.h
  our    100644 d835347afcd259f473f95271a2c19e42afcc6f2b atom/browser/web_contents_preferences.h
  their  100644 be277487d1d669b5e85676ff1a7ca4da365c0572 atom/browser/web_contents_preferences.h
@@ -59,8 +59,15 @@
   bool GetPreloadPath(base::FilePath::StringType* path) const;
 
   // Returns the web preferences.
+<<<<<<< .our
   base::Value* preference() { return &preference_; }
   base::Value* last_preference() { return &last_preference_; }
+=======
+  base::DictionaryValue* web_preferences() { return &web_preferences_; }
+  base::DictionaryValue* last_web_preferences() {
+    return &last_web_preferences_;
+  }
+>>>>>>> .their
 
  private:
   friend class content::WebContentsUserData<WebContentsPreferences>;
@@ -75,6 +82,14 @@
   static std::vector<WebContentsPreferences*> instances_;
 
   content::WebContents* web_contents_;
+<<<<<<< .our
+=======
+  base::DictionaryValue web_preferences_;
+  base::DictionaryValue last_web_preferences_;
+
+  // Set preference value to given bool if user did not provide value
+  bool SetDefaultBoolIfUndefined(const std::string key, bool val);
+>>>>>>> .their
 
   base::Value preference_ = base::Value(base::Value::Type::DICTIONARY);
   base::Value last_preference_ = base::Value(base::Value::Type::DICTIONARY);
changed in both
  base   100644 a20d962c0a82ff7e79bf6552334c2788c235cc3a atom/browser/web_dialog_helper.cc
  our    100644 74c8573d13f15bcaa189abdc40fa0cd8e48f89be atom/browser/web_dialog_helper.cc
  their  100644 19e5c11a6186ce9e99f61a98e1e965508020648c atom/browser/web_dialog_helper.cc
changed in both
  base   100644 08880ffe4a3591d9010f55ef18ce288e69101fe1 atom/common/atom_command_line.cc
  our    100644 287e43f75fef778948ef9acdac8b9a7edfe07d0a atom/common/atom_command_line.cc
  their  100644 54420b533a6b2600a87c95645b73bc01fbf0122f atom/common/atom_command_line.cc
changed in both
  base   100644 a279283cf09dd0275c41669362a9659c01b790dd atom/common/atom_version.h
  our    100644 65e7d19911559a40b1b258319df5fe0fa180354f atom/common/atom_version.h
  their  100644 1fb5ba2490e9da47a5eedfe7e2ea9a68da84621d atom/common/atom_version.h
@@ -5,10 +5,17 @@
 #ifndef ATOM_COMMON_ATOM_VERSION_H_
 #define ATOM_COMMON_ATOM_VERSION_H_
 
+<<<<<<< .our
 #define ATOM_MAJOR_VERSION 4
 #define ATOM_MINOR_VERSION 0
 #define ATOM_PATCH_VERSION 0
 #define ATOM_PRE_RELEASE_VERSION -nightly.20180821
+=======
+#define ATOM_MAJOR_VERSION 1
+#define ATOM_MINOR_VERSION 8
+#define ATOM_PATCH_VERSION 8
+// #define ATOM_PRE_RELEASE_VERSION
+>>>>>>> .their
 
 #ifndef ATOM_STRINGIFY
 #define ATOM_STRINGIFY(n) ATOM_STRINGIFY_HELPER(n)
@@ -16,6 +23,7 @@
 #endif
 
 #ifndef ATOM_PRE_RELEASE_VERSION
+<<<<<<< .our
 #define ATOM_VERSION_STRING          \
   ATOM_STRINGIFY(ATOM_MAJOR_VERSION) \
   "." ATOM_STRINGIFY(ATOM_MINOR_VERSION) "." ATOM_STRINGIFY(ATOM_PATCH_VERSION)
@@ -24,6 +32,16 @@
   ATOM_STRINGIFY(ATOM_MAJOR_VERSION)                         \
   "." ATOM_STRINGIFY(ATOM_MINOR_VERSION) "." ATOM_STRINGIFY( \
       ATOM_PATCH_VERSION) ATOM_STRINGIFY(ATOM_PRE_RELEASE_VERSION)
+=======
+  #define ATOM_VERSION_STRING ATOM_STRINGIFY(ATOM_MAJOR_VERSION) "." \
+                              ATOM_STRINGIFY(ATOM_MINOR_VERSION) "." \
+                              ATOM_STRINGIFY(ATOM_PATCH_VERSION)
+#else
+  #define ATOM_VERSION_STRING ATOM_STRINGIFY(ATOM_MAJOR_VERSION) "." \
+                              ATOM_STRINGIFY(ATOM_MINOR_VERSION) "." \
+                              ATOM_STRINGIFY(ATOM_PATCH_VERSION)     \
+                              ATOM_STRINGIFY(ATOM_PRE_RELEASE_VERSION)
+>>>>>>> .their
 #endif
 
 #define ATOM_VERSION "v" ATOM_VERSION_STRING
changed in both
  base   100644 a7908ef30c6bafc4aca1da9a870f7ae12703fe04 atom/common/crash_reporter/crash_reporter_win.cc
  our    100644 c574da71c9de9bd8c7b7cad57d3a0f84708fb97c atom/common/crash_reporter/crash_reporter_win.cc
  their  100644 49f90b7e6665727b697a243414544bae304fde6e atom/common/crash_reporter/crash_reporter_win.cc
changed in both
  base   100644 03e96ae8a4f3cb7e656143fb46dff58eb924fa12 atom/common/node_bindings.cc
  our    100644 e6aded2e661af919c2d89c2f9bd46b4921d4aec4 atom/common/node_bindings.cc
  their  100644 84792c58207dd85de2d2b60bd789417346c31b50 atom/common/node_bindings.cc
@@ -228,8 +228,12 @@
 }
 
 node::Environment* NodeBindings::CreateEnvironment(
+<<<<<<< .our
     v8::Handle<v8::Context> context,
     node::MultiIsolatePlatform* platform) {
+=======
+    v8::Handle<v8::Context> context) {
+>>>>>>> .their
 #if defined(OS_WIN)
   auto& atom_args = AtomCommandLine::argv();
   std::vector<std::string> args(atom_args.size());
@@ -255,8 +259,13 @@
   base::FilePath resources_path = GetResourcesPath(browser_env_ == BROWSER);
   base::FilePath script_path =
       resources_path.Append(FILE_PATH_LITERAL("electron.asar"))
+<<<<<<< .our
           .Append(process_type)
           .Append(FILE_PATH_LITERAL("init.js"));
+=======
+                    .Append(process_type)
+                    .Append(FILE_PATH_LITERAL("init.js"));
+>>>>>>> .their
   args.insert(args.begin() + 1, script_path.AsUTF8Unsafe());
 
   std::unique_ptr<const char* []> c_argv = StringVectorToArgArray(args);
changed in both
  base   100644 a265b942f31ff76d7e21da03e7eafb6d164fd610 atom/renderer/api/atom_api_web_frame.cc
  our    100644 f0f7ef249d73876f7107d3d3865e8fc71ee33945 atom/renderer/api/atom_api_web_frame.cc
  their  100644 b0b5e4fd5f42b9755a8ad9e1063baed70b9ed358 atom/renderer/api/atom_api_web_frame.cc
@@ -13,7 +13,10 @@
 #include "atom/renderer/api/atom_api_spell_check_client.h"
 #include "base/memory/memory_pressure_listener.h"
 #include "content/public/renderer/render_frame.h"
+<<<<<<< .our
 #include "content/public/renderer/render_frame_observer.h"
+=======
+>>>>>>> .their
 #include "content/public/renderer/render_frame_visitor.h"
 #include "content/public/renderer/render_view.h"
 #include "native_mate/dictionary.h"
@@ -119,7 +122,11 @@
     main_frame_ = nullptr;
   }
   bool Visit(content::RenderFrame* render_frame) override {
+<<<<<<< .our
     auto* view = render_frame->GetRenderView();
+=======
+    auto view = render_frame->GetRenderView();
+>>>>>>> .their
     if (view->GetMainRenderFrame() == main_frame_ ||
         (render_frame->IsMainFrame() && render_frame == main_frame_)) {
       render_frame->GetWebFrame()->SetTextCheckClient(spell_check_client_);
@@ -222,15 +229,30 @@
     return;
   }
 
+<<<<<<< .our
   auto client = std::make_unique<SpellCheckClient>(
       language, auto_spell_correct_turned_on, args->isolate(), provider);
+=======
+  std::unique_ptr<SpellCheckClient> client(new SpellCheckClient(
+      language, auto_spell_correct_turned_on, args->isolate(), provider));
+>>>>>>> .their
   // Set spellchecker for all live frames in the same process or
   // in the sandbox mode for all live sub frames to this WebFrame.
   FrameSpellChecker spell_checker(
       client.get(), content::RenderFrame::FromWebFrame(web_frame_));
   content::RenderFrame::ForEach(&spell_checker);
   spell_check_client_.swap(client);
+<<<<<<< .our
   web_frame_->SetSpellCheckPanelHostClient(spell_check_client_.get());
+=======
+  web_frame_->View()->SetSpellCheckClient(spell_check_client_.get());
+}
+
+void WebFrame::RegisterURLSchemeAsSecure(const std::string& scheme) {
+  // TODO(pfrazee): Remove 2.0
+  blink::SchemeRegistry::RegisterURLSchemeAsSecure(
+      WTF::String::FromUTF8(scheme.data(), scheme.length()));
+>>>>>>> .their
 }
 
 void WebFrame::RegisterURLSchemeAsBypassingCSP(const std::string& scheme) {
changed in both
  base   100644 069ff42e7bf6e01f69e76738925e35560c981b49 atom/renderer/atom_sandboxed_renderer_client.cc
  our    100644 6e29fe45a69f44856d7fca449ec1be4eaf6970a2 atom/renderer/atom_sandboxed_renderer_client.cc
  their  100644 f8acc3b1b942496ea974cf51e5a06275e1a0c0fa atom/renderer/atom_sandboxed_renderer_client.cc
@@ -33,11 +33,14 @@
 const std::string kIpcKey = "ipcNative";
 const std::string kModuleCacheKey = "native-module-cache";
 
+<<<<<<< .our
 bool IsDevTools(content::RenderFrame* render_frame) {
   return render_frame->GetWebFrame()->GetDocument().Url().ProtocolIs(
       "chrome-devtools");
 }
 
+=======
+>>>>>>> .their
 v8::Local<v8::Object> GetModuleCache(v8::Isolate* isolate) {
   mate::Dictionary global(isolate, isolate->GetCurrentContext()->Global());
   v8::Local<v8::Value> cache;
@@ -176,6 +179,7 @@
 }
 
 void AtomSandboxedRendererClient::DidCreateScriptContext(
+<<<<<<< .our
     v8::Handle<v8::Context> context,
     content::RenderFrame* render_frame) {
   RendererClientBase::DidCreateScriptContext(context, render_frame);
@@ -184,6 +188,12 @@
   // For devtools we still want to run the preload_bundle script
   if (!render_frame->IsMainFrame() && !IsDevTools(render_frame))
     return;
+=======
+    v8::Handle<v8::Context> context, content::RenderFrame* render_frame) {
+  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  std::string preload_script = command_line->GetSwitchValueASCII(
+      switches::kPreloadScript);
+>>>>>>> .their
 
   auto* isolate = context->GetIsolate();
   v8::HandleScope handle_scope(isolate);
changed in both
  base   100644 04fc46b740297570b1ef7fc6f97b90dc8ebb6cc2 brightray/brightray.gypi
  our    100644 8a945dc0219293d90e30162e4691a4d871071f4f brightray/brightray.gypi
  their  100644 4473ced3efbd1668f207511aa7c3510682fd2e74 brightray/brightray.gypi
@@ -249,7 +249,11 @@
             # perform FPO regardless, so we must explicitly disable.
             # We still want the false setting above to avoid having
             # "/Oy /Oy-" and warnings about overriding.
+<<<<<<< .our
             'AdditionalOptions': ['/Oy-', '/guard:cf'],
+=======
+            'AdditionalOptions': ['/Oy-', '/d2guard4'],
+>>>>>>> .their
           },
           'VCLibrarianTool': {
             'LinkTimeCodeGeneration': 'true',  # /LTCG
@@ -293,6 +297,7 @@
           }],  # OS=="linux"
           ['OS=="linux" and target_arch in ["ia32", "x64", "arm64"]', {
             'cflags': [
+<<<<<<< .our
               '-flto=thin',
             ],
             'ldflags': [
@@ -301,6 +306,16 @@
               '-Wl,--lto-O0',  # this could be removed in future; see https://codereview.chromium.org/2939923004
               '-Wl,-mllvm,-function-sections',
               '-Wl,-mllvm,-data-sections',
+=======
+              '-flto',
+            ],
+            'ldflags': [
+              '-flto',
+              '-fuse-ld=gold',
+              '-Wl,-plugin-opt,O1',
+              '-Wl,-plugin-opt,-function-sections',
+              '-Wl,--icf=all',
+>>>>>>> .their
             ],
           }],
         ],
changed in both
  base   100644 8dea03f1fc6444d6bf56c4ac3ea2fdec206b42da brightray/browser/win/win32_desktop_notifications/desktop_notification_controller.cc
  our    100644 71395a49d82f7be8a3ffd66e4795af968973a274 brightray/browser/win/win32_desktop_notifications/desktop_notification_controller.cc
  their  100644 358074c602bebb7e440c1c5cd01708617f5b29e9 brightray/browser/win/win32_desktop_notifications/desktop_notification_controller.cc
@@ -176,6 +176,7 @@
 }
 
 void DesktopNotificationController::AnimateAll() {
+<<<<<<< .our
   // NOTE: This function refreshes position and size of all toasts according
   // to all current conditions. Animation time is only one of the variables
   // influencing them. Screen resolution is another.
@@ -204,6 +205,35 @@
 
       if (hdwp)
         EndDeferWindowPos(hdwp);
+=======
+    // NOTE: This function refreshes position and size of all toasts according
+    // to all current conditions. Animation time is only one of the variables
+    // influencing them. Screen resolution is another.
+
+    bool keep_animating = false;
+
+    if (!instances_.empty()) {
+        RECT work_area;
+        if (SystemParametersInfo(SPI_GETWORKAREA, 0, &work_area, 0)) {
+            ScreenMetrics metrics;
+            POINT origin = { work_area.right,
+                             work_area.bottom - metrics.Y(toast_margin_) };
+
+            auto hdwp =
+                BeginDeferWindowPos(static_cast<int>(instances_.size()));
+
+            for (auto&& inst : instances_) {
+                if (!inst.hwnd) continue;
+
+                auto notification = Toast::Get(inst.hwnd);
+                hdwp = notification->Animate(hdwp, origin);
+                if (!hdwp) break;
+                keep_animating |= notification->IsAnimationActive();
+            }
+
+            if (hdwp) EndDeferWindowPos(hdwp);
+        }
+>>>>>>> .their
     }
   }
 
@@ -259,8 +289,29 @@
         else
           toast->SetVerticalPosition(target_pos);
 
+<<<<<<< .our
         target_pos += toast->GetHeight() + margin;
       }
+=======
+    // Set new toast positions
+    if (!instances_.empty()) {
+        ScreenMetrics metrics;
+        auto margin = metrics.Y(toast_margin_);
+
+        int target_pos = 0;
+        for (auto&& inst : instances_) {
+            if (inst.hwnd) {
+                auto toast = Toast::Get(inst.hwnd);
+
+                if (toast->IsHighlighted())
+                    target_pos = toast->GetVerticalPosition();
+                else
+                    toast->SetVerticalPosition(target_pos);
+
+                target_pos += toast->GetHeight() + margin;
+            }
+        }
+>>>>>>> .their
     }
   }
 
@@ -310,6 +361,7 @@
 }
 
 void DesktopNotificationController::CreateToast(NotificationLink&& data) {
+<<<<<<< .our
   auto* hinstance = RegisterWndClasses();
   auto* hwnd = Toast::Create(hinstance, data);
   if (hwnd) {
@@ -322,6 +374,35 @@
       auto* toast = Toast::Get(item.hwnd);
       toast_pos = toast->GetVerticalPosition() + toast->GetHeight() +
                   scr.Y(toast_margin_);
+=======
+    auto hinstance = RegisterWndClasses();
+    auto hwnd = Toast::Create(hinstance, data);
+    if (hwnd) {
+        int toast_pos = 0;
+        if (!instances_.empty()) {
+            auto& item = instances_.back();
+            _ASSERT(item.hwnd);
+
+            ScreenMetrics scr;
+            auto toast = Toast::Get(item.hwnd);
+            toast_pos = toast->GetVerticalPosition() +
+                        toast->GetHeight() +
+                        scr.Y(toast_margin_);
+        }
+
+        instances_.push_back({ hwnd, move(data) });
+
+        if (!hwnd_controller_) {
+            // NOTE: We cannot use a message-only window because we need to
+            //       receive system notifications
+            hwnd_controller_ = CreateWindow(class_name_, nullptr, 0,
+                                            0, 0, 0, 0,
+                                            NULL, NULL, hinstance, this);
+        }
+
+        auto toast = Toast::Get(hwnd);
+        toast->PopUp(toast_pos);
+>>>>>>> .their
     }
 
     instances_.push_back({hwnd, move(data)});
changed in both
  base   100644 643a61f5331e0765de31e8cfeab58416e4c23e42 brightray/browser/win/win32_desktop_notifications/desktop_notification_controller.h
  our    100644 d6d8fd35a2958b39dc0f6a76b4ee110b2951c832 brightray/browser/win/win32_desktop_notifications/desktop_notification_controller.h
  their  100644 1e76e1e1ad2ed268dae7ac5327d7dc56ea48a05a brightray/browser/win/win32_desktop_notifications/desktop_notification_controller.h
@@ -33,6 +33,7 @@
   HFONT GetBodyFont();
 
  private:
+<<<<<<< .our
   enum TimerID { TimerID_Animate = 1 };
 
   static constexpr int toast_margin_ = 20;
@@ -74,6 +75,50 @@
   void CreateToast(NotificationLink&& data);
   HWND GetToast(const NotificationData* data) const;
   void DestroyToast(ToastInstance& inst);
+=======
+    enum TimerID {
+        TimerID_Animate = 1
+    };
+
+    static constexpr int toast_margin_ = 20;
+
+    // Wrapper around `NotificationData` which makes sure that
+    // the `controller` member is cleared when the controller object
+    // stops tracking the notification
+    struct NotificationLink : std::shared_ptr<NotificationData> {
+        explicit NotificationLink(DesktopNotificationController* controller);
+        ~NotificationLink();
+
+        NotificationLink(NotificationLink&&) = default;
+        NotificationLink(const NotificationLink&) = delete;
+        NotificationLink& operator=(NotificationLink&&) = default;
+    };
+
+    struct ToastInstance {
+        HWND hwnd;
+        NotificationLink data;
+    };
+
+    class Toast;
+
+    static LRESULT CALLBACK WndProc(HWND hwnd, UINT message,
+                                    WPARAM wparam, LPARAM lparam);
+    static DesktopNotificationController* Get(HWND hwnd) {
+        return reinterpret_cast<DesktopNotificationController*>(
+            GetWindowLongPtr(hwnd, 0));
+    }
+
+    DesktopNotificationController(
+        const DesktopNotificationController&) = delete;
+
+    void InitializeFonts();
+    void ClearAssets();
+    void AnimateAll();
+    void CheckQueue();
+    void CreateToast(NotificationLink&& data);
+    HWND GetToast(const NotificationData* data) const;
+    void DestroyToast(ToastInstance& inst);
+>>>>>>> .their
 
  private:
   static const TCHAR class_name_[];
changed in both
  base   100644 31797a87ec72a2448dc7fbca979bcb6924682d0b common.gypi
  our    100644 676d1e904127066e4a3d313106f15406fcbed8b6 common.gypi
  their  100644 d71415add7a1b124816b99b1f0ee5a6aa9c1f696 common.gypi
@@ -155,7 +155,10 @@
           'BUILDING_V8_SHARED',
           'BUILDING_V8_PLATFORM_SHARED',
           'BUILDING_V8_BASE_SHARED',
+<<<<<<< .our
           'NODE_WITHOUT_NODE_OPTIONS',
+=======
+>>>>>>> .their
         ],
         'conditions': [
           ['OS=="mac" and libchromiumcontent_component==0', {
changed in both
  base   100644 6ed06d4be4a82ee91e44bea9a733cce6b05da0ab docs/api/browser-view.md
  our    100644 ee1780942db5565c9c9a9e3a4139345c413e1eb9 docs/api/browser-view.md
  their  100644 d2e368725fc4d6d407020c0cc426ca88d69fe407 docs/api/browser-view.md
changed in both
  base   100644 2cddafa25e762d12efb14d67684b587414f76d5d docs/api/browser-window.md
  our    100644 dff61dd336f047cf2f6f06228b2df2b98ff2304d docs/api/browser-window.md
  their  100644 9389f38af2214eda6bc0140614bc189933f46c55 docs/api/browser-window.md
changed in both
  base   100644 52147bcc292d77f10bb58f8d4c58e6403b1055e2 docs/api/tray.md
  our    100644 c60f7ba4c9e9b6ad3fc1b2f717983b71bd286842 docs/api/tray.md
  their  100644 6b1b3e41c2cf0195cb5de29323f2fef1d86abe74 docs/api/tray.md
changed in both
  base   100644 9b56820d04944a1ca1747e9474d73617239ba81a docs/api/web-contents.md
  our    100644 8990fe2e97ab62eafdd3f7a4eb8ee782415124c5 docs/api/web-contents.md
  their  100644 087c73784096f093cc5b242d7a3b34501c1b2bf5 docs/api/web-contents.md
@@ -1385,6 +1385,26 @@
 
 Shows pop-up dictionary that searches the selected word on the page.
 
+<<<<<<< .our
+=======
+#### `contents.setSize(options)`
+
+Set the size of the page. This is only supported for `<webview>` guest contents.
+
+* `options` Object
+  * `enableAutoSize` Boolean (optional) - true to make the webview container automatically
+    resize within the bounds specified by the attributes normal, min and max.
+  * `normal` [Size](structures/size.md) (optional) - Normal size of the page. This can be used in
+    combination with the [`disableguestresize`](webview-tag.md#disableguestresize)
+    attribute to manually resize the webview guest contents.
+  * `min` [Size](structures/size.md) (optional) - Minimum size of the page. This can be used in
+    combination with the [`disableguestresize`](webview-tag.md#disableguestresize)
+    attribute to manually resize the webview guest contents.
+  * `max` [Size](structures/size.md) (optional) - Maximium size of the page. This can be used in
+    combination with the [`disableguestresize`](webview-tag.md#disableguestresize)
+    attribute to manually resize the webview guest contents.
+
+>>>>>>> .their
 #### `contents.isOffscreen()`
 
 Returns `Boolean` - Indicates whether *offscreen rendering* is enabled.
changed in both
  base   100644 abe8e4d916264e4de586486c20f961f687ee271c docs/api/web-frame.md
  our    100644 989060ef3e50c5d93db1a914997f1d190edf3cf5 docs/api/web-frame.md
  their  100644 dee3e150db50c002b7cef8e3424e3843e349fc83 docs/api/web-frame.md
changed in both
  base   100644 7474cec466c793aada767b2100f5a9f38cc15f87 docs/tutorial/supported-platforms.md
  our    100644 6c84b1438b8fb1f328b38b701c86a8ec9a7483de docs/tutorial/supported-platforms.md
  their  100644 9f7b44274c3f3375950c348fe9789bb9e2d3dadf docs/tutorial/supported-platforms.md
@@ -1 +1,47 @@
+<<<<<<< .our
 Moved to [support.md](support.md)
+=======
+# Supported Platforms
+
+Following platforms are supported by Electron:
+
+### macOS
+
+Only 64bit binaries are provided for macOS, and the minimum macOS version
+supported is macOS 10.9.
+
+### Windows
+
+Windows 7 and later are supported, older operating systems are not supported
+(and do not work).
+
+Both `ia32` (`x86`) and `x64` (`amd64`) binaries are provided for Windows.
+Please note, the `ARM` version of Windows is not supported for now.
+
+### Linux
+
+The prebuilt binaries of Electron are built for Debian Jessie, but whether the
+prebuilt binary can run on a distribution depends on whether the distribution
+includes the libraries that Electron is linked to on the building platform, so
+only Debian Jessie is guaranteed to work, but following platforms are also
+verified to be able to run the prebuilt binaries of Electron:
+
+* Ubuntu 12.04 and later
+* Fedora 21
+* Debian 8 and later
+
+Electorn provides prebuilt binaries for following CPU architectures:
+
+* `ia32` (`i686`)
+* `x64` (`amd64`)
+* `armv7l`
+* `arm64`
+* `mips64el`
+
+The `arm` binary is built against ARM v7 with hard-float ABI and NEON, and it is
+not guaranteed to run on all ARM platforms.
+
+The `mips64el` binary is built with toolchains provided by Loongson, and it is
+not guaranteed to run on all MIPS64 platforms. And currently all certificate
+related APIs are not working on `mips64el` builds.
+>>>>>>> .their
changed in both
  base   100644 e3bf588e79cadae8673419e9854ad5063aa9beac electron.gyp
  our    100644 944ddab2a3fd879044e31677e4bac2843fffbdee electron.gyp
  their  100644 b5f923dd3cc421473140a513757fe5b469dffc89 electron.gyp
@@ -4,7 +4,11 @@
     'product_name%': 'Electron',
     'company_name%': 'GitHub, Inc',
     'company_abbr%': 'github',
+<<<<<<< .our
     'version%': '4.0.0-nightly.20180821',
+=======
+    'version%': '1.8.8',
+>>>>>>> .their
     'js2c_input_dir': '<(SHARED_INTERMEDIATE_DIR)/js2c',
   },
   'includes': [
@@ -255,6 +259,11 @@
               ],
             },
           ],
+          'link_settings': {
+            'ldflags': [
+              '-Wl,-z,noexecstack',
+            ],
+          },
         }],  # OS=="linux"
       ],
     },  # target <(project_name)
changed in both
  base   100644 f071924231c089bc6308bd334450770795ff4858 filenames.gypi
  our    100644 f57860558f06b7e5d8a50f48cfc7e53044df0bc6 filenames.gypi
  their  100644 ad7256736ef4a64683d4a6dd57e020c96e3543d1 filenames.gypi
@@ -114,6 +114,11 @@
       'atom/app/atom_main_delegate_mac.mm',
       'atom/app/command_line_args.cc',
       'atom/app/command_line_args.h',
+<<<<<<< .our
+=======
+      'atom/app/node_main.cc',
+      'atom/app/node_main.h',
+>>>>>>> .their
       'atom/app/uv_task_runner.cc',
       'atom/app/uv_task_runner.h',
       'atom/browser/api/atom_api_app.cc',
changed in both
  base   100644 33c324d4fa8cca5ba6e914deb3f1404333e178c0 lib/browser/api/menu.js
  our    100644 506e3525c10ce142cafe3fc1bf4de1c255e48503 lib/browser/api/menu.js
  their  100644 b7556b1f41b9db0424303add30acdba9fa969721 lib/browser/api/menu.js
@@ -44,15 +44,52 @@
   this.commandsMap = {}
   this.groupsMap = {}
   this.items = []
+<<<<<<< .our
   this.delegate = delegate
 }
 
 Menu.prototype.popup = function (options = {}) {
   if (options == null || typeof options !== 'object') {
     throw new TypeError('Options must be an object')
+=======
+  this.delegate = {
+    isCommandIdChecked: id => this.commandsMap[id] ? this.commandsMap[id].checked : undefined,
+    isCommandIdEnabled: id => this.commandsMap[id] ? this.commandsMap[id].enabled : undefined,
+    isCommandIdVisible: id => this.commandsMap[id] ? this.commandsMap[id].visible : undefined,
+    getAcceleratorForCommandId: (id, useDefaultAccelerator) => {
+      const command = this.commandsMap[id]
+      if (!command) return
+      if (command.accelerator != null) return command.accelerator
+      if (useDefaultAccelerator) return command.getDefaultRoleAccelerator()
+    },
+    getIconForCommandId: id => this.commandsMap[id] ? this.commandsMap[id].icon : undefined,
+    executeCommand: (event, id) => {
+      const command = this.commandsMap[id]
+      if (!command) return
+      command.click(event, BrowserWindow.getFocusedWindow(), webContents.getFocusedWebContents())
+    },
+    menuWillShow: () => {
+      // Ensure radio groups have at least one menu item seleted
+      for (const id in this.groupsMap) {
+        const found = this.groupsMap[id].find(item => item.checked) || null
+        if (!found) v8Util.setHiddenValue(this.groupsMap[id][0], 'checked', true)
+      }
+    }
+  }
+}
+
+Menu.prototype.popup = function (window, x, y, positioningItem) {
+  let asyncPopup, opts
+  let [newX, newY, newPosition, newWindow] = [x, y, positioningItem, window]
+
+  // menu.popup(x, y, positioningItem)
+  if (window != null && !(window instanceof BrowserWindow)) {
+    [newPosition, newY, newX, newWindow] = [y, x, window, null]
+>>>>>>> .their
   }
   let {window, x, y, positioningItem, callback} = options
 
+<<<<<<< .our
   // no callback passed
   if (!callback || typeof callback !== 'function') callback = () => {}
 
@@ -75,6 +112,46 @@
 
   this.popupAt(window, x, y, positioningItem, callback)
   return { browserWindow: window, x, y, position: positioningItem }
+=======
+  // menu.popup({})
+  if (window != null && window.constructor === Object) {
+    opts = window
+  // menu.popup(window, {})
+  } else if (x && typeof x === 'object') {
+    opts = x
+  }
+
+  if (opts) {
+    newX = opts.x
+    newY = opts.y
+    newPosition = opts.positioningItem
+    asyncPopup = opts.async
+  }
+
+  // set defaults
+  if (typeof newX !== 'number') newX = -1
+  if (typeof newY !== 'number') newY = -1
+  if (typeof newPosition !== 'number') newPosition = -1
+  if (typeof asyncPopup !== 'boolean') asyncPopup = false
+  if (!newWindow || (newWindow && newWindow.constructor !== BrowserWindow)) {
+    newWindow = BrowserWindow.getFocusedWindow()
+
+    // No window focused?
+    if (!newWindow) {
+      const browserWindows = BrowserWindow.getAllWindows()
+
+      if (browserWindows && browserWindows.length > 0) {
+        newWindow = browserWindows[0]
+      } else {
+        throw new Error(`Cannot open Menu without a BrowserWindow present`)
+      }
+    }
+  }
+
+  this.popupAt(newWindow, newX, newY, newPosition, asyncPopup)
+
+  return { browserWindow: newWindow, x: newX, y: newY, position: newPosition, async: asyncPopup }
+>>>>>>> .their
 }
 
 Menu.prototype.closePopup = function (window) {
@@ -156,7 +233,11 @@
 
 Menu.buildFromTemplate = function (template) {
   if (!Array.isArray(template)) {
+<<<<<<< .our
     throw new TypeError('Invalid template for Menu: Menu template must be an array')
+=======
+    throw new TypeError('Invalid template for Menu')
+>>>>>>> .their
   }
   const menu = new Menu()
   if (!areValidTemplateItems(template)) {
changed in both
  base   100644 65e9694954a4dd5ff47080d77886c34b94fcec4e lib/browser/api/touch-bar.js
  our    100644 72c50f6ff19d2a72d191a83ce33a3667f26b0756 lib/browser/api/touch-bar.js
  their  100644 8294582129905e8384f74b3bdc4aa84b4dc32281 lib/browser/api/touch-bar.js
changed in both
  base   100644 0338b776f8938c1548ea9786385fe75db9db3403 lib/browser/guest-view-manager.js
  our    100644 1e4029e39a981c85fb6ff18c5ccd52f81b3c56f2 lib/browser/guest-view-manager.js
  their  100644 dd8e0ff1a9239e5c7a92f90a58da866c076011ca lib/browser/guest-view-manager.js
changed in both
  base   100644 bd9473dda879723625af24c0f98de2855234a2c7 lib/browser/guest-window-manager.js
  our    100644 7253c1942b0956ae6b9b0c80a23470fc26669b8a lib/browser/guest-window-manager.js
  their  100644 6ff9e5f530f0ba4b3c0011ca6d345d7baa9c3a8f lib/browser/guest-window-manager.js
@@ -52,7 +52,11 @@
     // if parent's visibility is available, that overrides 'show' flag (#12125)
     const win = BrowserWindow.fromWebContents(embedder.webContents)
     if (win != null) {
+<<<<<<< .our
       parentOptions = {...embedder.browserWindowOptions, show: win.isVisible()}
+=======
+      parentOptions = Object.assign({}, embedder.browserWindowOptions, {show: win.isVisible()})
+>>>>>>> .their
     }
 
     // Inherit the original options if it is a BrowserWindow.
@@ -65,7 +69,11 @@
   // Inherit certain option values from parent window
   const webPreferences = embedder.getLastWebPreferences()
   for (const [name, value] of inheritedWebPreferences) {
+<<<<<<< .our
     if (webPreferences[name] === value) {
+=======
+    if (embedder.getLastWebPreferences()[name] === value) {
+>>>>>>> .their
       options.webPreferences[name] = value
     }
   }
changed in both
  base   100644 0d1a251c4da9d0cc83a3916f99bdd13900653ce2 lib/renderer/init.js
  our    100644 2470a5e8be80e770b0c03f6a439a71e72ae12a1b lib/renderer/init.js
  their  100644 bb349cbd0a2945a14198e56c7579329a4b0721a0 lib/renderer/init.js
changed in both
  base   100644 119391e79462bfa8bb1494039bcb3522d97acead lib/sandboxed_renderer/init.js
  our    100644 30a3fa55216f6bf7588c3accc07b150a31163b7c lib/sandboxed_renderer/init.js
  their  100644 a1acbb2bdc26b33db4041e31cbb251b0399ac197 lib/sandboxed_renderer/init.js
@@ -35,12 +35,15 @@
   ['url', require('url')]
 ])
 
+<<<<<<< .our
 const {
   preloadSrc, preloadError, process: processProps
 } = electron.ipcRenderer.sendSync('ELECTRON_BROWSER_SANDBOX_LOAD')
 
 require('../renderer/web-frame-init')()
 
+=======
+>>>>>>> .their
 // Pass different process object to the preload script(which should not have
 // access to things like `process.atomBinding`).
 const preloadProcess = new events.EventEmitter()
@@ -78,6 +81,7 @@
   require('../renderer/inspector')
 }
 
+<<<<<<< .our
 if (binding.guestInstanceId) {
   process.guestInstanceId = parseInt(binding.guestInstanceId)
 }
@@ -88,6 +92,8 @@
   require('../renderer/web-view/web-view-attributes')
 }
 
+=======
+>>>>>>> .their
 // Wrap the script into a function executed in global scope. It won't have
 // access to the current scope, so we'll expose a few objects as arguments:
 //
@@ -107,6 +113,7 @@
 // and any `require('electron')` calls in `preload.js` will work as expected
 // since browserify won't try to include `electron` in the bundle, falling back
 // to the `preloadRequire` function above.
+<<<<<<< .our
 if (preloadSrc) {
   const preloadWrapperSrc = `(function(require, process, Buffer, global, setImmediate, clearImmediate) {
   ${preloadSrc}
@@ -118,4 +125,18 @@
   preloadFn(preloadRequire, preloadProcess, Buffer, global, setImmediate, clearImmediate)
 } else if (preloadError) {
   console.error(preloadError.stack)
+=======
+if (preloadPath) {
+  const preloadSrc = fs.readFileSync(preloadPath).toString()
+  const preloadWrapperSrc = `(function(require, process, Buffer, global, setImmediate) {
+  ${preloadSrc}
+  })`
+
+  // eval in window scope:
+  // http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.2
+  const geval = eval
+  const preloadFn = geval(preloadWrapperSrc)
+  const {setImmediate} = require('timers')
+  preloadFn(preloadRequire, preloadProcess, Buffer, global, setImmediate)
+>>>>>>> .their
 }
added in both
  our    100644 b1d8824658ea05c277e82d1ac6c6febab9c55030 package-lock.json
  their  100644 3ce50996b6fb78ed2ed6924a639f01139f53866a package-lock.json
@@ -1,13 +1,23 @@
 {
   "name": "electron",
+<<<<<<< .our
   "version": "4.0.0-nightly.20180819",
+=======
+  "version": "1.8.5",
+>>>>>>> .their
   "lockfileVersion": 1,
   "requires": true,
   "dependencies": {
     "@types/node": {
+<<<<<<< .our
       "version": "7.0.69",
       "resolved": "https://registry.npmjs.org/@types/node/-/node-7.0.69.tgz",
       "integrity": "sha512-S5NC8HV6HnRipg8nC0j30TPl7ktXjRTKqgyINLNe8K/64UJUI8Lq0sRopXC0hProsV2F5ibj8IqPkl1xpGggrw==",
+=======
+      "version": "7.0.59",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-7.0.59.tgz",
+      "integrity": "sha512-FRRJ2hkgzySTgLnwQhXQCGkLRu1ImISVu/YKYWXCIbF6261nqXwDPQ+6xPzZw+c2Il2Zx2JfM/t0tCaw8wzbmA==",
+>>>>>>> .their
       "dev": true
     },
     "JSONStream": {
@@ -30,6 +40,7 @@
     "abbrev": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
+<<<<<<< .our
       "integrity": "sha1-+PLIh60Qv2f2NPAFtph/7TF5qsg=",
       "dev": true
     },
@@ -43,6 +54,11 @@
         "negotiator": "0.6.1"
       }
     },
+=======
+      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
+      "dev": true
+    },
+>>>>>>> .their
     "acorn": {
       "version": "4.0.13",
       "resolved": "https://registry.npmjs.org/acorn/-/acorn-4.0.13.tgz",
@@ -109,12 +125,15 @@
       "integrity": "sha1-anmQQ3ynNtXhKI25K9MmbV9csqo=",
       "dev": true
     },
+<<<<<<< .our
     "address": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/address/-/address-1.0.3.tgz",
       "integrity": "sha512-z55ocwKBRLryBs394Sm3ushTtBeg6VAeuku7utSoSnsJKvKcnXFIyC6vh27n3rXyxSgkJBBCAvyOn7gSUcTYjg==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "agent-base": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-2.1.1.tgz",
@@ -192,7 +211,11 @@
         "string-width": {
           "version": "2.1.1",
           "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+<<<<<<< .our
           "integrity": "sha1-q5Pyeo3BPSjKyBXEYhQ6bZASrp4=",
+=======
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "is-fullwidth-code-point": "2.0.0",
@@ -231,13 +254,18 @@
     "anymatch": {
       "version": "1.3.2",
       "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-1.3.2.tgz",
+<<<<<<< .our
       "integrity": "sha1-VT3Lj5HjyImEXf26NMd3IbkLnXo=",
+=======
+      "integrity": "sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "micromatch": "2.3.11",
         "normalize-path": "2.1.1"
       }
     },
+<<<<<<< .our
     "arch": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/arch/-/arch-2.1.1.tgz",
@@ -250,6 +278,8 @@
       "integrity": "sha512-XxNTUzKnz1ctK3ZIcI2XUPlD96wbHP2nGqkPKpvk/HNRlPveYrXIVSTk9m3LcqOgDPg3B1nMvdV/K8wZd7PG4w==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "argparse": {
       "version": "1.0.10",
       "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
@@ -259,6 +289,7 @@
         "sprintf-js": "1.0.3"
       }
     },
+<<<<<<< .our
     "args": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/args/-/args-4.0.0.tgz",
@@ -314,6 +345,8 @@
         }
       }
     },
+=======
+>>>>>>> .their
     "arr-diff": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",
@@ -326,7 +359,11 @@
     "arr-flatten": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-NgSLv/TntH4TZkQxbJlmnqWukfE=",
+=======
+      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
+>>>>>>> .their
       "dev": true
     },
     "array-filter": {
@@ -348,9 +385,15 @@
       "dev": true
     },
     "array-iterate": {
+<<<<<<< .our
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/array-iterate/-/array-iterate-1.1.2.tgz",
       "integrity": "sha512-1hWSHTIlG/8wtYD+PPX5AOBtKWngpDFjrsrHgZpe+JdgNGz0udYu6ZIkAa/xuenIUEqFv7DvE2Yr60jxweJSrQ==",
+=======
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/array-iterate/-/array-iterate-1.1.1.tgz",
+      "integrity": "sha1-hlv3+K851rCYLGCQKRSsdrwBCPY=",
+>>>>>>> .their
       "dev": true
     },
     "array-map": {
@@ -431,7 +474,11 @@
       "requires": {
         "bn.js": "4.11.8",
         "inherits": "2.0.3",
+<<<<<<< .our
         "minimalistic-assert": "1.0.1"
+=======
+        "minimalistic-assert": "1.0.0"
+>>>>>>> .their
       }
     },
     "assert": {
@@ -483,9 +530,15 @@
       "dev": true
     },
     "aws4": {
+<<<<<<< .our
       "version": "1.7.0",
       "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.7.0.tgz",
       "integrity": "sha512-32NDda82rhwD9/JBCCkB+MRYDp0oSvlo2IL6rQWA10PQi7tDUM3eqMSltXmY+Oyl/7N3P3qNtAlv7X0d9bI28w==",
+=======
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz",
+      "integrity": "sha1-g+9cqGCysy5KDe7e6MdxudtXRx4=",
+>>>>>>> .their
       "dev": true
     },
     "babel-code-frame": {
@@ -500,9 +553,15 @@
       }
     },
     "bail": {
+<<<<<<< .our
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/bail/-/bail-1.0.3.tgz",
       "integrity": "sha512-1X8CnjFVQ+a+KW36uBNMTU5s8+v5FzeqrP7hTG5aTb4aPreSbZJlhwPon9VKMuEVgV++JM+SQrALY3kr7eswdg==",
+=======
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/bail/-/bail-1.0.2.tgz",
+      "integrity": "sha1-99bBcxYwqfnw1NNe0fli4gdKF2Q=",
+>>>>>>> .their
       "dev": true
     },
     "balanced-match": {
@@ -512,6 +571,7 @@
       "dev": true
     },
     "base64-js": {
+<<<<<<< .our
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.0.tgz",
       "integrity": "sha512-ccav/yGvoa80BQDljCxsmmQ3Xvx60/UpBIij5QN21W3wBi/hhIC9OoO+KLpu9IJTS9j4DRVJ3aDDF9cMSoa2lw==",
@@ -534,6 +594,13 @@
         }
       }
     },
+=======
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.2.3.tgz",
+      "integrity": "sha512-MsAhsUW1GxCdgYSO6tAfZrNapmUKk7mWx/k5mFY/A1gBtkaCaNapTg+FExCw1r9yeaZhqx/xPg43xgTFH6KL5w==",
+      "dev": true
+    },
+>>>>>>> .their
     "bcrypt-pbkdf": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz",
@@ -567,7 +634,11 @@
       "dev": true,
       "requires": {
         "readable-stream": "2.3.6",
+<<<<<<< .our
         "safe-buffer": "5.1.2"
+=======
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       },
       "dependencies": {
         "isarray": {
@@ -586,7 +657,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -597,11 +672,16 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
     },
+<<<<<<< .our
     "bluebird": {
       "version": "3.5.1",
       "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.5.1.tgz",
@@ -612,6 +692,12 @@
       "version": "4.11.8",
       "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
       "integrity": "sha1-LN4J617jQfSEdGuwMJsyU7GxRC8=",
+=======
+    "bn.js": {
+      "version": "4.11.8",
+      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
+      "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA==",
+>>>>>>> .their
       "dev": true
     },
     "boolbase": {
@@ -637,7 +723,11 @@
       "requires": {
         "ansi-align": "2.0.0",
         "camelcase": "4.1.0",
+<<<<<<< .our
         "chalk": "2.4.1",
+=======
+        "chalk": "2.3.2",
+>>>>>>> .their
         "cli-boxes": "1.0.0",
         "string-width": "2.1.1",
         "term-size": "1.2.0",
@@ -666,14 +756,24 @@
           "dev": true
         },
         "chalk": {
+<<<<<<< .our
           "version": "2.4.1",
           "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
           "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+=======
+          "version": "2.3.2",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.2.tgz",
+          "integrity": "sha512-ZM4j2/ld/YZDc3Ma8PgN7gyAk+kHMMMyzLNryCPGhWrsfAuDVeuid5bpRFTDgMH9JBK2lA4dyyAkkZYF/WcqDQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "ansi-styles": "3.2.1",
             "escape-string-regexp": "1.0.5",
+<<<<<<< .our
             "supports-color": "5.4.0"
+=======
+            "supports-color": "5.3.0"
+>>>>>>> .their
           }
         },
         "has-flag": {
@@ -691,7 +791,11 @@
         "string-width": {
           "version": "2.1.1",
           "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+<<<<<<< .our
           "integrity": "sha1-q5Pyeo3BPSjKyBXEYhQ6bZASrp4=",
+=======
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "is-fullwidth-code-point": "2.0.0",
@@ -708,9 +812,15 @@
           }
         },
         "supports-color": {
+<<<<<<< .our
           "version": "5.4.0",
           "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.4.0.tgz",
           "integrity": "sha512-zjaXglF5nnWpsq470jSv6P9DwPvgLkuapYmfDm3JWOm0vkNTVF2tI4UrN2r6jH1qM/uc/WtxYY1hYoA2dOKj5w==",
+=======
+          "version": "5.3.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.3.0.tgz",
+          "integrity": "sha512-0aP01LLIskjKs3lq52EC0aGBAJhLq7B2Rd8HC/DR/PtNNpcLilNmHC12O+hu0usQpo7wtHNRqtrhBwtDb0+dNg==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "has-flag": "3.0.0"
@@ -754,7 +864,11 @@
         "JSONStream": "1.3.2",
         "combine-source-map": "0.8.0",
         "defined": "1.0.0",
+<<<<<<< .our
         "safe-buffer": "5.1.2",
+=======
+        "safe-buffer": "5.1.1",
+>>>>>>> .their
         "through2": "2.0.3",
         "umd": "3.0.3"
       }
@@ -803,7 +917,11 @@
         "htmlescape": "1.1.1",
         "https-browserify": "0.0.1",
         "inherits": "2.0.3",
+<<<<<<< .our
         "insert-module-globals": "7.0.6",
+=======
+        "insert-module-globals": "7.0.5",
+>>>>>>> .their
         "labeled-stream-splicer": "2.0.1",
         "module-deps": "4.1.1",
         "os-browserify": "0.1.2",
@@ -814,11 +932,19 @@
         "querystring-es3": "0.2.1",
         "read-only-stream": "2.0.0",
         "readable-stream": "2.3.6",
+<<<<<<< .our
         "resolve": "1.7.1",
         "shasum": "1.0.2",
         "shell-quote": "1.6.1",
         "stream-browserify": "2.0.1",
         "stream-http": "2.8.2",
+=======
+        "resolve": "1.6.0",
+        "shasum": "1.0.2",
+        "shell-quote": "1.6.1",
+        "stream-browserify": "2.0.1",
+        "stream-http": "2.8.1",
+>>>>>>> .their
         "string_decoder": "0.10.31",
         "subarg": "1.0.0",
         "syntax-error": "1.4.0",
@@ -834,7 +960,11 @@
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -861,7 +991,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           },
@@ -872,7 +1006,11 @@
               "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
               "dev": true,
               "requires": {
+<<<<<<< .our
                 "safe-buffer": "5.1.2"
+=======
+                "safe-buffer": "5.1.1"
+>>>>>>> .their
               }
             }
           }
@@ -887,6 +1025,7 @@
       "requires": {
         "buffer-xor": "1.0.3",
         "cipher-base": "1.0.4",
+<<<<<<< .our
         "create-hash": "1.2.0",
         "evp_bytestokey": "1.0.3",
         "inherits": "2.0.3",
@@ -901,13 +1040,35 @@
       "requires": {
         "browserify-aes": "1.2.0",
         "browserify-des": "1.0.1",
+=======
+        "create-hash": "1.1.3",
+        "evp_bytestokey": "1.0.3",
+        "inherits": "2.0.3",
+        "safe-buffer": "5.1.1"
+      }
+    },
+    "browserify-cipher": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.0.tgz",
+      "integrity": "sha1-mYgkSHS/XtTijalWZtzWasj8Njo=",
+      "dev": true,
+      "requires": {
+        "browserify-aes": "1.2.0",
+        "browserify-des": "1.0.0",
+>>>>>>> .their
         "evp_bytestokey": "1.0.3"
       }
     },
     "browserify-des": {
+<<<<<<< .our
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.1.tgz",
       "integrity": "sha512-zy0Cobe3hhgpiOM32Tj7KQ3Vl91m0njwsjzZQK1L+JDf11dzP9qIvjreVinsvXrgfjhStXwUWAEpB9D7Gwmayw==",
+=======
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.0.tgz",
+      "integrity": "sha1-2qJ3cXRwki7S/hhZQRihdUOXId0=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "cipher-base": "1.0.4",
@@ -933,11 +1094,19 @@
       "requires": {
         "bn.js": "4.11.8",
         "browserify-rsa": "4.0.1",
+<<<<<<< .our
         "create-hash": "1.2.0",
         "create-hmac": "1.1.7",
         "elliptic": "6.4.0",
         "inherits": "2.0.3",
         "parse-asn1": "5.1.1"
+=======
+        "create-hash": "1.1.3",
+        "create-hmac": "1.1.6",
+        "elliptic": "6.4.0",
+        "inherits": "2.0.3",
+        "parse-asn1": "5.1.0"
+>>>>>>> .their
       }
     },
     "browserify-zlib": {
@@ -955,7 +1124,11 @@
       "integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "base64-js": "1.3.0",
+=======
+        "base64-js": "1.2.3",
+>>>>>>> .their
         "ieee754": "1.1.11",
         "isarray": "1.0.0"
       },
@@ -968,6 +1141,7 @@
         }
       }
     },
+<<<<<<< .our
     "buffer-alloc": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.1.0.tgz",
@@ -990,6 +1164,8 @@
       "integrity": "sha512-YgBMBzdRLEfgxJIGu2wrvI2E03tMCFU1p7d1KhB4BOoMN0VxmTFjSyN5JtKt9z8Z9JajMHruI6SE25W96wNv7Q==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "buffer-from": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.0.0.tgz",
@@ -1020,12 +1196,15 @@
       "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=",
       "dev": true
     },
+<<<<<<< .our
     "bytes": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
       "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "cached-path-relative": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/cached-path-relative/-/cached-path-relative-1.0.1.tgz",
@@ -1086,9 +1265,15 @@
       "dev": true
     },
     "ccount": {
+<<<<<<< .our
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/ccount/-/ccount-1.0.3.tgz",
       "integrity": "sha512-Jt9tIBkRc9POUof7QA/VwWd+58fKkEEfI+/t1/eOlxKM7ZhrczNzMFefge7Ai+39y1pR/pP6cI19guHy3FSLmw==",
+=======
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/ccount/-/ccount-1.0.2.tgz",
+      "integrity": "sha1-U7ai+BW7d7nChx97mnLDol8djok=",
+>>>>>>> .their
       "dev": true
     },
     "center-align": {
@@ -1133,6 +1318,7 @@
       }
     },
     "character-entities": {
+<<<<<<< .our
       "version": "1.2.2",
       "resolved": "https://registry.npmjs.org/character-entities/-/character-entities-1.2.2.tgz",
       "integrity": "sha512-sMoHX6/nBiy3KKfC78dnEalnpn0Az0oSNvqUWYTtYrhRI5iUIYsROU48G+E+kMFQzqXaJ8kHJZ85n7y6/PHgwQ==",
@@ -1154,12 +1340,39 @@
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-1.1.2.tgz",
       "integrity": "sha512-7I/xceXfKyUJmSAn/jw8ve/9DyOP7XxufNYLI9Px7CmsKgEUaZLUTax6nZxGQtaoiZCjpu6cHPj20xC/vqRReQ==",
+=======
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/character-entities/-/character-entities-1.2.1.tgz",
+      "integrity": "sha1-92hxvl72bdt/j440eOzDdMJ9bco=",
+      "dev": true
+    },
+    "character-entities-html4": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/character-entities-html4/-/character-entities-html4-1.1.1.tgz",
+      "integrity": "sha1-NZoqSg9+KdPcKsmb2+Ie45Q46lA=",
+      "dev": true
+    },
+    "character-entities-legacy": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-1.1.1.tgz",
+      "integrity": "sha1-9Ad53xoQGHK7UQo9KV4fzPFHIC8=",
+      "dev": true
+    },
+    "character-reference-invalid": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-1.1.1.tgz",
+      "integrity": "sha1-lCg191Dk7GGjCOYMLvjMEBEgLvw=",
+>>>>>>> .their
       "dev": true
     },
     "check-for-leaks": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/check-for-leaks/-/check-for-leaks-1.2.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-6jtQFk6XV3kzLGKBMZX/jGr4Jsw=",
+=======
+      "integrity": "sha512-bJ2Bzo6RtsYqamMnsjtVzowGvBNVrR5IPK8Bd+lx5W1TNgOKMsF+AyNHVkqFqO7cpDZNfny5SaqH6gEovpV5Gw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "anymatch": "1.3.2",
@@ -1209,7 +1422,11 @@
       "requires": {
         "anymatch": "1.3.2",
         "async-each": "1.0.1",
+<<<<<<< .our
         "fsevents": "1.2.4",
+=======
+        "fsevents": "1.1.3",
+>>>>>>> .their
         "glob-parent": "2.0.0",
         "inherits": "2.0.3",
         "is-binary-path": "1.0.1",
@@ -1239,16 +1456,25 @@
     "cipher-base": {
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
+<<<<<<< .our
       "integrity": "sha1-h2Dk7MJy9MNjUy+SbYdKriwTl94=",
       "dev": true,
       "requires": {
         "inherits": "2.0.3",
         "safe-buffer": "5.1.2"
+=======
+      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
+      "dev": true,
+      "requires": {
+        "inherits": "2.0.3",
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       }
     },
     "circular-json": {
       "version": "0.3.3",
       "resolved": "https://registry.npmjs.org/circular-json/-/circular-json-0.3.3.tgz",
+<<<<<<< .our
       "integrity": "sha1-gVyZ6oT2gJUp0vRXkb34JxE1LWY=",
       "dev": true
     },
@@ -1279,6 +1505,11 @@
         }
       }
     },
+=======
+      "integrity": "sha512-UZK3NBx2Mca+b5LsG7bY183pHWt5Y1xts4P3Pz7ENTwGVnJOUWbRb3ocjvX7hx9tq/yTAdclXm9sZ38gNuem4A==",
+      "dev": true
+    },
+>>>>>>> .their
     "clean-deep": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/clean-deep/-/clean-deep-2.0.2.tgz",
@@ -1317,6 +1548,7 @@
       "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
       "dev": true
     },
+<<<<<<< .our
     "clipboardy": {
       "version": "1.2.3",
       "resolved": "https://registry.npmjs.org/clipboardy/-/clipboardy-1.2.3.tgz",
@@ -1344,6 +1576,8 @@
         }
       }
     },
+=======
+>>>>>>> .their
     "cliui": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",
@@ -1378,9 +1612,15 @@
       "dev": true
     },
     "collapse-white-space": {
+<<<<<<< .our
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/collapse-white-space/-/collapse-white-space-1.0.4.tgz",
       "integrity": "sha512-YfQ1tAUZm561vpYD+5eyWN8+UsceQbSrqqlc/6zDY2gtAE+uZLSdkkovhnGpmCThsvKBFakq4EdY/FF93E8XIw==",
+=======
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/collapse-white-space/-/collapse-white-space-1.0.3.tgz",
+      "integrity": "sha1-S5BvZw5aljqHt2sOFolkM0G2Ajw=",
+>>>>>>> .their
       "dev": true
     },
     "color-convert": {
@@ -1399,9 +1639,15 @@
       "dev": true
     },
     "colors": {
+<<<<<<< .our
       "version": "1.2.5",
       "resolved": "https://registry.npmjs.org/colors/-/colors-1.2.5.tgz",
       "integrity": "sha512-erNRLao/Y3Fv54qUa0LBB+//Uf3YwMUmdJinN20yMXm9zdKKqH9wt7R9IIVZ+K7ShzfpLV/Zg8+VyrBJYB4lpg==",
+=======
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/colors/-/colors-1.2.1.tgz",
+      "integrity": "sha512-s8+wktIuDSLffCywiwSxQOMqtPxML11a/dtHE17tMn4B1MSWw/C22EKf7M2KGUBcDaVFEGT+S8N02geDXeuNKg==",
+>>>>>>> .their
       "dev": true
     },
     "combine-source-map": {
@@ -1441,6 +1687,7 @@
         "dot-prop": "3.0.0"
       }
     },
+<<<<<<< .our
     "compressible": {
       "version": "2.0.14",
       "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.14.tgz",
@@ -1473,6 +1720,8 @@
         "vary": "1.1.2"
       }
     },
+=======
+>>>>>>> .their
     "concat-map": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
@@ -1526,7 +1775,11 @@
       "requires": {
         "dot-prop": "4.2.0",
         "graceful-fs": "4.1.11",
+<<<<<<< .our
         "make-dir": "1.3.0",
+=======
+        "make-dir": "1.2.0",
+>>>>>>> .their
         "unique-string": "1.0.0",
         "write-file-atomic": "2.3.0",
         "xdg-basedir": "3.0.0"
@@ -1535,7 +1788,11 @@
         "dot-prop": {
           "version": "4.2.0",
           "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.0.tgz",
+<<<<<<< .our
           "integrity": "sha1-HxngwuGqDjJ5fEl5nyg3rGr2nFc=",
+=======
+          "integrity": "sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "is-obj": "1.0.1"
@@ -1564,6 +1821,7 @@
       "integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo=",
       "dev": true
     },
+<<<<<<< .our
     "content-type": {
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
@@ -1574,13 +1832,24 @@
       "version": "1.1.24",
       "resolved": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.24.tgz",
       "integrity": "sha512-2WcSUst4Y3Z4hHvoMTWXMJr/DmgVdLiMOVY1Kak2LfFz+GIz2KDp5naqbFesYbfXPmaZ5p491dO0FWZIJoJw1Q==",
+=======
+    "conventional-changelog": {
+      "version": "1.1.23",
+      "resolved": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.23.tgz",
+      "integrity": "sha512-yCPXU/OXJmxgbvTQfIKXKwKa4KQTvlO0a4T/371Raz3bdxcHIGhQtHtdrNee4Z8nGLNfe54njHDblVG2JNFyjg==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "conventional-changelog-angular": "1.6.6",
         "conventional-changelog-atom": "0.2.8",
         "conventional-changelog-codemirror": "0.3.8",
+<<<<<<< .our
         "conventional-changelog-core": "2.0.11",
         "conventional-changelog-ember": "0.3.12",
+=======
+        "conventional-changelog-core": "2.0.10",
+        "conventional-changelog-ember": "0.3.11",
+>>>>>>> .their
         "conventional-changelog-eslint": "1.0.9",
         "conventional-changelog-express": "0.3.6",
         "conventional-changelog-jquery": "0.1.0",
@@ -1609,6 +1878,7 @@
       }
     },
     "conventional-changelog-cli": {
+<<<<<<< .our
       "version": "1.3.22",
       "resolved": "https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-1.3.22.tgz",
       "integrity": "sha512-pnjdIJbxjkZ5VdAX/H1wndr1G10CY8MuZgnXuJhIHglOXfIrXygb7KZC836GW9uo1u8PjEIvIw/bKX0lOmOzZg==",
@@ -1618,6 +1888,17 @@
         "conventional-changelog": "1.1.24",
         "lodash": "4.17.10",
         "meow": "4.0.1",
+=======
+      "version": "1.3.21",
+      "resolved": "https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-1.3.21.tgz",
+      "integrity": "sha512-K9VBljxzuATZCLTVnI83PN7WdeRJRPPB5FumuLk4ES3E+m2YJvX07DRbdJlINk6C2DeAjj4ioS5JvsvJaaCRbA==",
+      "dev": true,
+      "requires": {
+        "add-stream": "1.0.0",
+        "conventional-changelog": "1.1.23",
+        "lodash": "4.17.5",
+        "meow": "4.0.0",
+>>>>>>> .their
         "tempfile": "1.1.1"
       }
     },
@@ -1631,9 +1912,15 @@
       }
     },
     "conventional-changelog-core": {
+<<<<<<< .our
       "version": "2.0.11",
       "resolved": "https://registry.npmjs.org/conventional-changelog-core/-/conventional-changelog-core-2.0.11.tgz",
       "integrity": "sha512-HvTE6RlqeEZ/NFPtQeFLsIDOLrGP3bXYr7lFLMhCVsbduF1MXIe8OODkwMFyo1i9ku9NWBwVnVn0jDmIFXjDRg==",
+=======
+      "version": "2.0.10",
+      "resolved": "https://registry.npmjs.org/conventional-changelog-core/-/conventional-changelog-core-2.0.10.tgz",
+      "integrity": "sha512-FP0NHXIbpvU+f5jk/qZdnodhFmlzKW8ENRHQIWT69oe7ffur9nFRVJZlnXnFBOzwHM9WIRbC15ZWh9HZN6t9Uw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "conventional-changelog-writer": "3.0.9",
@@ -1643,7 +1930,11 @@
         "git-raw-commits": "1.3.6",
         "git-remote-origin-url": "2.0.0",
         "git-semver-tags": "1.3.6",
+<<<<<<< .our
         "lodash": "4.17.10",
+=======
+        "lodash": "4.17.5",
+>>>>>>> .their
         "normalize-package-data": "2.4.0",
         "q": "1.5.1",
         "read-pkg": "1.1.0",
@@ -1652,9 +1943,15 @@
       }
     },
     "conventional-changelog-ember": {
+<<<<<<< .our
       "version": "0.3.12",
       "resolved": "https://registry.npmjs.org/conventional-changelog-ember/-/conventional-changelog-ember-0.3.12.tgz",
       "integrity": "sha512-mmJzA7uzbrOqeF89dMMi6z17O07ORTXlTMArnLG9ZTX4oLaKNolUlxFUFlFm9JUoVWajVpaHQWjxH1EOQ+ARoQ==",
+=======
+      "version": "0.3.11",
+      "resolved": "https://registry.npmjs.org/conventional-changelog-ember/-/conventional-changelog-ember-0.3.11.tgz",
+      "integrity": "sha512-ErjPPiDmTd/WPgj2bSp+CGsLtJiv7FbdPKjZXH2Cd5P7j44Rqf0V9SIAAYFTQNoPqmvcp+sIcr/vH52WzPJUbw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "q": "1.5.1"
@@ -1723,8 +2020,13 @@
         "dateformat": "3.0.3",
         "handlebars": "4.0.11",
         "json-stringify-safe": "5.0.1",
+<<<<<<< .our
         "lodash": "4.17.10",
         "meow": "4.0.1",
+=======
+        "lodash": "4.17.5",
+        "meow": "4.0.0",
+>>>>>>> .their
         "semver": "5.5.0",
         "split": "1.0.1",
         "through2": "2.0.3"
@@ -1748,8 +2050,13 @@
       "requires": {
         "JSONStream": "1.3.2",
         "is-text-path": "1.0.1",
+<<<<<<< .our
         "lodash": "4.17.10",
         "meow": "4.0.1",
+=======
+        "lodash": "4.17.5",
+        "meow": "4.0.0",
+>>>>>>> .their
         "split2": "2.2.0",
         "through2": "2.0.3",
         "trim-off-newlines": "1.0.1"
@@ -1768,9 +2075,15 @@
       "dev": true
     },
     "create-ecdh": {
+<<<<<<< .our
       "version": "4.0.3",
       "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.3.tgz",
       "integrity": "sha512-GbEHQPMOswGpKXM9kCWVrremUcBmjteUaQ01T9rkKCPDXfUHX0IoP9LpHYo2NPFampa4e+/pFDc3jQdxrxQLaw==",
+=======
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.0.tgz",
+      "integrity": "sha1-iIxyNZbN92EvZJgjPuvXo1MBc30=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "bn.js": "4.11.8",
@@ -1787,19 +2100,30 @@
       }
     },
     "create-hash": {
+<<<<<<< .our
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
       "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
+=======
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.1.3.tgz",
+      "integrity": "sha1-YGBCrIuSYnUPSDyt2rD1gZFy2P0=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "cipher-base": "1.0.4",
         "inherits": "2.0.3",
+<<<<<<< .our
         "md5.js": "1.3.4",
         "ripemd160": "2.0.2",
+=======
+        "ripemd160": "2.0.1",
+>>>>>>> .their
         "sha.js": "2.4.11"
       }
     },
     "create-hmac": {
+<<<<<<< .our
       "version": "1.1.7",
       "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
       "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
@@ -1810,6 +2134,18 @@
         "inherits": "2.0.3",
         "ripemd160": "2.0.2",
         "safe-buffer": "5.1.2",
+=======
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.6.tgz",
+      "integrity": "sha1-rLniIaThe9sHbpBlfEK5PjcmzwY=",
+      "dev": true,
+      "requires": {
+        "cipher-base": "1.0.4",
+        "create-hash": "1.1.3",
+        "inherits": "2.0.3",
+        "ripemd160": "2.0.1",
+        "safe-buffer": "5.1.1",
+>>>>>>> .their
         "sha.js": "2.4.11"
       }
     },
@@ -1819,7 +2155,11 @@
       "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "lru-cache": "4.1.3",
+=======
+        "lru-cache": "4.1.2",
+>>>>>>> .their
         "shebang-command": "1.2.0",
         "which": "1.3.0"
       }
@@ -1836,7 +2176,11 @@
         "boom": {
           "version": "5.2.0",
           "resolved": "https://registry.npmjs.org/boom/-/boom-5.2.0.tgz",
+<<<<<<< .our
           "integrity": "sha1-XdnabuOl8wIHdDYpDLcX0/SlTgI=",
+=======
+          "integrity": "sha512-Z5BTk6ZRe4tXXQlkqftmsAUANpXmuwlsF5Oov8ThoMbQRzdGTA1ngYRW160GexgOgjsFOKJz0LYhoNi+2AMBUw==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "hoek": "4.2.1"
@@ -1850,6 +2194,7 @@
       "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "browserify-cipher": "1.0.1",
         "browserify-sign": "4.0.4",
         "create-ecdh": "4.0.3",
@@ -1859,6 +2204,17 @@
         "inherits": "2.0.3",
         "pbkdf2": "3.0.16",
         "public-encrypt": "4.0.2",
+=======
+        "browserify-cipher": "1.0.0",
+        "browserify-sign": "4.0.4",
+        "create-ecdh": "4.0.0",
+        "create-hash": "1.1.3",
+        "create-hmac": "1.1.6",
+        "diffie-hellman": "5.0.2",
+        "inherits": "2.0.3",
+        "pbkdf2": "3.0.14",
+        "public-encrypt": "4.0.0",
+>>>>>>> .their
         "randombytes": "2.0.6",
         "randomfill": "1.0.4"
       }
@@ -1960,7 +2316,11 @@
     "debug": {
       "version": "2.6.9",
       "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+<<<<<<< .our
       "integrity": "sha1-XRKFFd8TT/Mn6QpMk/Tgd6U2NB8=",
+=======
+      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "ms": "2.0.0"
@@ -2018,9 +2378,15 @@
       "dev": true
     },
     "deep-extend": {
+<<<<<<< .our
       "version": "0.5.1",
       "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.5.1.tgz",
       "integrity": "sha512-N8vBdOa+DF7zkRrDCsaOXoCs/E2fJfx9B9MrKnnSiHNh4ws7eSys6YQE4KvT1cecKmOASYQBhbKjeuDD9lT81w==",
+=======
+      "version": "0.4.2",
+      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz",
+      "integrity": "sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=",
+>>>>>>> .their
       "dev": true
     },
     "deep-is": {
@@ -2061,16 +2427,26 @@
       "requires": {
         "find-root": "1.1.0",
         "glob": "7.1.2",
+<<<<<<< .our
         "ignore": "3.3.8",
         "pkg-config": "1.1.1",
         "run-parallel": "1.1.9",
+=======
+        "ignore": "3.3.7",
+        "pkg-config": "1.1.1",
+        "run-parallel": "1.1.8",
+>>>>>>> .their
         "uniq": "1.0.1"
       },
       "dependencies": {
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -2104,12 +2480,15 @@
       "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
       "dev": true
     },
+<<<<<<< .our
     "depd": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.1.tgz",
       "integrity": "sha1-V4O04cRZ8G+lyif5kfPQbnoxA1k=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "deps-sort": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/deps-sort/-/deps-sort-2.0.0.tgz",
@@ -2129,6 +2508,7 @@
       "dev": true,
       "requires": {
         "inherits": "2.0.3",
+<<<<<<< .our
         "minimalistic-assert": "1.0.1"
       }
     },
@@ -2146,6 +2526,9 @@
       "requires": {
         "address": "1.0.3",
         "debug": "2.6.9"
+=======
+        "minimalistic-assert": "1.0.0"
+>>>>>>> .their
       }
     },
     "detective": {
@@ -2173,9 +2556,15 @@
       "dev": true
     },
     "diffie-hellman": {
+<<<<<<< .our
       "version": "5.0.3",
       "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",
       "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",
+=======
+      "version": "5.0.2",
+      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.2.tgz",
+      "integrity": "sha1-tYNXOScM/ias9jIJn97SoH8gnl4=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "bn.js": "4.11.8",
@@ -2184,12 +2573,30 @@
       }
     },
     "doctrine": {
+<<<<<<< .our
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
       "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
       "dev": true,
       "requires": {
         "esutils": "2.0.2"
+=======
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",
+      "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",
+      "dev": true,
+      "requires": {
+        "esutils": "2.0.2",
+        "isarray": "1.0.0"
+      },
+      "dependencies": {
+        "isarray": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
+          "dev": true
+        }
+>>>>>>> .their
       }
     },
     "dom-serializer": {
@@ -2223,9 +2630,15 @@
       "dev": true
     },
     "domhandler": {
+<<<<<<< .our
       "version": "2.4.2",
       "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
       "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
+=======
+      "version": "2.4.1",
+      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.1.tgz",
+      "integrity": "sha1-iS5HAAqZvlW783dP/qBWHYh5wlk=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "domelementtype": "1.3.0"
@@ -2266,9 +2679,15 @@
       }
     },
     "dugite": {
+<<<<<<< .our
       "version": "1.63.0",
       "resolved": "https://registry.npmjs.org/dugite/-/dugite-1.63.0.tgz",
       "integrity": "sha512-CFd0sWTB2oouat0kJA4/rEQAeh6ZUvCDL9uFOaSBhLX+2CM/YL+ebKJXd8dYVIe8iVXmK5R9P31NVbRw4Ccoxw==",
+=======
+      "version": "1.61.0",
+      "resolved": "https://registry.npmjs.org/dugite/-/dugite-1.61.0.tgz",
+      "integrity": "sha512-F4d094nICYAIATRN+SZTa6x9XlebJEEyk7os7RLp7qS+IwNkBz8iMIvdrUdNutBVC0POVQ3hrRN9rGxnw7sZrA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "checksum": "0.1.1",
@@ -2276,7 +2695,11 @@
         "progress": "2.0.0",
         "request": "2.85.0",
         "rimraf": "2.6.2",
+<<<<<<< .our
         "tar": "4.4.2"
+=======
+        "tar": "4.4.1"
+>>>>>>> .their
       }
     },
     "duplexer2": {
@@ -2304,7 +2727,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -2315,7 +2742,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -2327,9 +2758,15 @@
       "dev": true
     },
     "duplexify": {
+<<<<<<< .our
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.6.0.tgz",
       "integrity": "sha512-fO3Di4tBKJpYTFHAxTU00BcfWMY9w24r/x21a6rZRbsD/ToUgGxsMbiGRmB7uVAXeGKXD9MwiLZa5E97EVgIRQ==",
+=======
+      "version": "3.5.4",
+      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.5.4.tgz",
+      "integrity": "sha512-JzYSLYMhoVVBe8+mbHQ4KgpvHpm0DZpJuL8PY93Vyv1fW7jYJ90LoXa1di/CVbJM+TgMs91rbDapE/RNIfnJsA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "end-of-stream": "1.4.1",
@@ -2354,7 +2791,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -2365,7 +2806,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -2380,12 +2825,15 @@
         "jsbn": "0.1.1"
       }
     },
+<<<<<<< .our
     "ee-first": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
       "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "electabul": {
       "version": "0.0.4",
       "resolved": "https://registry.npmjs.org/electabul/-/electabul-0.0.4.tgz",
@@ -2441,7 +2889,11 @@
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -2467,7 +2919,11 @@
         "path-exists": "3.0.0",
         "pify": "2.3.0",
         "semver": "5.5.0",
+<<<<<<< .our
         "tar-fs": "1.16.2"
+=======
+        "tar-fs": "1.16.0"
+>>>>>>> .their
       },
       "dependencies": {
         "ora": {
@@ -2523,6 +2979,7 @@
       }
     },
     "electron-typescript-definitions": {
+<<<<<<< .our
       "version": "1.3.6",
       "resolved": "https://registry.npmjs.org/electron-typescript-definitions/-/electron-typescript-definitions-1.3.6.tgz",
       "integrity": "sha512-Wz6tPaaZ22lbfWwF9bzVSki7LMW96xilCT1M8eeNYZG6LcpA9x34jlrAZg5HZWTHXR2tfbTQhSmrY+FEVulD/A==",
@@ -2538,6 +2995,23 @@
         "rimraf": "2.6.2",
         "tslint": "4.5.1",
         "typescript": "2.9.2"
+=======
+      "version": "1.2.11",
+      "resolved": "https://registry.npmjs.org/electron-typescript-definitions/-/electron-typescript-definitions-1.2.11.tgz",
+      "integrity": "sha512-gBVmiGkw2hiut17wnSchYpFxrBmMb+jKFSjxbVFeivCn1OAAFykKtrsg26Sjcrra6AN1YiWyTC7SD9twPAO8dQ==",
+      "dev": true,
+      "requires": {
+        "@types/node": "7.0.59",
+        "colors": "1.2.1",
+        "debug": "2.6.9",
+        "electron-docs": "2.0.1",
+        "electron-docs-linter": "2.3.4",
+        "lodash": "4.17.5",
+        "mkdirp": "0.5.1",
+        "rimraf": "2.6.2",
+        "tslint": "4.5.1",
+        "typescript": "2.8.1"
+>>>>>>> .their
       }
     },
     "elliptic": {
@@ -2551,6 +3025,7 @@
         "hash.js": "1.1.3",
         "hmac-drbg": "1.0.1",
         "inherits": "2.0.3",
+<<<<<<< .our
         "minimalistic-assert": "1.0.1",
         "minimalistic-crypto-utils": "1.0.1"
       }
@@ -2561,6 +3036,12 @@
       "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
       "dev": true
     },
+=======
+        "minimalistic-assert": "1.0.0",
+        "minimalistic-crypto-utils": "1.0.1"
+      }
+    },
+>>>>>>> .their
     "end-of-stream": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz",
@@ -2686,12 +3167,15 @@
         "es6-symbol": "3.1.1"
       }
     },
+<<<<<<< .our
     "escape-html": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
       "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "escape-string-regexp": {
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
@@ -2744,25 +3228,41 @@
       }
     },
     "eslint": {
+<<<<<<< .our
       "version": "3.19.0",
       "resolved": "https://registry.npmjs.org/eslint/-/eslint-3.19.0.tgz",
       "integrity": "sha1-yPxiAcf0DdCJQbh8CFdnOGpnmsw=",
+=======
+      "version": "3.10.2",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-3.10.2.tgz",
+      "integrity": "sha1-yaEOi/bp1lZRIEd4xQM0Hx6sPOc=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "babel-code-frame": "6.26.0",
         "chalk": "1.1.3",
         "concat-stream": "1.5.2",
         "debug": "2.6.9",
+<<<<<<< .our
         "doctrine": "2.1.0",
         "escope": "3.6.0",
         "espree": "3.5.4",
         "esquery": "1.0.1",
+=======
+        "doctrine": "1.5.0",
+        "escope": "3.6.0",
+        "espree": "3.5.4",
+>>>>>>> .their
         "estraverse": "4.2.0",
         "esutils": "2.0.2",
         "file-entry-cache": "2.0.0",
         "glob": "7.1.2",
         "globals": "9.18.0",
+<<<<<<< .our
         "ignore": "3.3.8",
+=======
+        "ignore": "3.3.7",
+>>>>>>> .their
         "imurmurhash": "0.1.4",
         "inquirer": "0.12.0",
         "is-my-json-valid": "2.17.2",
@@ -2770,7 +3270,11 @@
         "js-yaml": "3.11.0",
         "json-stable-stringify": "1.0.1",
         "levn": "0.3.0",
+<<<<<<< .our
         "lodash": "4.17.10",
+=======
+        "lodash": "4.17.5",
+>>>>>>> .their
         "mkdirp": "0.5.1",
         "natural-compare": "1.4.0",
         "optionator": "0.8.2",
@@ -2780,7 +3284,11 @@
         "require-uncached": "1.0.3",
         "shelljs": "0.7.8",
         "strip-bom": "3.0.0",
+<<<<<<< .our
         "strip-json-comments": "2.0.1",
+=======
+        "strip-json-comments": "1.0.4",
+>>>>>>> .their
         "table": "3.8.3",
         "text-table": "0.2.0",
         "user-home": "2.0.0"
@@ -2795,7 +3303,11 @@
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -2826,10 +3338,20 @@
           "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
           "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
           "dev": true
+<<<<<<< .our
+=======
+        },
+        "strip-json-comments": {
+          "version": "1.0.4",
+          "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-1.0.4.tgz",
+          "integrity": "sha1-HhX7ysl9Pumb8tc7TGVrCCu6+5E=",
+          "dev": true
+>>>>>>> .their
         }
       }
     },
     "eslint-config-standard": {
+<<<<<<< .our
       "version": "10.2.1",
       "resolved": "https://registry.npmjs.org/eslint-config-standard/-/eslint-config-standard-10.2.1.tgz",
       "integrity": "sha1-wGHk0GbzedwXzVYsZOgZtN1FRZE=",
@@ -2839,6 +3361,17 @@
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/eslint-config-standard-jsx/-/eslint-config-standard-jsx-4.0.2.tgz",
       "integrity": "sha512-F8fRh2WFnTek7dZH9ZaE0PCBwdVGkwVWZmizla/DDNOmg7Tx6B/IlK5+oYpiX29jpu73LszeJj5i1axEZv6VMw==",
+=======
+      "version": "6.2.1",
+      "resolved": "https://registry.npmjs.org/eslint-config-standard/-/eslint-config-standard-6.2.1.tgz",
+      "integrity": "sha1-06aKr8cZFjnn7kQec0hzkCY1QpI=",
+      "dev": true
+    },
+    "eslint-config-standard-jsx": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/eslint-config-standard-jsx/-/eslint-config-standard-jsx-3.2.0.tgz",
+      "integrity": "sha1-wkDibtkZoRpCqk3oBZRys4Jo1iA=",
+>>>>>>> .their
       "dev": true
     },
     "eslint-import-resolver-node": {
@@ -2849,7 +3382,11 @@
       "requires": {
         "debug": "2.6.9",
         "object-assign": "4.1.1",
+<<<<<<< .our
         "resolve": "1.7.1"
+=======
+        "resolve": "1.6.0"
+>>>>>>> .their
       }
     },
     "eslint-module-utils": {
@@ -2878,6 +3415,7 @@
         "lodash.cond": "4.5.2",
         "minimatch": "3.0.4",
         "pkg-up": "1.0.0"
+<<<<<<< .our
       },
       "dependencies": {
         "doctrine": {
@@ -2896,11 +3434,14 @@
           "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
           "dev": true
         }
+=======
+>>>>>>> .their
       }
     },
     "eslint-plugin-node": {
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-4.2.3.tgz",
+<<<<<<< .our
       "integrity": "sha1-wEOQq428u2iHF0Aj1vOnJ2nmO5c=",
       "dev": true,
       "requires": {
@@ -2908,6 +3449,15 @@
         "minimatch": "3.0.4",
         "object-assign": "4.1.1",
         "resolve": "1.7.1",
+=======
+      "integrity": "sha512-vIUQPuwbVYdz/CYnlTLsJrRy7iXHQjdEe5wz0XhhdTym3IInM/zZLlPf9nZ2mThsH0QcsieCOWs2vOeCy/22LQ==",
+      "dev": true,
+      "requires": {
+        "ignore": "3.3.7",
+        "minimatch": "3.0.4",
+        "object-assign": "4.1.1",
+        "resolve": "1.6.0",
+>>>>>>> .their
         "semver": "5.3.0"
       },
       "dependencies": {
@@ -2920,6 +3470,7 @@
       }
     },
     "eslint-plugin-promise": {
+<<<<<<< .our
       "version": "3.5.0",
       "resolved": "https://registry.npmjs.org/eslint-plugin-promise/-/eslint-plugin-promise-3.5.0.tgz",
       "integrity": "sha1-ePu2/+BHIBYnVp6FpsU3OvKmj8o=",
@@ -2960,6 +3511,27 @@
       "version": "3.0.1",
       "resolved": "https://registry.npmjs.org/eslint-plugin-standard/-/eslint-plugin-standard-3.0.1.tgz",
       "integrity": "sha1-NNDJFbRe3G8BA5PH7vOCOwhWXPI=",
+=======
+      "version": "3.4.2",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-promise/-/eslint-plugin-promise-3.4.2.tgz",
+      "integrity": "sha1-G+J5Pq/i0YtbEjuBNsJp+AT+cSI=",
+      "dev": true
+    },
+    "eslint-plugin-react": {
+      "version": "6.7.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-6.7.1.tgz",
+      "integrity": "sha1-Gvlq6lRYVoJRV9l8G1DVqPtkpac=",
+      "dev": true,
+      "requires": {
+        "doctrine": "1.5.0",
+        "jsx-ast-utils": "1.4.1"
+      }
+    },
+    "eslint-plugin-standard": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-standard/-/eslint-plugin-standard-2.0.1.tgz",
+      "integrity": "sha1-NYlpn/nJF/LCX3apFmh/ZBw2n/M=",
+>>>>>>> .their
       "dev": true
     },
     "espree": {
@@ -3032,12 +3604,15 @@
       "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
       "dev": true
     },
+<<<<<<< .our
     "etag": {
       "version": "1.8.1",
       "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
       "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "event-emitter": {
       "version": "0.3.5",
       "resolved": "https://registry.npmjs.org/event-emitter/-/event-emitter-0.3.5.tgz",
@@ -3057,11 +3632,19 @@
     "evp_bytestokey": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
+<<<<<<< .our
       "integrity": "sha1-f8vbGY3HGVlDLv4ThCaE4FJaywI=",
       "dev": true,
       "requires": {
         "md5.js": "1.3.4",
         "safe-buffer": "5.1.2"
+=======
+      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
+      "dev": true,
+      "requires": {
+        "md5.js": "1.3.4",
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       }
     },
     "execa": {
@@ -3100,7 +3683,11 @@
       "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "fill-range": "2.2.4"
+=======
+        "fill-range": "2.2.3"
+>>>>>>> .their
       }
     },
     "extend": {
@@ -3143,9 +3730,15 @@
       "dev": true
     },
     "fault": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/fault/-/fault-1.0.2.tgz",
       "integrity": "sha512-o2eo/X2syzzERAtN5LcGbiVQ0WwZSlN3qLtadwAz3X8Bu+XWD16dja/KMsjZLiQr+BLGPDnHGkc4yUJf1Xpkpw==",
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/fault/-/fault-1.0.1.tgz",
+      "integrity": "sha1-3o01Df1IviS13BsChn4IcbkTUJI=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "format": "0.2.2"
@@ -3177,6 +3770,7 @@
       "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY=",
       "dev": true
     },
+<<<<<<< .our
     "filesize": {
       "version": "3.6.1",
       "resolved": "https://registry.npmjs.org/filesize/-/filesize-3.6.1.tgz",
@@ -3187,11 +3781,21 @@
       "version": "2.2.4",
       "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.4.tgz",
       "integrity": "sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==",
+=======
+    "fill-range": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.3.tgz",
+      "integrity": "sha1-ULd9/X5Gm8dJJHCWNpn+eoSFpyM=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "is-number": "2.1.0",
         "isobject": "2.1.0",
+<<<<<<< .our
         "randomatic": "3.0.0",
+=======
+        "randomatic": "1.1.7",
+>>>>>>> .their
         "repeat-element": "1.1.2",
         "repeat-string": "1.6.1"
       }
@@ -3199,7 +3803,11 @@
     "find-root": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-q8/Iunb3CMQql7PWhbfpRQv7nOQ=",
+=======
+      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng==",
+>>>>>>> .their
       "dev": true
     },
     "find-up": {
@@ -3308,6 +3916,7 @@
       "integrity": "sha1-1hcBB+nv3E7TDJ3DkBbflCtctYs=",
       "dev": true
     },
+<<<<<<< .our
     "fresh": {
       "version": "0.5.2",
       "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
@@ -3320,6 +3929,8 @@
       "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "fs-extra": {
       "version": "0.26.7",
       "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-0.26.7.tgz",
@@ -3339,7 +3950,11 @@
       "integrity": "sha512-JhBl0skXjUPCFH7x6x61gQxrKyXsxB5gcgePLZCwfyCGGsTISMoIeObbrvVeP6Xmyaudw4TT43qV2Gz+iyd2oQ==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "minipass": "2.3.0"
+=======
+        "minipass": "2.2.4"
+>>>>>>> .their
       }
     },
     "fs.realpath": {
@@ -3349,29 +3964,60 @@
       "dev": true
     },
     "fsevents": {
+<<<<<<< .our
       "version": "1.2.4",
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.4.tgz",
       "integrity": "sha512-z8H8/diyk76B7q5wg+Ud0+CqzcAF3mBBI/bA5ne5zrRUUIvNkJY//D3BqyH571KuAC4Nr7Rw7CjWX4r0y9DvNg==",
+=======
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.1.3.tgz",
+      "integrity": "sha512-WIr7iDkdmdbxu/Gh6eKEZJL6KPE74/5MEsf2whTOFNxbIoIixogroLdKYqB6FDav4Wavh/lZdzzd3b2KxIXC5Q==",
+>>>>>>> .their
       "dev": true,
       "optional": true,
       "requires": {
         "nan": "2.10.0",
+<<<<<<< .our
         "node-pre-gyp": "0.10.0"
       },
       "dependencies": {
         "abbrev": {
           "version": "1.1.1",
+=======
+        "node-pre-gyp": "0.6.39"
+      },
+      "dependencies": {
+        "abbrev": {
+          "version": "1.1.0",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
+=======
+        "ajv": {
+          "version": "4.11.8",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "co": "4.6.0",
+            "json-stable-stringify": "1.0.1"
+          }
+        },
+>>>>>>> .their
         "ansi-regex": {
           "version": "2.1.1",
           "bundled": true,
           "dev": true
         },
         "aproba": {
+<<<<<<< .our
           "version": "1.2.0",
+=======
+          "version": "1.1.1",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
@@ -3382,6 +4028,7 @@
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "delegates": "^1.0.0",
             "readable-stream": "^2.0.6"
           }
@@ -3402,6 +4049,94 @@
         },
         "chownr": {
           "version": "1.0.1",
+=======
+            "delegates": "1.0.0",
+            "readable-stream": "2.2.9"
+          }
+        },
+        "asn1": {
+          "version": "0.2.3",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "assert-plus": {
+          "version": "0.2.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "asynckit": {
+          "version": "0.4.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "aws-sign2": {
+          "version": "0.6.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "aws4": {
+          "version": "1.6.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "balanced-match": {
+          "version": "0.4.2",
+          "bundled": true,
+          "dev": true
+        },
+        "bcrypt-pbkdf": {
+          "version": "1.0.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "tweetnacl": "0.14.5"
+          }
+        },
+        "block-stream": {
+          "version": "0.0.9",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "inherits": "2.0.3"
+          }
+        },
+        "boom": {
+          "version": "2.10.1",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "hoek": "2.16.3"
+          }
+        },
+        "brace-expansion": {
+          "version": "1.1.7",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "balanced-match": "0.4.2",
+            "concat-map": "0.0.1"
+          }
+        },
+        "buffer-shims": {
+          "version": "1.0.0",
+          "bundled": true,
+          "dev": true
+        },
+        "caseless": {
+          "version": "0.12.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "co": {
+          "version": "4.6.0",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
@@ -3411,6 +4146,17 @@
           "bundled": true,
           "dev": true
         },
+<<<<<<< .our
+=======
+        "combined-stream": {
+          "version": "1.0.5",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "delayed-stream": "1.0.0"
+          }
+        },
+>>>>>>> .their
         "concat-map": {
           "version": "0.0.1",
           "bundled": true,
@@ -3424,11 +4170,43 @@
         "core-util-is": {
           "version": "1.0.2",
           "bundled": true,
+<<<<<<< .our
           "dev": true,
           "optional": true
         },
         "debug": {
           "version": "2.6.9",
+=======
+          "dev": true
+        },
+        "cryptiles": {
+          "version": "2.0.5",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "boom": "2.10.1"
+          }
+        },
+        "dashdash": {
+          "version": "1.14.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "assert-plus": "1.0.0"
+          },
+          "dependencies": {
+            "assert-plus": {
+              "version": "1.0.0",
+              "bundled": true,
+              "dev": true,
+              "optional": true
+            }
+          }
+        },
+        "debug": {
+          "version": "2.6.8",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
@@ -3437,11 +4215,23 @@
           }
         },
         "deep-extend": {
+<<<<<<< .our
           "version": "0.5.1",
+=======
+          "version": "0.4.2",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
+=======
+        "delayed-stream": {
+          "version": "1.0.0",
+          "bundled": true,
+          "dev": true
+        },
+>>>>>>> .their
         "delegates": {
           "version": "1.0.0",
           "bundled": true,
@@ -3449,32 +4239,100 @@
           "optional": true
         },
         "detect-libc": {
+<<<<<<< .our
           "version": "1.0.3",
+=======
+          "version": "1.0.2",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "fs-minipass": {
           "version": "1.2.5",
+=======
+        "ecc-jsbn": {
+          "version": "0.1.1",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "minipass": "^2.2.1"
+=======
+            "jsbn": "0.1.1"
           }
         },
-        "fs.realpath": {
-          "version": "1.0.0",
+        "extend": {
+          "version": "3.0.1",
           "bundled": true,
           "dev": true,
           "optional": true
         },
-        "gauge": {
-          "version": "2.7.4",
+        "extsprintf": {
+          "version": "1.0.2",
+          "bundled": true,
+          "dev": true
+        },
+        "forever-agent": {
+          "version": "0.6.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "form-data": {
+          "version": "2.1.4",
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+            "asynckit": "0.4.0",
+            "combined-stream": "1.0.5",
+            "mime-types": "2.1.15"
+>>>>>>> .their
+          }
+        },
+        "fs.realpath": {
+          "version": "1.0.0",
+          "bundled": true,
+<<<<<<< .our
+          "dev": true,
+          "optional": true
+=======
+          "dev": true
+        },
+        "fstream": {
+          "version": "1.0.11",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "graceful-fs": "4.1.11",
+            "inherits": "2.0.3",
+            "mkdirp": "0.5.1",
+            "rimraf": "2.6.1"
+          }
+        },
+        "fstream-ignore": {
+          "version": "1.0.5",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "fstream": "1.0.11",
+            "inherits": "2.0.3",
+            "minimatch": "3.0.4"
+          }
+>>>>>>> .their
+        },
+        "gauge": {
+          "version": "2.7.4",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+<<<<<<< .our
             "aproba": "^1.0.3",
             "console-control-strings": "^1.0.0",
             "has-unicode": "^2.0.0",
@@ -3483,12 +4341,40 @@
             "string-width": "^1.0.1",
             "strip-ansi": "^3.0.1",
             "wide-align": "^1.1.0"
+=======
+            "aproba": "1.1.1",
+            "console-control-strings": "1.1.0",
+            "has-unicode": "2.0.1",
+            "object-assign": "4.1.1",
+            "signal-exit": "3.0.2",
+            "string-width": "1.0.2",
+            "strip-ansi": "3.0.1",
+            "wide-align": "1.1.2"
+          }
+        },
+        "getpass": {
+          "version": "0.1.7",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "assert-plus": "1.0.0"
+          },
+          "dependencies": {
+            "assert-plus": {
+              "version": "1.0.0",
+              "bundled": true,
+              "dev": true,
+              "optional": true
+            }
+>>>>>>> .their
           }
         },
         "glob": {
           "version": "7.1.2",
           "bundled": true,
           "dev": true,
+<<<<<<< .our
           "optional": true,
           "requires": {
             "fs.realpath": "^1.0.0",
@@ -3497,6 +4383,36 @@
             "minimatch": "^3.0.4",
             "once": "^1.3.0",
             "path-is-absolute": "^1.0.0"
+=======
+          "requires": {
+            "fs.realpath": "1.0.0",
+            "inflight": "1.0.6",
+            "inherits": "2.0.3",
+            "minimatch": "3.0.4",
+            "once": "1.4.0",
+            "path-is-absolute": "1.0.1"
+          }
+        },
+        "graceful-fs": {
+          "version": "4.1.11",
+          "bundled": true,
+          "dev": true
+        },
+        "har-schema": {
+          "version": "1.0.5",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "har-validator": {
+          "version": "4.2.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "ajv": "4.11.8",
+            "har-schema": "1.0.5"
+>>>>>>> .their
           }
         },
         "has-unicode": {
@@ -3505,6 +4421,7 @@
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "iconv-lite": {
           "version": "0.4.21",
           "bundled": true,
@@ -3516,21 +4433,53 @@
         },
         "ignore-walk": {
           "version": "3.0.1",
+=======
+        "hawk": {
+          "version": "3.1.3",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "boom": "2.10.1",
+            "cryptiles": "2.0.5",
+            "hoek": "2.16.3",
+            "sntp": "1.0.9"
+          }
+        },
+        "hoek": {
+          "version": "2.16.3",
+          "bundled": true,
+          "dev": true
+        },
+        "http-signature": {
+          "version": "1.1.1",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "minimatch": "^3.0.4"
+=======
+            "assert-plus": "0.2.0",
+            "jsprim": "1.4.0",
+            "sshpk": "1.13.0"
+>>>>>>> .their
           }
         },
         "inflight": {
           "version": "1.0.6",
           "bundled": true,
           "dev": true,
+<<<<<<< .our
           "optional": true,
           "requires": {
             "once": "^1.3.0",
             "wrappy": "1"
+=======
+          "requires": {
+            "once": "1.4.0",
+            "wrappy": "1.0.2"
+>>>>>>> .their
           }
         },
         "inherits": {
@@ -3539,7 +4488,11 @@
           "dev": true
         },
         "ini": {
+<<<<<<< .our
           "version": "1.3.5",
+=======
+          "version": "1.3.4",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
@@ -3549,6 +4502,7 @@
           "bundled": true,
           "dev": true,
           "requires": {
+<<<<<<< .our
             "number-is-nan": "^1.0.0"
           }
         },
@@ -3582,10 +4536,56 @@
         },
         "minizlib": {
           "version": "1.1.0",
+=======
+            "number-is-nan": "1.0.1"
+          }
+        },
+        "is-typedarray": {
+          "version": "1.0.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "isarray": {
+          "version": "1.0.0",
+          "bundled": true,
+          "dev": true
+        },
+        "isstream": {
+          "version": "0.1.2",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "jodid25519": {
+          "version": "1.0.2",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "jsbn": "0.1.1"
+          }
+        },
+        "jsbn": {
+          "version": "0.1.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "json-schema": {
+          "version": "0.2.3",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "json-stable-stringify": {
+          "version": "1.0.1",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "minipass": "^2.2.1"
           }
         },
@@ -3599,16 +4599,35 @@
         },
         "ms": {
           "version": "2.0.0",
+=======
+            "jsonify": "0.0.0"
+          }
+        },
+        "json-stringify-safe": {
+          "version": "5.0.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "jsonify": {
+          "version": "0.0.0",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "needle": {
           "version": "2.2.0",
+=======
+        "jsprim": {
+          "version": "1.4.0",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "debug": "^2.1.2",
             "iconv-lite": "^0.4.4",
             "sax": "^1.2.4"
@@ -3644,30 +4663,122 @@
         },
         "npm-bundled": {
           "version": "1.0.3",
+=======
+            "assert-plus": "1.0.0",
+            "extsprintf": "1.0.2",
+            "json-schema": "0.2.3",
+            "verror": "1.3.6"
+          },
+          "dependencies": {
+            "assert-plus": {
+              "version": "1.0.0",
+              "bundled": true,
+              "dev": true,
+              "optional": true
+            }
+          }
+        },
+        "mime-db": {
+          "version": "1.27.0",
+          "bundled": true,
+          "dev": true
+        },
+        "mime-types": {
+          "version": "2.1.15",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "mime-db": "1.27.0"
+          }
+        },
+        "minimatch": {
+          "version": "3.0.4",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "brace-expansion": "1.1.7"
+          }
+        },
+        "minimist": {
+          "version": "0.0.8",
+          "bundled": true,
+          "dev": true
+        },
+        "mkdirp": {
+          "version": "0.5.1",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "minimist": "0.0.8"
+          }
+        },
+        "ms": {
+          "version": "2.0.0",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "npm-packlist": {
           "version": "1.1.10",
+=======
+        "node-pre-gyp": {
+          "version": "0.6.39",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "ignore-walk": "^3.0.1",
             "npm-bundled": "^1.0.1"
           }
         },
         "npmlog": {
           "version": "4.1.2",
+=======
+            "detect-libc": "1.0.2",
+            "hawk": "3.1.3",
+            "mkdirp": "0.5.1",
+            "nopt": "4.0.1",
+            "npmlog": "4.1.0",
+            "rc": "1.2.1",
+            "request": "2.81.0",
+            "rimraf": "2.6.1",
+            "semver": "5.3.0",
+            "tar": "2.2.1",
+            "tar-pack": "3.4.0"
+          }
+        },
+        "nopt": {
+          "version": "4.0.1",
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+            "abbrev": "1.1.0",
+            "osenv": "0.1.4"
+          }
+        },
+        "npmlog": {
+          "version": "4.1.0",
+>>>>>>> .their
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+<<<<<<< .our
             "are-we-there-yet": "~1.1.2",
             "console-control-strings": "~1.1.0",
             "gauge": "~2.7.3",
             "set-blocking": "~2.0.0"
+=======
+            "are-we-there-yet": "1.1.4",
+            "console-control-strings": "1.1.0",
+            "gauge": "2.7.4",
+            "set-blocking": "2.0.0"
+>>>>>>> .their
           }
         },
         "number-is-nan": {
@@ -3675,6 +4786,15 @@
           "bundled": true,
           "dev": true
         },
+<<<<<<< .our
+=======
+        "oauth-sign": {
+          "version": "0.8.2",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+>>>>>>> .their
         "object-assign": {
           "version": "4.1.1",
           "bundled": true,
@@ -3686,7 +4806,11 @@
           "bundled": true,
           "dev": true,
           "requires": {
+<<<<<<< .our
             "wrappy": "1"
+=======
+            "wrappy": "1.0.2"
+>>>>>>> .their
           }
         },
         "os-homedir": {
@@ -3702,33 +4826,173 @@
           "optional": true
         },
         "osenv": {
+<<<<<<< .our
           "version": "0.1.5",
+=======
+          "version": "0.1.4",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "os-homedir": "^1.0.0",
             "os-tmpdir": "^1.0.0"
+=======
+            "os-homedir": "1.0.2",
+            "os-tmpdir": "1.0.2"
+>>>>>>> .their
           }
         },
         "path-is-absolute": {
           "version": "1.0.1",
           "bundled": true,
+<<<<<<< .our
+=======
+          "dev": true
+        },
+        "performance-now": {
+          "version": "0.2.0",
+          "bundled": true,
+>>>>>>> .their
           "dev": true,
           "optional": true
         },
         "process-nextick-args": {
+<<<<<<< .our
           "version": "2.0.0",
+=======
+          "version": "1.0.7",
+          "bundled": true,
+          "dev": true
+        },
+        "punycode": {
+          "version": "1.4.1",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "qs": {
+          "version": "6.4.0",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
         "rc": {
+<<<<<<< .our
           "version": "1.2.7",
+=======
+          "version": "1.2.1",
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+            "deep-extend": "0.4.2",
+            "ini": "1.3.4",
+            "minimist": "1.2.0",
+            "strip-json-comments": "2.0.1"
+          },
+          "dependencies": {
+            "minimist": {
+              "version": "1.2.0",
+              "bundled": true,
+              "dev": true,
+              "optional": true
+            }
+          }
+        },
+        "readable-stream": {
+          "version": "2.2.9",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "buffer-shims": "1.0.0",
+            "core-util-is": "1.0.2",
+            "inherits": "2.0.3",
+            "isarray": "1.0.0",
+            "process-nextick-args": "1.0.7",
+            "string_decoder": "1.0.1",
+            "util-deprecate": "1.0.2"
+          }
+        },
+        "request": {
+          "version": "2.81.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "aws-sign2": "0.6.0",
+            "aws4": "1.6.0",
+            "caseless": "0.12.0",
+            "combined-stream": "1.0.5",
+            "extend": "3.0.1",
+            "forever-agent": "0.6.1",
+            "form-data": "2.1.4",
+            "har-validator": "4.2.1",
+            "hawk": "3.1.3",
+            "http-signature": "1.1.1",
+            "is-typedarray": "1.0.0",
+            "isstream": "0.1.2",
+            "json-stringify-safe": "5.0.1",
+            "mime-types": "2.1.15",
+            "oauth-sign": "0.8.2",
+            "performance-now": "0.2.0",
+            "qs": "6.4.0",
+            "safe-buffer": "5.0.1",
+            "stringstream": "0.0.5",
+            "tough-cookie": "2.3.2",
+            "tunnel-agent": "0.6.0",
+            "uuid": "3.0.1"
+          }
+        },
+        "rimraf": {
+          "version": "2.6.1",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "glob": "7.1.2"
+          }
+        },
+        "safe-buffer": {
+          "version": "5.0.1",
+          "bundled": true,
+          "dev": true
+        },
+        "semver": {
+          "version": "5.3.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "set-blocking": {
+          "version": "2.0.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "signal-exit": {
+          "version": "3.0.2",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+        },
+        "sntp": {
+          "version": "1.0.9",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "hoek": "2.16.3"
+          }
+        },
+        "sshpk": {
+          "version": "1.13.0",
+>>>>>>> .their
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+<<<<<<< .our
             "deep-extend": "^0.5.1",
             "ini": "~1.3.0",
             "minimist": "^1.2.0",
@@ -3737,12 +5001,28 @@
           "dependencies": {
             "minimist": {
               "version": "1.2.0",
+=======
+            "asn1": "0.2.3",
+            "assert-plus": "1.0.0",
+            "bcrypt-pbkdf": "1.0.1",
+            "dashdash": "1.14.1",
+            "ecc-jsbn": "0.1.1",
+            "getpass": "0.1.7",
+            "jodid25519": "1.0.2",
+            "jsbn": "0.1.1",
+            "tweetnacl": "0.14.5"
+          },
+          "dependencies": {
+            "assert-plus": {
+              "version": "1.0.0",
+>>>>>>> .their
               "bundled": true,
               "dev": true,
               "optional": true
             }
           }
         },
+<<<<<<< .our
         "readable-stream": {
           "version": "2.3.6",
           "bundled": true,
@@ -3780,10 +5060,33 @@
         },
         "sax": {
           "version": "1.2.4",
+=======
+        "string-width": {
+          "version": "1.0.2",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "code-point-at": "1.1.0",
+            "is-fullwidth-code-point": "1.0.0",
+            "strip-ansi": "3.0.1"
+          }
+        },
+        "string_decoder": {
+          "version": "1.0.1",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "safe-buffer": "5.0.1"
+          }
+        },
+        "stringstream": {
+          "version": "0.0.5",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "semver": {
           "version": "5.5.0",
           "bundled": true,
@@ -3792,10 +5095,23 @@
         },
         "set-blocking": {
           "version": "2.0.0",
+=======
+        "strip-ansi": {
+          "version": "3.0.1",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "ansi-regex": "2.1.1"
+          }
+        },
+        "strip-json-comments": {
+          "version": "2.0.1",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "signal-exit": {
           "version": "3.0.2",
           "bundled": true,
@@ -3814,10 +5130,41 @@
         },
         "string_decoder": {
           "version": "1.1.1",
+=======
+        "tar": {
+          "version": "2.2.1",
+          "bundled": true,
+          "dev": true,
+          "requires": {
+            "block-stream": "0.0.9",
+            "fstream": "1.0.11",
+            "inherits": "2.0.3"
+          }
+        },
+        "tar-pack": {
+          "version": "3.4.0",
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+            "debug": "2.6.8",
+            "fstream": "1.0.11",
+            "fstream-ignore": "1.0.5",
+            "once": "1.4.0",
+            "readable-stream": "2.2.9",
+            "rimraf": "2.6.1",
+            "tar": "2.2.1",
+            "uid-number": "0.0.6"
+          }
+        },
+        "tough-cookie": {
+          "version": "2.3.2",
+>>>>>>> .their
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+<<<<<<< .our
             "safe-buffer": "~5.1.0"
           }
         },
@@ -3831,10 +5178,27 @@
         },
         "strip-json-comments": {
           "version": "2.0.1",
+=======
+            "punycode": "1.4.1"
+          }
+        },
+        "tunnel-agent": {
+          "version": "0.6.0",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "safe-buffer": "5.0.1"
+          }
+        },
+        "tweetnacl": {
+          "version": "0.14.5",
+>>>>>>> .their
           "bundled": true,
           "dev": true,
           "optional": true
         },
+<<<<<<< .our
         "tar": {
           "version": "4.4.1",
           "bundled": true,
@@ -3849,38 +5213,76 @@
             "safe-buffer": "^5.1.1",
             "yallist": "^3.0.2"
           }
+=======
+        "uid-number": {
+          "version": "0.0.6",
+          "bundled": true,
+          "dev": true,
+          "optional": true
+>>>>>>> .their
         },
         "util-deprecate": {
           "version": "1.0.2",
           "bundled": true,
+<<<<<<< .our
+          "dev": true,
+          "optional": true
+        },
+=======
+          "dev": true
+        },
+        "uuid": {
+          "version": "3.0.1",
+          "bundled": true,
           "dev": true,
           "optional": true
         },
+        "verror": {
+          "version": "1.3.6",
+          "bundled": true,
+          "dev": true,
+          "optional": true,
+          "requires": {
+            "extsprintf": "1.0.2"
+          }
+        },
+>>>>>>> .their
         "wide-align": {
           "version": "1.1.2",
           "bundled": true,
           "dev": true,
           "optional": true,
           "requires": {
+<<<<<<< .our
             "string-width": "^1.0.2"
+=======
+            "string-width": "1.0.2"
+>>>>>>> .their
           }
         },
         "wrappy": {
           "version": "1.0.2",
           "bundled": true,
           "dev": true
+<<<<<<< .our
         },
         "yallist": {
           "version": "3.0.2",
           "bundled": true,
           "dev": true
+=======
+>>>>>>> .their
         }
       }
     },
     "function-bind": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
+<<<<<<< .our
       "integrity": "sha1-pWiZ0+o8m6uHS7l3O3xe3pL0iV0=",
+=======
+      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
+>>>>>>> .their
       "dev": true
     },
     "generate-function": {
@@ -4022,7 +5424,11 @@
       "requires": {
         "dargs": "4.1.0",
         "lodash.template": "4.4.0",
+<<<<<<< .our
         "meow": "4.0.1",
+=======
+        "meow": "4.0.0",
+>>>>>>> .their
         "split2": "2.2.0",
         "through2": "2.0.3"
       }
@@ -4043,7 +5449,11 @@
       "integrity": "sha512-2jHlJnln4D/ECk9FxGEBh3k44wgYdWjWDtMmJPaecjoRmxKo3Y1Lh8GMYuOPu04CHw86NTAODchYjC5pnpMQig==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "meow": "4.0.1",
+=======
+        "meow": "4.0.0",
+>>>>>>> .their
         "semver": "5.5.0"
       }
     },
@@ -4059,7 +5469,11 @@
     "github": {
       "version": "9.3.1",
       "resolved": "https://registry.npmjs.org/github/-/github-9.3.1.tgz",
+<<<<<<< .our
       "integrity": "sha1-ajxanMKhzQtdCXpHuu+50Ryu+J4=",
+=======
+      "integrity": "sha512-LvVb6iR8/7bqYgj0VeAtqys0t427jwIBkv/+or/ssypfIk5R1fnz4aeIEv4udPw6VFoH6vL4gi+foBoD5aazXg==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "follow-redirects": "0.0.7",
@@ -4112,7 +5526,11 @@
     "globals": {
       "version": "9.18.0",
       "resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-qjiWs+abSH8X4x7SFD1pqOMMLYo=",
+=======
+      "integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
+>>>>>>> .their
       "dev": true
     },
     "globby": {
@@ -4132,7 +5550,11 @@
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -4158,7 +5580,11 @@
         "is-retry-allowed": "1.1.0",
         "is-stream": "1.1.0",
         "lowercase-keys": "1.0.1",
+<<<<<<< .our
         "safe-buffer": "5.1.2",
+=======
+        "safe-buffer": "5.1.1",
+>>>>>>> .their
         "timed-out": "4.0.1",
         "unzip-response": "2.0.1",
         "url-parse-lax": "1.0.0"
@@ -4173,14 +5599,22 @@
     "gunzip-maybe": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/gunzip-maybe/-/gunzip-maybe-1.4.1.tgz",
+<<<<<<< .our
       "integrity": "sha1-Occu2J0bSbpwjhh3ZQBIiQKlICc=",
+=======
+      "integrity": "sha512-qtutIKMthNJJgeHQS7kZ9FqDq59/Wn0G2HYCRNjpup7yKfVI6/eqwpmroyZGFoCYaG+sW6psNVb4zoLADHpp2g==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "browserify-zlib": "0.1.4",
         "is-deflate": "1.0.0",
         "is-gzip": "1.0.0",
         "peek-stream": "1.1.3",
+<<<<<<< .our
         "pumpify": "1.5.0",
+=======
+        "pumpify": "1.4.0",
+>>>>>>> .their
         "through2": "2.0.3"
       }
     },
@@ -4270,6 +5704,7 @@
       "dev": true
     },
     "hash-base": {
+<<<<<<< .our
       "version": "3.0.4",
       "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",
       "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
@@ -4277,22 +5712,42 @@
       "requires": {
         "inherits": "2.0.3",
         "safe-buffer": "5.1.2"
+=======
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-2.0.2.tgz",
+      "integrity": "sha1-ZuodhW206KVHDK32/OI65SRO8uE=",
+      "dev": true,
+      "requires": {
+        "inherits": "2.0.3"
+>>>>>>> .their
       }
     },
     "hash.js": {
       "version": "1.1.3",
       "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.3.tgz",
+<<<<<<< .our
       "integrity": "sha1-NA3tvmKQGHFRweodd3o0SJNd+EY=",
       "dev": true,
       "requires": {
         "inherits": "2.0.3",
         "minimalistic-assert": "1.0.1"
+=======
+      "integrity": "sha512-/UETyP0W22QILqS+6HowevwhEFJ3MBJnwTf75Qob9Wz9t0DPuisL8kW8YZMK62dHAKE1c1p+gY1TtOLY+USEHA==",
+      "dev": true,
+      "requires": {
+        "inherits": "2.0.3",
+        "minimalistic-assert": "1.0.0"
+>>>>>>> .their
       }
     },
     "hawk": {
       "version": "6.0.2",
       "resolved": "https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz",
+<<<<<<< .our
       "integrity": "sha1-r02RTrBl+bXOTZ0RwcshJu7MMDg=",
+=======
+      "integrity": "sha512-miowhl2+U7Qle4vdLqDdPt9m09K6yZhkLDTWGoUiUzrQCn+mHHSmfJgAyGaLRZbPmTqfFFjRV1QWCW0VWUJBbQ==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "boom": "4.3.1",
@@ -4308,7 +5763,11 @@
       "dev": true,
       "requires": {
         "hash.js": "1.1.3",
+<<<<<<< .our
         "minimalistic-assert": "1.0.1",
+=======
+        "minimalistic-assert": "1.0.0",
+>>>>>>> .their
         "minimalistic-crypto-utils": "1.0.1"
       }
     },
@@ -4318,18 +5777,34 @@
       "integrity": "sha512-QLg82fGkfnJ/4iy1xZ81/9SIJiq1NGFUMGs6ParyjBZr6jW2Ufj/snDqTHixNlHdPNwN2RLVD0Pi3igeK9+JfA==",
       "dev": true
     },
+<<<<<<< .our
+=======
+    "home-or-tmp": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/home-or-tmp/-/home-or-tmp-2.0.0.tgz",
+      "integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
+      "dev": true,
+      "requires": {
+        "os-homedir": "1.0.2",
+        "os-tmpdir": "1.0.2"
+      }
+    },
+>>>>>>> .their
     "hosted-git-info": {
       "version": "2.6.0",
       "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.6.0.tgz",
       "integrity": "sha512-lIbgIIQA3lz5XaB6vxakj6sDHADJiZadYEJB+FgA+C4nubM1NwcuvUr9EJPmnH1skZqpqUzWborWo8EIUi0Sdw==",
       "dev": true
     },
+<<<<<<< .our
     "html-entities": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz",
       "integrity": "sha1-DfKTUfByEWNRXfueVUPl9u7VFi8=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "htmlescape": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/htmlescape/-/htmlescape-1.1.1.tgz",
@@ -4343,7 +5818,11 @@
       "dev": true,
       "requires": {
         "domelementtype": "1.3.0",
+<<<<<<< .our
         "domhandler": "2.4.2",
+=======
+        "domhandler": "2.4.1",
+>>>>>>> .their
         "domutils": "1.5.1",
         "entities": "1.1.1",
         "inherits": "2.0.3",
@@ -4366,7 +5845,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -4377,11 +5860,16 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
     },
+<<<<<<< .our
     "http-errors": {
       "version": "1.6.2",
       "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.2.tgz",
@@ -4394,6 +5882,8 @@
         "statuses": "1.5.0"
       }
     },
+=======
+>>>>>>> .their
     "http-signature": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
@@ -4425,7 +5915,11 @@
     "husky": {
       "version": "0.14.3",
       "resolved": "https://registry.npmjs.org/husky/-/husky-0.14.3.tgz",
+<<<<<<< .our
       "integrity": "sha1-xp7XTi0neXaaF7qDmbVM4LY8EsM=",
+=======
+      "integrity": "sha512-e21wivqHpstpoiWA/Yi8eFti8E+sQDSS53cpJsPptPs295QTOQR0ZwnHo2TXy1XOpZFD9rPOd3NpmqTK6uMLJA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "is-ci": "1.1.0",
@@ -4441,12 +5935,15 @@
         }
       }
     },
+<<<<<<< .our
     "iconv-lite": {
       "version": "0.4.19",
       "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.19.tgz",
       "integrity": "sha512-oTZqweIP51xaGPI4uPa56/Pri/480R+mo7SeU+YETByQNhDG55ycFyNLIgta9vXhILrxXDmF7ZGhqZIcuN0gJQ==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "ieee754": {
       "version": "1.1.11",
       "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.11.tgz",
@@ -4454,9 +5951,15 @@
       "dev": true
     },
     "ignore": {
+<<<<<<< .our
       "version": "3.3.8",
       "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.8.tgz",
       "integrity": "sha512-pUh+xUQQhQzevjRHHFqqcTy0/dP/kS9I8HSrUydhihjuD09W6ldVWFtIrwhXdUJHis3i2rZNqEHpZH/cbinFbg==",
+=======
+      "version": "3.3.7",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.7.tgz",
+      "integrity": "sha512-YGG3ejvBNHRqu0559EOxxNFihD0AjpvHlC/pdGKd3X3ofe+CoJkYazwNJYTNebqpPKN+VVQbh4ZFn1DivMNuHA==",
+>>>>>>> .their
       "dev": true
     },
     "import-lazy": {
@@ -4526,7 +6029,11 @@
         "cli-cursor": "1.0.2",
         "cli-width": "2.2.0",
         "figures": "1.7.0",
+<<<<<<< .our
         "lodash": "4.17.10",
+=======
+        "lodash": "4.17.5",
+>>>>>>> .their
         "readline2": "1.0.1",
         "run-async": "0.1.0",
         "rx-lite": "3.1.2",
@@ -4536,9 +6043,15 @@
       }
     },
     "insert-module-globals": {
+<<<<<<< .our
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-7.0.6.tgz",
       "integrity": "sha512-R3sidKJr3SsggqQQ5cEwQb3pWG8RNx0UnpyeiOSR6jorRIeAOzH2gkTWnNdMnyRiVbjrG047K7UCtlMkQ1Mo9w==",
+=======
+      "version": "7.0.5",
+      "resolved": "https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-7.0.5.tgz",
+      "integrity": "sha512-wgRtrCpMm0ruH2hgLUIx+9YfJsgJQmU1KkPUzTuatW9dbH19yPRqAQhFX1HJU6zbmg2IMmt80BgSE5MWuksw3Q==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "JSONStream": "1.3.2",
@@ -4546,7 +6059,10 @@
         "concat-stream": "1.6.2",
         "is-buffer": "1.1.6",
         "lexical-scope": "1.2.0",
+<<<<<<< .our
         "path-is-absolute": "1.0.1",
+=======
+>>>>>>> .their
         "process": "0.11.10",
         "through2": "2.0.3",
         "xtend": "4.0.1"
@@ -4580,7 +6096,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -4591,7 +6111,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -4608,12 +6132,15 @@
       "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
       "dev": true
     },
+<<<<<<< .our
     "ip": {
       "version": "1.1.5",
       "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",
       "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "irregular-plurals": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/irregular-plurals/-/irregular-plurals-1.4.0.tgz",
@@ -4621,9 +6148,15 @@
       "dev": true
     },
     "is-alphabetical": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-1.0.2.tgz",
       "integrity": "sha512-V0xN4BYezDHcBSKb1QHUFMlR4as/XEuCZBzMJUU4n7+Cbt33SmUnSol+pnXFvLxSHNq2CemUXNdaXV6Flg7+xg==",
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-1.0.1.tgz",
+      "integrity": "sha1-x3B5zJHU76x3W+EDS/LSQ/lebwg=",
+>>>>>>> .their
       "dev": true
     },
     "is-alphanumeric": {
@@ -4633,6 +6166,7 @@
       "dev": true
     },
     "is-alphanumerical": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-1.0.2.tgz",
       "integrity": "sha512-pyfU/0kHdISIgslFfZN9nfY1Gk3MquQgUm1mJTjdkEPpkAKNWuBTSqFwewOpR7N351VkErCiyV71zX7mlQQqsg==",
@@ -4640,6 +6174,15 @@
       "requires": {
         "is-alphabetical": "1.0.2",
         "is-decimal": "1.0.2"
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-1.0.1.tgz",
+      "integrity": "sha1-37SqTRCF4zvbYcLe6cgOnGwZ9Ts=",
+      "dev": true,
+      "requires": {
+        "is-alphabetical": "1.0.1",
+        "is-decimal": "1.0.1"
+>>>>>>> .their
       }
     },
     "is-arrayish": {
@@ -4694,9 +6237,15 @@
       "dev": true
     },
     "is-decimal": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.2.tgz",
       "integrity": "sha512-TRzl7mOCchnhchN+f3ICUCzYvL9ul7R+TYOsZ8xia++knyZAJfv/uA1FvQXsAnYIl1T3B2X5E/J7Wb1QXiIBXg==",
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.1.tgz",
+      "integrity": "sha1-9ftqlJlq2ejjdh+/vQkfH8qMToI=",
+>>>>>>> .their
       "dev": true
     },
     "is-deflate": {
@@ -4778,9 +6327,15 @@
       "dev": true
     },
     "is-hexadecimal": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-1.0.2.tgz",
       "integrity": "sha512-but/G3sapV3MNyqiDBLrOi4x8uCIw0RY3o/Vb5GT0sMFHrVV7731wFSVy41T5FO1og7G0gXLJh0MkgPRouko/A==",
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-1.0.1.tgz",
+      "integrity": "sha1-bghLvJIGH7sJcexYts5tQE4k2mk=",
+>>>>>>> .their
       "dev": true
     },
     "is-hidden": {
@@ -4960,6 +6515,7 @@
       "dev": true
     },
     "is-whitespace-character": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/is-whitespace-character/-/is-whitespace-character-1.0.2.tgz",
       "integrity": "sha512-SzM+T5GKUCtLhlHFKt2SDAX2RFzfS6joT91F2/WSi9LxgFdsnhfPK/UIA+JhRR2xuyLdrCys2PiFDrtn1fU5hQ==",
@@ -4975,6 +6531,17 @@
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
       "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-whitespace-character/-/is-whitespace-character-1.0.1.tgz",
+      "integrity": "sha1-muAXbzKCtlRXoZks2whPil+DPjs=",
+      "dev": true
+    },
+    "is-word-character": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-word-character/-/is-word-character-1.0.1.tgz",
+      "integrity": "sha1-WgP6HqkazopusMfNdw64bWXIvvs=",
+>>>>>>> .their
       "dev": true
     },
     "isarray": {
@@ -5086,7 +6653,11 @@
         "esprima": {
           "version": "4.0.0",
           "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.0.tgz",
+<<<<<<< .our
           "integrity": "sha1-RJnt3NERDgshi6zy+n9/WfVcqAQ=",
+=======
+          "integrity": "sha512-oftTcaMu/EGrEIu904mWteKIv8vMuOgGYo7EhVJJN00R/EED9DCua/xxHRdYnKtcECzVg7xOWhflvJMnqcFZjw==",
+>>>>>>> .their
           "dev": true
         }
       }
@@ -5277,12 +6848,15 @@
         "invert-kv": "1.0.0"
       }
     },
+<<<<<<< .our
     "leven": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/leven/-/leven-2.1.0.tgz",
       "integrity": "sha1-wuep93IJTe6dNCAq6KzORoeHVYA=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "levn": {
       "version": "0.3.0",
       "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
@@ -5311,12 +6885,15 @@
         "uc.micro": "1.0.5"
       }
     },
+<<<<<<< .our
     "lint": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/lint/-/lint-1.1.2.tgz",
       "integrity": "sha1-Ne0GTzIlR8MxNY2JmGhmSWi6Nx8=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "load-json-file": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
@@ -5331,6 +6908,7 @@
       }
     },
     "load-plugin": {
+<<<<<<< .our
       "version": "2.2.2",
       "resolved": "https://registry.npmjs.org/load-plugin/-/load-plugin-2.2.2.tgz",
       "integrity": "sha512-FYzamtURIJefQykZGtiClYuZkJBUKzmx8Tc74y8JGAulDzbzVm/C+w/MbAljHRr+REL0cRzy3WgnHE+T8gce5g==",
@@ -5338,6 +6916,15 @@
       "requires": {
         "npm-prefix": "1.2.0",
         "resolve-from": "4.0.0"
+=======
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/load-plugin/-/load-plugin-2.2.1.tgz",
+      "integrity": "sha512-raqInsJNdPGpzZyb+FjjJYmXsjIm8fIiOjOmqmUTGPyCXDMeEK3p4x4Xm1ZCNp43UmfDTWvo7pZkB2fKbD5AAA==",
+      "dev": true,
+      "requires": {
+        "npm-prefix": "1.2.0",
+        "resolve-from": "2.0.0"
+>>>>>>> .their
       }
     },
     "locate-path": {
@@ -5359,9 +6946,15 @@
       }
     },
     "lodash": {
+<<<<<<< .our
       "version": "4.17.10",
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.10.tgz",
       "integrity": "sha512-UejweD1pDoXu+AD825lWwp4ZGtSwgnpZxb3JDViD7StjQz+Nb/6l093lx4OQ0foGWNRoc19mWy7BzL+UAK2iVg==",
+=======
+      "version": "4.17.5",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.5.tgz",
+      "integrity": "sha512-svL3uiZf1RwhH+cWrfZn3A4+U58wbP0tGVTLQPbjplZxZ8ROD9VLuNgsRniTlLe7OlSqR79RUehXgpBW/s0IQw==",
+>>>>>>> .their
       "dev": true
     },
     "lodash._reinterpolate": {
@@ -5541,9 +7134,15 @@
       "dev": true
     },
     "lru-cache": {
+<<<<<<< .our
       "version": "4.1.3",
       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.3.tgz",
       "integrity": "sha512-fFEhvcgzuIoJVUF8fYr5KR0YqxD238zgObTps31YdADwPPAp82a4M8TrckkWyx7ekNlf9aBcVn81cFwwXngrJA==",
+=======
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.2.tgz",
+      "integrity": "sha512-wgeVXhrDwAWnIF/yZARsFnMBtdFXOg1b8RIrhilp+0iDYN4mdQcNZElDZ0e4B64BhaxeQ5zN7PMyvu7we1kPeQ==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "pseudomap": "1.0.2",
@@ -5559,9 +7158,15 @@
       }
     },
     "make-dir": {
+<<<<<<< .our
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.3.0.tgz",
       "integrity": "sha512-2w31R7SJtieJJnQtGc7RVL2StM2vGYVfqUOvUDxH6bC6aJTxPxTF0GnIgCyu7tjockiUWAYQRbxa7vKn34s5sQ==",
+=======
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.2.0.tgz",
+      "integrity": "sha512-aNUAa4UMg/UougV25bbrU4ZaaKNjJ/3/xnvg/twpmKROPdKZPZ9wGgI0opdZzO8q/zUFawoUuixuOv33eZ61Iw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "pify": "3.0.0"
@@ -5582,9 +7187,15 @@
       "dev": true
     },
     "markdown-escapes": {
+<<<<<<< .our
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/markdown-escapes/-/markdown-escapes-1.0.2.tgz",
       "integrity": "sha512-lbRZ2mE3Q9RtLjxZBZ9+IMl68DKIXaVAhwvwn9pmjnPLS0h/6kyBMgNhqi1xFJ/2yv6cSyv0jbiZavZv93JkkA==",
+=======
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/markdown-escapes/-/markdown-escapes-1.0.1.tgz",
+      "integrity": "sha1-GZTfLTr0gR3lmmcUk0wrIpJzRRg=",
+>>>>>>> .their
       "dev": true
     },
     "markdown-extensions": {
@@ -5616,9 +7227,15 @@
       }
     },
     "markdown-table": {
+<<<<<<< .our
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/markdown-table/-/markdown-table-1.1.2.tgz",
       "integrity": "sha512-NcWuJFHDA8V3wkDgR/j4+gZx+YQwstPgfQDV8ndUeWWzta3dnDTBxpVzqS9lkmJAuV5YX35lmyojl6HO5JXAgw==",
+=======
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/markdown-table/-/markdown-table-1.1.1.tgz",
+      "integrity": "sha1-Sz3ToTPRUYuO8NvHCb8qG0gkvIw=",
+>>>>>>> .their
       "dev": true
     },
     "marky-markdown-lite": {
@@ -5628,7 +7245,11 @@
       "dev": true,
       "requires": {
         "cheerio": "0.20.0",
+<<<<<<< .our
         "conventional-changelog-cli": "1.3.22",
+=======
+        "conventional-changelog-cli": "1.3.21",
+>>>>>>> .their
         "is-file": "1.0.0",
         "markdown-it": "6.1.1",
         "markdown-it-named-headers": "0.0.4"
@@ -5645,7 +7266,11 @@
             "entities": "1.1.1",
             "htmlparser2": "3.8.3",
             "jsdom": "7.2.2",
+<<<<<<< .our
             "lodash": "4.17.10"
+=======
+            "lodash": "4.17.5"
+>>>>>>> .their
           }
         },
         "domhandler": {
@@ -5683,18 +7308,25 @@
     "matcher-collection": {
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/matcher-collection/-/matcher-collection-1.0.5.tgz",
+<<<<<<< .our
       "integrity": "sha1-LuCVQ4Nyy4iE8FgjQTjAXGROwzk=",
+=======
+      "integrity": "sha512-nUCmzKipcJEwYsBVAFh5P+d7JBuhJaW1xs85Hara9xuMLqtCVUrW6DSC0JVIkluxEH2W45nPBM/wjHtBXa/tYA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "minimatch": "3.0.4"
       }
     },
+<<<<<<< .our
     "math-random": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/math-random/-/math-random-1.0.1.tgz",
       "integrity": "sha1-izqsWIuKZuSXXjzepn97sylgH6w=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "md5.js": {
       "version": "1.3.4",
       "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.4.tgz",
@@ -5703,6 +7335,21 @@
       "requires": {
         "hash-base": "3.0.4",
         "inherits": "2.0.3"
+<<<<<<< .our
+=======
+      },
+      "dependencies": {
+        "hash-base": {
+          "version": "3.0.4",
+          "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",
+          "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
+          "dev": true,
+          "requires": {
+            "inherits": "2.0.3",
+            "safe-buffer": "5.1.1"
+          }
+        }
+>>>>>>> .their
       }
     },
     "mdast-comment-marker": {
@@ -5717,8 +7364,13 @@
       "integrity": "sha1-zbX4TitqLTEU3zO9BdnLMuPECDo=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "unist-util-modify-children": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-modify-children": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "mdast-util-heading-style": {
@@ -5740,9 +7392,15 @@
       "dev": true
     },
     "meow": {
+<<<<<<< .our
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/meow/-/meow-4.0.1.tgz",
       "integrity": "sha512-xcSBHD5Z86zaOc+781KrupuHAzeGXSLtiAOmBsiLDiPSaYSB6hdew2ng9EBAnZ62jagG9MHAOdxpDi/lWBFJ/A==",
+=======
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/meow/-/meow-4.0.0.tgz",
+      "integrity": "sha512-Me/kel335m6vMKmEmA6c87Z6DUFW3JqkINRnxkbC+A/PUm0D5Fl2dEBQrPKnqCL9Te/CIa1MUt/0InMJhuC/sw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "camelcase-keys": "4.2.0",
@@ -5831,6 +7489,7 @@
         }
       }
     },
+<<<<<<< .our
     "micro": {
       "version": "9.3.1",
       "resolved": "https://registry.npmjs.org/micro/-/micro-9.3.1.tgz",
@@ -5890,6 +7549,8 @@
         "compression": "1.7.3"
       }
     },
+=======
+>>>>>>> .their
     "micromatch": {
       "version": "2.3.11",
       "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
@@ -5914,7 +7575,11 @@
     "miller-rabin": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
+<<<<<<< .our
       "integrity": "sha1-8IA1HIZbDcViqEYpZtqlNUPHik0=",
+=======
+      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "bn.js": "4.11.8",
@@ -5949,9 +7614,15 @@
       "dev": true
     },
     "minimalistic-assert": {
+<<<<<<< .our
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
       "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
+=======
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.0.tgz",
+      "integrity": "sha1-cCvi3aazf0g2vLP121ZkG2Sh09M=",
+>>>>>>> .their
       "dev": true
     },
     "minimalistic-crypto-utils": {
@@ -5963,7 +7634,11 @@
     "minimatch": {
       "version": "3.0.4",
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
+<<<<<<< .our
       "integrity": "sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=",
+=======
+      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "brace-expansion": "1.1.11"
@@ -5986,12 +7661,21 @@
       }
     },
     "minipass": {
+<<<<<<< .our
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.3.0.tgz",
       "integrity": "sha512-jWC2Eg+Np4bxah7llu1IrUNSJQxtLz/J+pOjTM0nFpJXGAaV18XBWhUn031Q1tAA/TJtA1jgwnOe9S2PQa4Lbg==",
       "dev": true,
       "requires": {
         "safe-buffer": "5.1.2",
+=======
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.2.4.tgz",
+      "integrity": "sha512-hzXIWWet/BzWhYs2b+u7dRHlruXhwdgvlTMDKC6Cb1U7ps6Ac6yQlR39xsbjWJE377YTCtKwIXIpJ5oP+j5y8g==",
+      "dev": true,
+      "requires": {
+        "safe-buffer": "5.1.1",
+>>>>>>> .their
         "yallist": "3.0.2"
       }
     },
@@ -6001,7 +7685,11 @@
       "integrity": "sha512-4T6Ur/GctZ27nHfpt9THOdRZNgyJ9FZchYO1ceg5S8Q3DNLCKYy44nCZzgCJgcvx2UM8czmqak5BCxJMrq37lA==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "minipass": "2.3.0"
+=======
+        "minipass": "2.2.4"
+>>>>>>> .their
       }
     },
     "mkdirp": {
@@ -6060,7 +7748,11 @@
         "inherits": "2.0.3",
         "parents": "1.0.1",
         "readable-stream": "2.3.6",
+<<<<<<< .our
         "resolve": "1.7.1",
+=======
+        "resolve": "1.6.0",
+>>>>>>> .their
         "stream-combiner2": "1.1.1",
         "subarg": "1.0.0",
         "through2": "2.0.3",
@@ -6083,7 +7775,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -6094,17 +7790,24 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
     },
+<<<<<<< .our
     "mri": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/mri/-/mri-1.1.0.tgz",
       "integrity": "sha1-XAo/KcjM/7ux7JQdzsCdcfoy82o=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "ms": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
@@ -6130,12 +7833,15 @@
       "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
       "dev": true
     },
+<<<<<<< .our
     "negotiator": {
       "version": "0.6.1",
       "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.1.tgz",
       "integrity": "sha1-KzJxhOiZIQEXeyhWP7XnECrNDKk=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "netrc": {
       "version": "0.1.4",
       "resolved": "https://registry.npmjs.org/netrc/-/netrc-0.1.4.tgz",
@@ -6157,6 +7863,7 @@
         "minimatch": "3.0.4"
       }
     },
+<<<<<<< .our
     "node-fetch": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.1.2.tgz",
@@ -6169,6 +7876,8 @@
       "integrity": "sha512-rEwE51JWn0yN3Wl5BXeGn5d52OGbSXzWiiXRjAQeuyvcGKyvuSILW2rb3G7Xh+nexzLwhTpek6Ehxd6IjvHePg==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "nopt": {
       "version": "3.0.6",
       "resolved": "https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz",
@@ -6181,7 +7890,11 @@
     "normalize-package-data": {
       "version": "2.4.0",
       "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.4.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-EvlaMH1YNSB1oEkHuErIvpisAS8=",
+=======
+      "integrity": "sha512-9jjUFbTPfEy3R/ad/2oNbKtW9Hgovl5O1FvFWKkKblNXoN/Oou6+9+KKohPK13Yc3/TyunyWhJp6gvRNR/PPAw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "hosted-git-info": "2.6.0",
@@ -6205,7 +7918,11 @@
       "integrity": "sha1-5hlFX3B0ulTMZtbQ033Z8b5ry8A=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "rc": "1.2.7",
+=======
+        "rc": "1.2.6",
+>>>>>>> .their
         "shellsubstitute": "1.2.0",
         "untildify": "2.1.0"
       }
@@ -6304,6 +8021,7 @@
         "is-extendable": "0.1.1"
       }
     },
+<<<<<<< .our
     "octicons": {
       "version": "7.3.0",
       "resolved": "https://registry.npmjs.org/octicons/-/octicons-7.3.0.tgz",
@@ -6328,6 +8046,8 @@
       "integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "once": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
@@ -6343,6 +8063,7 @@
       "integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=",
       "dev": true
     },
+<<<<<<< .our
     "openssl-self-signed-certificate": {
       "version": "1.1.6",
       "resolved": "https://registry.npmjs.org/openssl-self-signed-certificate/-/openssl-self-signed-certificate-1.1.6.tgz",
@@ -6358,6 +8079,8 @@
         "is-wsl": "1.1.0"
       }
     },
+=======
+>>>>>>> .their
     "optimist": {
       "version": "0.3.7",
       "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz",
@@ -6494,13 +8217,20 @@
       }
     },
     "parse-asn1": {
+<<<<<<< .our
       "version": "5.1.1",
       "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.1.tgz",
       "integrity": "sha512-KPx7flKXg775zZpnp9SxJlz00gTd4BmJ2yJufSc44gMCRrRQ7NSzAcSJQfifuOLgW6bEi+ftrALtsgALeB2Adw==",
+=======
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.0.tgz",
+      "integrity": "sha1-N8T5t+06tlx0gXtfJICTf7+XxxI=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "asn1.js": "4.10.1",
         "browserify-aes": "1.2.0",
+<<<<<<< .our
         "create-hash": "1.2.0",
         "evp_bytestokey": "1.0.3",
         "pbkdf2": "3.0.16"
@@ -6518,6 +8248,25 @@
         "is-alphanumerical": "1.0.2",
         "is-decimal": "1.0.2",
         "is-hexadecimal": "1.0.2"
+=======
+        "create-hash": "1.1.3",
+        "evp_bytestokey": "1.0.3",
+        "pbkdf2": "3.0.14"
+      }
+    },
+    "parse-entities": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.1.1.tgz",
+      "integrity": "sha1-gRLYhHExnyerrk1klksSL+ThuJA=",
+      "dev": true,
+      "requires": {
+        "character-entities": "1.2.1",
+        "character-entities-legacy": "1.1.1",
+        "character-reference-invalid": "1.1.1",
+        "is-alphanumerical": "1.0.1",
+        "is-decimal": "1.0.1",
+        "is-hexadecimal": "1.0.1"
+>>>>>>> .their
       }
     },
     "parse-github-repo-url": {
@@ -6644,6 +8393,7 @@
       }
     },
     "pbkdf2": {
+<<<<<<< .our
       "version": "3.0.16",
       "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.16.tgz",
       "integrity": "sha512-y4CXP3thSxqf7c0qmOF+9UeOTrifiVTIM+u7NWlq+PRsHbr7r7dpCmvzrZxa96JJUNi0Y5w9VqG5ZNeCVMoDcA==",
@@ -6653,6 +8403,17 @@
         "create-hmac": "1.1.7",
         "ripemd160": "2.0.2",
         "safe-buffer": "5.1.2",
+=======
+      "version": "3.0.14",
+      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.14.tgz",
+      "integrity": "sha512-gjsZW9O34fm0R7PaLHRJmLLVfSoesxztjPjE9o6R+qtVJij90ltg1joIovN9GKrRW3t1PzhDDG3UMEMFfZ+1wA==",
+      "dev": true,
+      "requires": {
+        "create-hash": "1.1.3",
+        "create-hmac": "1.1.6",
+        "ripemd160": "2.0.1",
+        "safe-buffer": "5.1.1",
+>>>>>>> .their
         "sha.js": "2.4.11"
       }
     },
@@ -6663,7 +8424,11 @@
       "dev": true,
       "requires": {
         "buffer-from": "1.0.0",
+<<<<<<< .our
         "duplexify": "3.6.0",
+=======
+        "duplexify": "3.5.4",
+>>>>>>> .their
         "through2": "2.0.3"
       }
     },
@@ -6953,15 +8718,26 @@
       "dev": true
     },
     "public-encrypt": {
+<<<<<<< .our
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.2.tgz",
       "integrity": "sha512-4kJ5Esocg8X3h8YgJsKAuoesBgB7mqH3eowiDzMUPKiRDDE7E/BqqZD1hnTByIaAFiwAw246YEltSq7tdrOH0Q==",
+=======
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.0.tgz",
+      "integrity": "sha1-OfaZ86RlYN1eusvKaTyvfGXBjMY=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "bn.js": "4.11.8",
         "browserify-rsa": "4.0.1",
+<<<<<<< .our
         "create-hash": "1.2.0",
         "parse-asn1": "5.1.1",
+=======
+        "create-hash": "1.1.3",
+        "parse-asn1": "5.1.0",
+>>>>>>> .their
         "randombytes": "2.0.6"
       }
     },
@@ -6976,12 +8752,21 @@
       }
     },
     "pumpify": {
+<<<<<<< .our
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.5.0.tgz",
       "integrity": "sha512-UWi0klDoq8xtVzlMRgENV9F7iCTZExaJQSQL187UXsxpk9NnrKGqTqqUNYAKGOzucSOxs2+jUnRNI+rLviPhJg==",
       "dev": true,
       "requires": {
         "duplexify": "3.6.0",
+=======
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.4.0.tgz",
+      "integrity": "sha512-2kmNR9ry+Pf45opRVirpNuIFotsxUGLaYqxIwuR77AYrYRMuFCz9eryHBS52L360O+NcR383CL4QYlMKPq4zYA==",
+      "dev": true,
+      "requires": {
+        "duplexify": "3.5.4",
+>>>>>>> .their
         "inherits": "2.0.3",
         "pump": "2.0.1"
       }
@@ -6999,9 +8784,15 @@
       "dev": true
     },
     "qs": {
+<<<<<<< .our
       "version": "6.5.2",
       "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
       "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
+=======
+      "version": "6.5.1",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.1.tgz",
+      "integrity": "sha512-eRzhrN1WSINYCDCbrz796z37LOe3m5tmW7RQf6oBntukAG1nmovJvhnwHHRMAfeoItc1m2Hk02WER2aQ/iqs+A==",
+>>>>>>> .their
       "dev": true
     },
     "querystring": {
@@ -7023,6 +8814,7 @@
       "dev": true
     },
     "randomatic": {
+<<<<<<< .our
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-3.0.0.tgz",
       "integrity": "sha512-VdxFOIEY3mNO5PtSRkkle/hPJDHvQhK21oa73K4yAc9qmp6N429gAyF1gZMOTMeS0/AYzaV/2Trcef+NaIonSA==",
@@ -7040,10 +8832,49 @@
           "dev": true
         },
         "kind-of": {
-          "version": "6.0.2",
-          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",
-          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==",
-          "dev": true
+          "version": "6.0.2",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",
+          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==",
+          "dev": true
+=======
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.7.tgz",
+      "integrity": "sha512-D5JUjPyJbaJDkuAazpVnSfVkLlpeO3wDlPROTMLGKG1zMFNFRgrciKo1ltz/AzNTkqE0HzDx655QOL51N06how==",
+      "dev": true,
+      "requires": {
+        "is-number": "3.0.0",
+        "kind-of": "4.0.0"
+      },
+      "dependencies": {
+        "is-number": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
+          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
+          "dev": true,
+          "requires": {
+            "kind-of": "3.2.2"
+          },
+          "dependencies": {
+            "kind-of": {
+              "version": "3.2.2",
+              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+              "dev": true,
+              "requires": {
+                "is-buffer": "1.1.6"
+              }
+            }
+          }
+        },
+        "kind-of": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
+          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "1.1.6"
+          }
+>>>>>>> .their
         }
       }
     },
@@ -7053,7 +8884,11 @@
       "integrity": "sha512-CIQ5OFxf4Jou6uOKe9t1AOgqpeU5fd70A8NPdHSGeYXqXsPe6peOwI0cUl88RWZ6sP1vPMV3avd/R6cZ5/sP1A==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "safe-buffer": "5.1.2"
+=======
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       }
     },
     "randomfill": {
@@ -7063,6 +8898,7 @@
       "dev": true,
       "requires": {
         "randombytes": "2.0.6",
+<<<<<<< .our
         "safe-buffer": "5.1.2"
       }
     },
@@ -7091,6 +8927,18 @@
       "dev": true,
       "requires": {
         "deep-extend": "0.5.1",
+=======
+        "safe-buffer": "5.1.1"
+      }
+    },
+    "rc": {
+      "version": "1.2.6",
+      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.6.tgz",
+      "integrity": "sha1-6xiYnG1PTxYsOZ953dKfODVWgJI=",
+      "dev": true,
+      "requires": {
+        "deep-extend": "0.4.2",
+>>>>>>> .their
         "ini": "1.3.5",
         "minimist": "1.2.0",
         "strip-json-comments": "2.0.1"
@@ -7121,7 +8969,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -7132,7 +8984,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -7198,7 +9054,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -7209,7 +9069,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -7231,7 +9095,11 @@
       "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "resolve": "1.7.1"
+=======
+        "resolve": "1.6.0"
+>>>>>>> .their
       }
     },
     "redent": {
@@ -7247,7 +9115,11 @@
     "regex-cache": {
       "version": "0.4.4",
       "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.4.tgz",
+<<<<<<< .our
       "integrity": "sha1-db3FiioUls7EihKDW8VMjVYjNt0=",
+=======
+      "integrity": "sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "is-equal-shallow": "0.1.3"
@@ -7259,8 +9131,13 @@
       "integrity": "sha512-JL39c60XlzCVgNrO+qq68FoNb56w/m7JYvGR2jT5iR1xBrUA3Mfx5Twk5rqTThPmQKMWydGmq8oFtDlxfrmxnQ==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "rc": "1.2.7",
         "safe-buffer": "5.1.2"
+=======
+        "rc": "1.2.6",
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       }
     },
     "registry-url": {
@@ -7269,7 +9146,11 @@
       "integrity": "sha1-PU74cPc93h138M+aOBQyRE4XSUI=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "rc": "1.2.7"
+=======
+        "rc": "1.2.6"
+>>>>>>> .their
       }
     },
     "remark": {
@@ -7280,7 +9161,11 @@
       "requires": {
         "remark-parse": "4.0.0",
         "remark-stringify": "4.0.0",
+<<<<<<< .our
         "unified": "6.2.0"
+=======
+        "unified": "6.1.6"
+>>>>>>> .their
       }
     },
     "remark-cli": {
@@ -7312,9 +9197,15 @@
         "mdast-util-to-string": "1.0.4",
         "plur": "2.1.2",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-code-block-style": {
@@ -7324,9 +9215,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-definition-case": {
@@ -7336,9 +9233,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-definition-spacing": {
@@ -7348,9 +9251,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-emphasis-marker": {
@@ -7360,9 +9269,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-fenced-code-flag": {
@@ -7372,9 +9287,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-fenced-code-marker": {
@@ -7384,9 +9305,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-file-extension": {
@@ -7405,9 +9332,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-hard-break-spaces": {
@@ -7417,9 +9350,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-heading-increment": {
@@ -7429,8 +9368,13 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-heading-style": {
@@ -7441,8 +9385,13 @@
       "requires": {
         "mdast-util-heading-style": "1.0.3",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-link-title-style": {
@@ -7452,10 +9401,17 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1",
         "vfile-location": "2.0.3"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0",
+        "vfile-location": "2.0.2"
+>>>>>>> .their
       }
     },
     "remark-lint-list-item-content-indent": {
@@ -7466,9 +9422,15 @@
       "requires": {
         "plur": "2.1.2",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-list-item-indent": {
@@ -7479,9 +9441,15 @@
       "requires": {
         "plur": "2.1.2",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-list-item-spacing": {
@@ -7491,9 +9459,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-maximum-heading-length": {
@@ -7504,8 +9478,13 @@
       "requires": {
         "mdast-util-to-string": "1.0.4",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-maximum-line-length": {
@@ -7515,9 +9494,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-auto-link-without-protocol": {
@@ -7528,9 +9513,15 @@
       "requires": {
         "mdast-util-to-string": "1.0.4",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-blockquote-without-marker": {
@@ -7540,10 +9531,17 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1",
         "vfile-location": "2.0.3"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0",
+        "vfile-location": "2.0.2"
+>>>>>>> .their
       }
     },
     "remark-lint-no-consecutive-blank-lines": {
@@ -7554,9 +9552,15 @@
       "requires": {
         "plur": "2.1.2",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-duplicate-headings": {
@@ -7567,9 +9571,15 @@
       "requires": {
         "mdast-util-to-string": "1.0.4",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-emphasis-as-heading": {
@@ -7579,8 +9589,13 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-file-name-articles": {
@@ -7636,8 +9651,13 @@
       "requires": {
         "mdast-util-to-string": "1.0.4",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-inline-padding": {
@@ -7648,8 +9668,13 @@
       "requires": {
         "mdast-util-to-string": "1.0.4",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-literal-urls": {
@@ -7660,9 +9685,15 @@
       "requires": {
         "mdast-util-to-string": "1.0.4",
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-multiple-toplevel-headings": {
@@ -7672,9 +9703,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-shell-dollars": {
@@ -7684,8 +9721,13 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-shortcut-reference-image": {
@@ -7695,8 +9737,13 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-shortcut-reference-link": {
@@ -7706,8 +9753,13 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-no-table-indentation": {
@@ -7717,9 +9769,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-ordered-list-marker-style": {
@@ -7729,9 +9787,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-ordered-list-marker-value": {
@@ -7741,9 +9805,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-rule-style": {
@@ -7753,9 +9823,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-strong-marker": {
@@ -7765,9 +9841,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-table-cell-padding": {
@@ -7777,9 +9859,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-table-pipe-alignment": {
@@ -7789,9 +9877,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-table-pipes": {
@@ -7801,9 +9895,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-lint-unordered-list-marker-style": {
@@ -7813,9 +9913,15 @@
       "dev": true,
       "requires": {
         "unified-lint-rule": "1.0.2",
+<<<<<<< .our
         "unist-util-generated": "1.1.2",
         "unist-util-position": "3.0.1",
         "unist-util-visit": "1.3.1"
+=======
+        "unist-util-generated": "1.1.1",
+        "unist-util-position": "3.0.0",
+        "unist-util-visit": "1.3.0"
+>>>>>>> .their
       }
     },
     "remark-message-control": {
@@ -7825,7 +9931,11 @@
       "dev": true,
       "requires": {
         "mdast-comment-marker": "1.0.2",
+<<<<<<< .our
         "unified-message-control": "1.0.4",
+=======
+        "unified-message-control": "1.0.3",
+>>>>>>> .their
         "xtend": "4.0.1"
       }
     },
@@ -7835,6 +9945,7 @@
       "integrity": "sha512-XZgICP2gJ1MHU7+vQaRM+VA9HEL3X253uwUM/BGgx3iv6TH2B3bF3B8q00DKcyP9YrJV+/7WOWEWBFF/u8cIsw==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "collapse-white-space": "1.0.4",
         "is-alphabetical": "1.0.2",
         "is-decimal": "1.0.2",
@@ -7849,6 +9960,22 @@
         "unherit": "1.1.1",
         "unist-util-remove-position": "1.1.2",
         "vfile-location": "2.0.3",
+=======
+        "collapse-white-space": "1.0.3",
+        "is-alphabetical": "1.0.1",
+        "is-decimal": "1.0.1",
+        "is-whitespace-character": "1.0.1",
+        "is-word-character": "1.0.1",
+        "markdown-escapes": "1.0.1",
+        "parse-entities": "1.1.1",
+        "repeat-string": "1.6.1",
+        "state-toggle": "1.0.0",
+        "trim": "0.0.1",
+        "trim-trailing-lines": "1.1.0",
+        "unherit": "1.1.0",
+        "unist-util-remove-position": "1.1.1",
+        "vfile-location": "2.0.2",
+>>>>>>> .their
         "xtend": "4.0.1"
       }
     },
@@ -7911,6 +10038,7 @@
       "integrity": "sha512-xLuyKTnuQer3ke9hkU38SUYLiTmS078QOnoFavztmbt/pAJtNSkNtFgR0U//uCcmG0qnyxao+PDuatQav46F1w==",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "ccount": "1.0.3",
         "is-alphanumeric": "1.0.0",
         "is-decimal": "1.0.2",
@@ -7924,6 +10052,21 @@
         "state-toggle": "1.0.1",
         "stringify-entities": "1.3.2",
         "unherit": "1.1.1",
+=======
+        "ccount": "1.0.2",
+        "is-alphanumeric": "1.0.0",
+        "is-decimal": "1.0.1",
+        "is-whitespace-character": "1.0.1",
+        "longest-streak": "2.0.2",
+        "markdown-escapes": "1.0.1",
+        "markdown-table": "1.1.1",
+        "mdast-util-compact": "1.0.1",
+        "parse-entities": "1.1.1",
+        "repeat-string": "1.6.1",
+        "state-toggle": "1.0.0",
+        "stringify-entities": "1.3.1",
+        "unherit": "1.1.0",
+>>>>>>> .their
         "xtend": "4.0.1"
       }
     },
@@ -7967,7 +10110,11 @@
       "dev": true,
       "requires": {
         "aws-sign2": "0.7.0",
+<<<<<<< .our
         "aws4": "1.7.0",
+=======
+        "aws4": "1.6.0",
+>>>>>>> .their
         "caseless": "0.12.0",
         "combined-stream": "1.0.6",
         "extend": "3.0.1",
@@ -7982,9 +10129,15 @@
         "mime-types": "2.1.18",
         "oauth-sign": "0.8.2",
         "performance-now": "2.1.0",
+<<<<<<< .our
         "qs": "6.5.2",
         "safe-buffer": "5.1.2",
         "stringstream": "0.0.6",
+=======
+        "qs": "6.5.1",
+        "safe-buffer": "5.1.1",
+        "stringstream": "0.0.5",
+>>>>>>> .their
         "tough-cookie": "2.3.4",
         "tunnel-agent": "0.6.0",
         "uuid": "3.2.1"
@@ -8021,18 +10174,30 @@
       }
     },
     "resolve": {
+<<<<<<< .our
       "version": "1.7.1",
       "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.7.1.tgz",
       "integrity": "sha512-c7rwLofp8g1U+h1KNyHL/jicrKg1Ek4q+Lr33AL65uZTinUZHe30D5HlyN5V9NW0JX1D5dXQ4jqW5l7Sy/kGfw==",
+=======
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.6.0.tgz",
+      "integrity": "sha512-mw7JQNu5ExIkcw4LPih0owX/TZXjD/ZUF/ZQ/pDnkw3ZKhDcZZw5klmBlj6gVMwjQ3Pz5Jgu7F3d0jcDVuEWdw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "path-parse": "1.0.5"
       }
     },
     "resolve-from": {
+<<<<<<< .our
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
       "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
+=======
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-2.0.0.tgz",
+      "integrity": "sha1-lICrIOlP+h2egKgEx+oUdhGWa1c=",
+>>>>>>> .their
       "dev": true
     },
     "restore-cursor": {
@@ -8064,7 +10229,11 @@
     "rimraf": {
       "version": "2.6.2",
       "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz",
+<<<<<<< .our
       "integrity": "sha1-LtgVDSShbqhlHm1u8PR8QVjOejY=",
+=======
+      "integrity": "sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "glob": "7.1.2"
@@ -8073,7 +10242,11 @@
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -8087,12 +10260,21 @@
       }
     },
     "ripemd160": {
+<<<<<<< .our
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
       "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
       "dev": true,
       "requires": {
         "hash-base": "3.0.4",
+=======
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.1.tgz",
+      "integrity": "sha1-D0WEKVxTo2KK9+bXmsohzlfRxuc=",
+      "dev": true,
+      "requires": {
+        "hash-base": "2.0.2",
+>>>>>>> .their
         "inherits": "2.0.3"
       }
     },
@@ -8106,9 +10288,15 @@
       }
     },
     "run-parallel": {
+<<<<<<< .our
       "version": "1.1.9",
       "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.1.9.tgz",
       "integrity": "sha512-DEqnSRTDw/Tc3FXf49zedI638Z9onwUotBMiUFKmrO2sdFKIbXamXGQ3Axd4qgphxKB4kw/qP1w5kTxnfU1B9Q==",
+=======
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.1.8.tgz",
+      "integrity": "sha512-e5t1NVhr5VWmD9V9U4KjjSGkf5w6CcTPgw11A3CfIvkkQxlAKzX3usPUp1NUQTmpOOjU+f9QRICU3tMbKwn9ZQ==",
+>>>>>>> .their
       "dev": true
     },
     "rx-lite": {
@@ -8118,15 +10306,25 @@
       "dev": true
     },
     "safe-buffer": {
+<<<<<<< .our
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
       "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+=======
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz",
+      "integrity": "sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg==",
+>>>>>>> .their
       "dev": true
     },
     "sax": {
       "version": "1.2.4",
       "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
+<<<<<<< .our
       "integrity": "sha1-KBYjTiN4vdxOU1T6tcqold9xANk=",
+=======
+      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
+>>>>>>> .their
       "dev": true,
       "optional": true
     },
@@ -8145,6 +10343,7 @@
         "semver": "5.5.0"
       }
     },
+<<<<<<< .our
     "send": {
       "version": "0.16.2",
       "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz",
@@ -8294,6 +10493,8 @@
         }
       }
     },
+=======
+>>>>>>> .their
     "set-blocking": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
@@ -8306,12 +10507,15 @@
       "integrity": "sha1-SysbJ+uAip+NzEgaWOXlb1mfP2E=",
       "dev": true
     },
+<<<<<<< .our
     "setprototypeof": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.0.3.tgz",
       "integrity": "sha1-ZlZ+NwQ+608E2RvWWMDL77VbjgQ=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "sha.js": {
       "version": "2.4.11",
       "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
@@ -8319,7 +10523,11 @@
       "dev": true,
       "requires": {
         "inherits": "2.0.3",
+<<<<<<< .our
         "safe-buffer": "5.1.2"
+=======
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       }
     },
     "shasum": {
@@ -8373,7 +10581,11 @@
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -8475,7 +10687,11 @@
     "split": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/split/-/split-1.0.1.tgz",
+<<<<<<< .our
       "integrity": "sha1-YFvZvjA6pZ+zX5Ip++oN3snqB9k=",
+=======
+      "integrity": "sha512-mTyOoPbrivtXnwnIxZRFYRrPNtEFKlpB2fvjSnCQUiAA6qAZzqwna5envK4uk6OIeP17CsdF3rSBGYVBsU0Tkg==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "through": "2.3.8"
@@ -8484,7 +10700,11 @@
     "split2": {
       "version": "2.2.0",
       "resolved": "https://registry.npmjs.org/split2/-/split2-2.2.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-GGsldbz4PoW30YRldWI47k7kJJM=",
+=======
+      "integrity": "sha512-RAb22TG39LhI31MbreBgIuKiIKhVsawfTgEGqKHTK87aG+ul/PB8Sqoi3I7kVdRWiCfrKxK3uo4/YUkpNvhPbw==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "through2": "2.0.3"
@@ -8513,6 +10733,7 @@
       }
     },
     "standard": {
+<<<<<<< .our
       "version": "10.0.3",
       "resolved": "https://registry.npmjs.org/standard/-/standard-10.0.3.tgz",
       "integrity": "sha512-JURZ+85ExKLQULckDFijdX5WHzN6RC7fgiZNSV4jFQVo+3tPoQGHyBrGekye/yf0aOfb4210EM5qPNlc2cRh4w==",
@@ -8539,6 +10760,34 @@
         "get-stdin": "5.0.1",
         "minimist": "1.2.0",
         "pkg-conf": "2.1.0"
+=======
+      "version": "8.6.0",
+      "resolved": "https://registry.npmjs.org/standard/-/standard-8.6.0.tgz",
+      "integrity": "sha1-Y1Eyvnv7VnwpIQBfMPnjUOR1Kq0=",
+      "dev": true,
+      "requires": {
+        "eslint": "3.10.2",
+        "eslint-config-standard": "6.2.1",
+        "eslint-config-standard-jsx": "3.2.0",
+        "eslint-plugin-promise": "3.4.2",
+        "eslint-plugin-react": "6.7.1",
+        "eslint-plugin-standard": "2.0.1",
+        "standard-engine": "5.2.0"
+      }
+    },
+    "standard-engine": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/standard-engine/-/standard-engine-5.2.0.tgz",
+      "integrity": "sha1-QAZgrlrM6K/U22D/IhSpGQrXkKM=",
+      "dev": true,
+      "requires": {
+        "deglob": "2.1.0",
+        "find-root": "1.1.0",
+        "get-stdin": "5.0.1",
+        "home-or-tmp": "2.0.0",
+        "minimist": "1.2.0",
+        "pkg-config": "1.1.1"
+>>>>>>> .their
       },
       "dependencies": {
         "get-stdin": {
@@ -8552,7 +10801,11 @@
     "standard-markdown": {
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/standard-markdown/-/standard-markdown-4.0.2.tgz",
+<<<<<<< .our
       "integrity": "sha1-NaC1bLtX5JzuLXQ9ocmERMNK1Lg=",
+=======
+      "integrity": "sha512-h+WTmoGN0qmse8I1VX8VD6V5JeVLXZOPQltvxQP9FfSpSl6RmKYMLTUQ2j/QhdmsdxQKDqulZF/Bf8oEnttIQA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "async": "2.6.0",
@@ -8579,6 +10832,7 @@
           "integrity": "sha512-xAfGg1/NTLBBKlHFmnd7PlmUW9KhVQIUuSrYem9xzFUZy13ScvtyGGejaae9iAVRiRq9+Cx7DPFaAAhCpyxyPw==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "lodash": "4.17.10"
           }
         },
@@ -8586,11 +10840,24 @@
           "version": "2.4.1",
           "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
           "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+=======
+            "lodash": "4.17.5"
+          }
+        },
+        "chalk": {
+          "version": "2.3.2",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.2.tgz",
+          "integrity": "sha512-ZM4j2/ld/YZDc3Ma8PgN7gyAk+kHMMMyzLNryCPGhWrsfAuDVeuid5bpRFTDgMH9JBK2lA4dyyAkkZYF/WcqDQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "ansi-styles": "3.2.1",
             "escape-string-regexp": "1.0.5",
+<<<<<<< .our
             "supports-color": "5.4.0"
+=======
+            "supports-color": "5.3.0"
+>>>>>>> .their
           }
         },
         "cli-cursor": {
@@ -8603,15 +10870,165 @@
           }
         },
         "cli-spinners": {
+<<<<<<< .our
           "version": "1.3.1",
           "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-1.3.1.tgz",
           "integrity": "sha512-1QL4544moEsDVH9T/l6Cemov/37iv1RtoKf7NJ04A60+4MREXNfx/QvavbH6QoGdsD4N4Mwy49cmaINR/o2mdg==",
+=======
+          "version": "1.3.0",
+          "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-1.3.0.tgz",
+          "integrity": "sha512-ahr3q/EW26uLN3vqBaDQS4g1rUwKMbVSTRlyfyoY06VwwSJmMYRxhT3FTAiTz9Yam6OOb1e0ldwvbsnuThvuzA==",
+          "dev": true
+        },
+        "doctrine": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
+          "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
+          "dev": true,
+          "requires": {
+            "esutils": "2.0.2"
+          }
+        },
+        "eslint": {
+          "version": "3.19.0",
+          "resolved": "https://registry.npmjs.org/eslint/-/eslint-3.19.0.tgz",
+          "integrity": "sha1-yPxiAcf0DdCJQbh8CFdnOGpnmsw=",
+          "dev": true,
+          "requires": {
+            "babel-code-frame": "6.26.0",
+            "chalk": "1.1.3",
+            "concat-stream": "1.5.2",
+            "debug": "2.6.9",
+            "doctrine": "2.1.0",
+            "escope": "3.6.0",
+            "espree": "3.5.4",
+            "esquery": "1.0.1",
+            "estraverse": "4.2.0",
+            "esutils": "2.0.2",
+            "file-entry-cache": "2.0.0",
+            "glob": "7.1.2",
+            "globals": "9.18.0",
+            "ignore": "3.3.7",
+            "imurmurhash": "0.1.4",
+            "inquirer": "0.12.0",
+            "is-my-json-valid": "2.17.2",
+            "is-resolvable": "1.1.0",
+            "js-yaml": "3.11.0",
+            "json-stable-stringify": "1.0.1",
+            "levn": "0.3.0",
+            "lodash": "4.17.5",
+            "mkdirp": "0.5.1",
+            "natural-compare": "1.4.0",
+            "optionator": "0.8.2",
+            "path-is-inside": "1.0.2",
+            "pluralize": "1.2.1",
+            "progress": "1.1.8",
+            "require-uncached": "1.0.3",
+            "shelljs": "0.7.8",
+            "strip-bom": "3.0.0",
+            "strip-json-comments": "2.0.1",
+            "table": "3.8.3",
+            "text-table": "0.2.0",
+            "user-home": "2.0.0"
+          },
+          "dependencies": {
+            "ansi-styles": {
+              "version": "2.2.1",
+              "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+              "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+              "dev": true
+            },
+            "chalk": {
+              "version": "1.1.3",
+              "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+              "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+              "dev": true,
+              "requires": {
+                "ansi-styles": "2.2.1",
+                "escape-string-regexp": "1.0.5",
+                "has-ansi": "2.0.0",
+                "strip-ansi": "3.0.1",
+                "supports-color": "2.0.0"
+              }
+            },
+            "supports-color": {
+              "version": "2.0.0",
+              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+              "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+              "dev": true
+            }
+          }
+        },
+        "eslint-config-standard": {
+          "version": "10.2.1",
+          "resolved": "https://registry.npmjs.org/eslint-config-standard/-/eslint-config-standard-10.2.1.tgz",
+          "integrity": "sha1-wGHk0GbzedwXzVYsZOgZtN1FRZE=",
+          "dev": true
+        },
+        "eslint-config-standard-jsx": {
+          "version": "4.0.2",
+          "resolved": "https://registry.npmjs.org/eslint-config-standard-jsx/-/eslint-config-standard-jsx-4.0.2.tgz",
+          "integrity": "sha512-F8fRh2WFnTek7dZH9ZaE0PCBwdVGkwVWZmizla/DDNOmg7Tx6B/IlK5+oYpiX29jpu73LszeJj5i1axEZv6VMw==",
+          "dev": true
+        },
+        "eslint-plugin-promise": {
+          "version": "3.5.0",
+          "resolved": "https://registry.npmjs.org/eslint-plugin-promise/-/eslint-plugin-promise-3.5.0.tgz",
+          "integrity": "sha1-ePu2/+BHIBYnVp6FpsU3OvKmj8o=",
+          "dev": true
+        },
+        "eslint-plugin-react": {
+          "version": "6.10.3",
+          "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-6.10.3.tgz",
+          "integrity": "sha1-xUNb6wZ3ThLH2y9qut3L+QDNP3g=",
+          "dev": true,
+          "requires": {
+            "array.prototype.find": "2.0.4",
+            "doctrine": "1.5.0",
+            "has": "1.0.1",
+            "jsx-ast-utils": "1.4.1",
+            "object.assign": "4.1.0"
+          },
+          "dependencies": {
+            "doctrine": {
+              "version": "1.5.0",
+              "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",
+              "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",
+              "dev": true,
+              "requires": {
+                "esutils": "2.0.2",
+                "isarray": "1.0.0"
+              }
+            }
+          }
+        },
+        "eslint-plugin-standard": {
+          "version": "3.0.1",
+          "resolved": "https://registry.npmjs.org/eslint-plugin-standard/-/eslint-plugin-standard-3.0.1.tgz",
+          "integrity": "sha1-NNDJFbRe3G8BA5PH7vOCOwhWXPI=",
+          "dev": true
+        },
+        "estraverse": {
+          "version": "4.2.0",
+          "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
+          "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
+          "dev": true
+        },
+        "get-stdin": {
+          "version": "5.0.1",
+          "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
+          "integrity": "sha1-Ei4WFZHiH/TFJTAwVpPyDmOTo5g=",
+>>>>>>> .their
           "dev": true
         },
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -8641,13 +11058,35 @@
           "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
           "dev": true
         },
+<<<<<<< .our
+=======
+        "isarray": {
+          "version": "1.0.0",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
+          "dev": true
+        },
+        "json-stable-stringify": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
+          "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
+          "dev": true,
+          "requires": {
+            "jsonify": "0.0.0"
+          }
+        },
+>>>>>>> .their
         "log-symbols": {
           "version": "2.2.0",
           "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz",
           "integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "chalk": "2.4.1"
+=======
+            "chalk": "2.3.2"
+>>>>>>> .their
           }
         },
         "onetime": {
@@ -8665,12 +11104,27 @@
           "integrity": "sha512-iMK1DOQxzzh2MBlVsU42G80mnrvUhqsMh74phHtDlrcTZPK0pH6o7l7DRshK+0YsxDyEuaOkziVdvM3T0QTzpw==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "chalk": "2.4.1",
             "cli-cursor": "2.1.0",
             "cli-spinners": "1.3.1",
             "log-symbols": "2.2.0"
           }
         },
+=======
+            "chalk": "2.3.2",
+            "cli-cursor": "2.1.0",
+            "cli-spinners": "1.3.0",
+            "log-symbols": "2.2.0"
+          }
+        },
+        "progress": {
+          "version": "1.1.8",
+          "resolved": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
+          "integrity": "sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=",
+          "dev": true
+        },
+>>>>>>> .their
         "restore-cursor": {
           "version": "2.0.0",
           "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
@@ -8681,10 +11135,52 @@
             "signal-exit": "3.0.2"
           }
         },
+<<<<<<< .our
         "supports-color": {
           "version": "5.4.0",
           "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.4.0.tgz",
           "integrity": "sha512-zjaXglF5nnWpsq470jSv6P9DwPvgLkuapYmfDm3JWOm0vkNTVF2tI4UrN2r6jH1qM/uc/WtxYY1hYoA2dOKj5w==",
+=======
+        "standard": {
+          "version": "10.0.3",
+          "resolved": "https://registry.npmjs.org/standard/-/standard-10.0.3.tgz",
+          "integrity": "sha512-JURZ+85ExKLQULckDFijdX5WHzN6RC7fgiZNSV4jFQVo+3tPoQGHyBrGekye/yf0aOfb4210EM5qPNlc2cRh4w==",
+          "dev": true,
+          "requires": {
+            "eslint": "3.19.0",
+            "eslint-config-standard": "10.2.1",
+            "eslint-config-standard-jsx": "4.0.2",
+            "eslint-plugin-import": "2.2.0",
+            "eslint-plugin-node": "4.2.3",
+            "eslint-plugin-promise": "3.5.0",
+            "eslint-plugin-react": "6.10.3",
+            "eslint-plugin-standard": "3.0.1",
+            "standard-engine": "7.0.0"
+          }
+        },
+        "standard-engine": {
+          "version": "7.0.0",
+          "resolved": "https://registry.npmjs.org/standard-engine/-/standard-engine-7.0.0.tgz",
+          "integrity": "sha1-67d7nI/CyBZf+jU72Rug3/Qa9pA=",
+          "dev": true,
+          "requires": {
+            "deglob": "2.1.0",
+            "get-stdin": "5.0.1",
+            "minimist": "1.2.0",
+            "pkg-conf": "2.1.0"
+          }
+        },
+        "strip-bom": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
+          "dev": true
+        },
+        "supports-color": {
+          "version": "5.3.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.3.0.tgz",
+          "integrity": "sha512-0aP01LLIskjKs3lq52EC0aGBAJhLq7B2Rd8HC/DR/PtNNpcLilNmHC12O+hu0usQpo7wtHNRqtrhBwtDb0+dNg==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "has-flag": "3.0.0"
@@ -8693,6 +11189,7 @@
       }
     },
     "state-toggle": {
+<<<<<<< .our
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/state-toggle/-/state-toggle-1.0.1.tgz",
       "integrity": "sha512-Qe8QntFrrpWTnHwvwj2FZTgv+PKIsp0B9VxLzLLbSpPXWOgRgc5LVj/aTiSfK1RqIeF9jeC1UeOH8Q8y60A7og==",
@@ -8702,6 +11199,11 @@
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
       "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=",
+=======
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/state-toggle/-/state-toggle-1.0.0.tgz",
+      "integrity": "sha1-0g+aYWu08MO5i5GSLSW2QKorxCU=",
+>>>>>>> .their
       "dev": true
     },
     "stream-browserify": {
@@ -8730,7 +11232,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -8741,7 +11247,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -8772,7 +11282,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -8783,7 +11297,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -8795,9 +11313,15 @@
       "dev": true
     },
     "stream-http": {
+<<<<<<< .our
       "version": "2.8.2",
       "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.2.tgz",
       "integrity": "sha512-QllfrBhqF1DPcz46WxKTs6Mz1Bpc+8Qm6vbqOpVav5odAXwbyzwnEczoWqtxrsmlO+cJqtPrp/8gWKWjaKLLlA==",
+=======
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.1.tgz",
+      "integrity": "sha512-cQ0jo17BLca2r0GfRdZKYAGLU6JRoIWxqSOakUMuKOT6MOK7AAlE856L33QuDmAy/eeOrhLee3dZKX0Uadu93A==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "builtin-status-codes": "3.0.0",
@@ -8823,7 +11347,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -8834,7 +11362,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -8871,7 +11403,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -8882,7 +11418,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -8911,6 +11451,7 @@
       "dev": true
     },
     "stringify-entities": {
+<<<<<<< .our
       "version": "1.3.2",
       "resolved": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.3.2.tgz",
       "integrity": "sha512-nrBAQClJAPN2p+uGCVJRPIPakKeKWZ9GtBCmormE7pWOSlHat7+x5A8gx85M7HM5Dt0BP3pP5RhVW77WdbJJ3A==",
@@ -8926,6 +11467,23 @@
       "version": "0.0.6",
       "resolved": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.6.tgz",
       "integrity": "sha512-87GEBAkegbBcweToUrdzf3eLhWNg06FJTebl4BVJz/JgWy8CvEr9dRtX5qWphiynMSQlxxi+QqN0z5T32SLlhA==",
+=======
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.3.1.tgz",
+      "integrity": "sha1-sVDsLXKsTBtfMktR+2soyc3/BYw=",
+      "dev": true,
+      "requires": {
+        "character-entities-html4": "1.1.1",
+        "character-entities-legacy": "1.1.1",
+        "is-alphanumerical": "1.0.1",
+        "is-hexadecimal": "1.0.1"
+      }
+    },
+    "stringstream": {
+      "version": "0.0.5",
+      "resolved": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
+      "integrity": "sha1-TkhM1N5aC7vuGORjB3EKioFiGHg=",
+>>>>>>> .their
       "dev": true
     },
     "strip-ansi": {
@@ -9016,7 +11574,11 @@
         "ajv": "4.11.8",
         "ajv-keywords": "1.5.1",
         "chalk": "1.1.3",
+<<<<<<< .our
         "lodash": "4.17.10",
+=======
+        "lodash": "4.17.5",
+>>>>>>> .their
         "slice-ansi": "0.0.4",
         "string-width": "2.1.1"
       },
@@ -9055,7 +11617,11 @@
         "string-width": {
           "version": "2.1.1",
           "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+<<<<<<< .our
           "integrity": "sha1-q5Pyeo3BPSjKyBXEYhQ6bZASrp4=",
+=======
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "is-fullwidth-code-point": "2.0.0",
@@ -9074,30 +11640,53 @@
       }
     },
     "tar": {
+<<<<<<< .our
       "version": "4.4.2",
       "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.2.tgz",
       "integrity": "sha512-BfkE9CciGGgDsATqkikUHrQrraBCO+ke/1f6SFAEMnxyyfN9lxC+nW1NFWMpqH865DhHIy9vQi682gk1X7friw==",
+=======
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.1.tgz",
+      "integrity": "sha512-O+v1r9yN4tOsvl90p5HAP4AEqbYhx4036AGMm075fH9F8Qwi3oJ+v4u50FkT/KkvywNGtwkk0zRI+8eYm1X/xg==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "chownr": "1.0.1",
         "fs-minipass": "1.2.5",
+<<<<<<< .our
         "minipass": "2.3.0",
         "minizlib": "1.1.0",
         "mkdirp": "0.5.1",
         "safe-buffer": "5.1.2",
+=======
+        "minipass": "2.2.4",
+        "minizlib": "1.1.0",
+        "mkdirp": "0.5.1",
+        "safe-buffer": "5.1.1",
+>>>>>>> .their
         "yallist": "3.0.2"
       }
     },
     "tar-fs": {
+<<<<<<< .our
       "version": "1.16.2",
       "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-1.16.2.tgz",
       "integrity": "sha512-LdknWjPEiZC1nOBwhv0JBzfJBGPJar08dZg2rwZe0ZTLQoRGEzgrl7vF3qUEkCHpI/wN9e7RyCuDhMsJUCLPPQ==",
+=======
+      "version": "1.16.0",
+      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-1.16.0.tgz",
+      "integrity": "sha512-I9rb6v7mjWLtOfCau9eH5L7sLJyU2BnxtEZRQ5Mt+eRKmf1F0ohXmT/Jc3fr52kDvjJ/HV5MH3soQfPL5bQ0Yg==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "chownr": "1.0.1",
         "mkdirp": "0.5.1",
         "pump": "1.0.3",
+<<<<<<< .our
         "tar-stream": "1.6.0"
+=======
+        "tar-stream": "1.5.5"
+>>>>>>> .their
       },
       "dependencies": {
         "pump": {
@@ -9113,6 +11702,7 @@
       }
     },
     "tar-stream": {
+<<<<<<< .our
       "version": "1.6.0",
       "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-1.6.0.tgz",
       "integrity": "sha512-lh2iAPG/BHNmN6WB9Ybdynk9rEJ5GD/dy4zscHmVlwa1dq2tpE+BH78i5vjYwYVWEaOXGBjzxr89aVACF17Cpw==",
@@ -9124,6 +11714,16 @@
         "fs-constants": "1.0.0",
         "readable-stream": "2.3.6",
         "to-buffer": "1.1.1",
+=======
+      "version": "1.5.5",
+      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-1.5.5.tgz",
+      "integrity": "sha512-mQdgLPc/Vjfr3VWqWbfxW8yQNiJCbAZ+Gf6GDu1Cy0bdb33ofyiNGBtAY96jHFhDuivCwgW1H9DgTON+INiXgg==",
+      "dev": true,
+      "requires": {
+        "bl": "1.2.2",
+        "end-of-stream": "1.4.1",
+        "readable-stream": "2.3.6",
+>>>>>>> .their
         "xtend": "4.0.1"
       },
       "dependencies": {
@@ -9143,7 +11743,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -9154,7 +11758,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -9207,7 +11815,11 @@
     "text-extensions": {
       "version": "1.7.0",
       "resolved": "https://registry.npmjs.org/text-extensions/-/text-extensions-1.7.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-+qq6JiXtdG1WiiPk0KrNm/CKizk=",
+=======
+      "integrity": "sha512-AKXZeDq230UaSzaO5s3qQUZOaC7iKbzq0jOFL614R7d9R593HLqAOL0cYoqLdkNrjBSOdmoQI06yigq1TSBXAg==",
+>>>>>>> .their
       "dev": true
     },
     "text-table": {
@@ -9254,7 +11866,11 @@
             "inherits": "2.0.3",
             "isarray": "1.0.0",
             "process-nextick-args": "2.0.0",
+<<<<<<< .our
             "safe-buffer": "5.1.2",
+=======
+            "safe-buffer": "5.1.1",
+>>>>>>> .their
             "string_decoder": "1.1.1",
             "util-deprecate": "1.0.2"
           }
@@ -9265,7 +11881,11 @@
           "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
           "dev": true,
           "requires": {
+<<<<<<< .our
             "safe-buffer": "5.1.2"
+=======
+            "safe-buffer": "5.1.1"
+>>>>>>> .their
           }
         }
       }
@@ -9300,12 +11920,15 @@
       "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
       "dev": true
     },
+<<<<<<< .our
     "to-buffer": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/to-buffer/-/to-buffer-1.1.1.tgz",
       "integrity": "sha512-lx9B5iv7msuFYE3dytT+KE5tap+rNYw+K4jVkb9R/asAb+pbBSM17jtunHplhBe6RRJdZx3Pn2Jph24O32mOVg==",
       "dev": true
     },
+=======
+>>>>>>> .their
     "to-vfile": {
       "version": "2.2.0",
       "resolved": "https://registry.npmjs.org/to-vfile/-/to-vfile-2.2.0.tgz",
@@ -9378,6 +12001,7 @@
       "dev": true
     },
     "trim-trailing-lines": {
+<<<<<<< .our
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/trim-trailing-lines/-/trim-trailing-lines-1.1.1.tgz",
       "integrity": "sha512-bWLv9BbWbbd7mlqqs2oQYnLD/U/ZqeJeJwbO0FG2zA1aTq+HTvxfHNKFa/HGCVyJpDiioUYaBhfiT6rgk+l4mg==",
@@ -9387,6 +12011,17 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/trough/-/trough-1.0.2.tgz",
       "integrity": "sha512-FHkoUZvG6Egrv9XZAyYGKEyb1JMsFphgPjoczkZC2y6W93U1jswcVURB8MUvtsahEPEVACyxD47JAL63vF4JsQ==",
+=======
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/trim-trailing-lines/-/trim-trailing-lines-1.1.0.tgz",
+      "integrity": "sha1-eu+7eAjfnWafbaLkOMrIxGradoQ=",
+      "dev": true
+    },
+    "trough": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/trough/-/trough-1.0.1.tgz",
+      "integrity": "sha1-qf2LA5Swro//guBjOgo2zK1bX4Y=",
+>>>>>>> .their
       "dev": true
     },
     "tslint": {
@@ -9396,20 +12031,34 @@
       "dev": true,
       "requires": {
         "babel-code-frame": "6.26.0",
+<<<<<<< .our
         "colors": "1.2.5",
+=======
+        "colors": "1.2.1",
+>>>>>>> .their
         "diff": "3.5.0",
         "findup-sync": "0.3.0",
         "glob": "7.1.2",
         "optimist": "0.6.1",
+<<<<<<< .our
         "resolve": "1.7.1",
         "tsutils": "1.9.1",
         "update-notifier": "2.5.0"
+=======
+        "resolve": "1.6.0",
+        "tsutils": "1.9.1",
+        "update-notifier": "2.4.0"
+>>>>>>> .their
       },
       "dependencies": {
         "glob": {
           "version": "7.1.2",
           "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+<<<<<<< .our
           "integrity": "sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=",
+=======
+          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "fs.realpath": "1.0.0",
@@ -9456,7 +12105,11 @@
       "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
       "dev": true,
       "requires": {
+<<<<<<< .our
         "safe-buffer": "5.1.2"
+=======
+        "safe-buffer": "5.1.1"
+>>>>>>> .their
       }
     },
     "tweetnacl": {
@@ -9482,9 +12135,15 @@
       "dev": true
     },
     "typescript": {
+<<<<<<< .our
       "version": "2.9.2",
       "resolved": "https://registry.npmjs.org/typescript/-/typescript-2.9.2.tgz",
       "integrity": "sha512-Gr4p6nFNaoufRIY4NMdpQRNmgxVIGMs4Fcu/ujdYk3nAZqk7supzBE9idmvfZIlH/Cuj//dvi+019qEue9lV0w==",
+=======
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-2.8.1.tgz",
+      "integrity": "sha512-Ao/f6d/4EPLq0YwzsQz8iXflezpTkQzqAyenTiw4kCUGr1uPiFLC3+fZ+gMZz6eeI/qdRUqvC+HxIJzUAzEFdg==",
+>>>>>>> .their
       "dev": true
     },
     "uc.micro": {
@@ -9534,9 +12193,15 @@
       "dev": true
     },
     "unherit": {
+<<<<<<< .our
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/unherit/-/unherit-1.1.1.tgz",
       "integrity": "sha512-+XZuV691Cn4zHsK0vkKYwBEwB74T3IZIcxrgn2E4rKwTfFyI1zCh7X7grwh9Re08fdPlarIdyWgI8aVB3F5A5g==",
+=======
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/unherit/-/unherit-1.1.0.tgz",
+      "integrity": "sha1-a5qu379z3xdWrZ4xbdmBiFhAzX0=",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "inherits": "2.0.3",
@@ -9544,6 +12209,7 @@
       }
     },
     "unified": {
+<<<<<<< .our
       "version": "6.2.0",
       "resolved": "https://registry.npmjs.org/unified/-/unified-6.2.0.tgz",
       "integrity": "sha512-1k+KPhlVtqmG99RaTbAv/usu85fcSRu3wY8X+vnsEhIxNP5VbVIDiXnLqyKIG+UMdyTg0ZX9EI6k2AfjJkHPtA==",
@@ -9554,6 +12220,19 @@
         "is-plain-obj": "1.1.0",
         "trough": "1.0.2",
         "vfile": "2.3.0",
+=======
+      "version": "6.1.6",
+      "resolved": "https://registry.npmjs.org/unified/-/unified-6.1.6.tgz",
+      "integrity": "sha512-pW2f82bCIo2ifuIGYcV12fL96kMMYgw7JKVEgh7ODlrM9rj6vXSY3BV+H6lCcv1ksxynFf582hwWLnA1qRFy4w==",
+      "dev": true,
+      "requires": {
+        "bail": "1.0.2",
+        "extend": "3.0.1",
+        "is-plain-obj": "1.1.0",
+        "trough": "1.0.1",
+        "vfile": "2.3.0",
+        "x-is-function": "1.0.4",
+>>>>>>> .their
         "x-is-string": "0.1.0"
       }
     },
@@ -9564,7 +12243,11 @@
       "dev": true,
       "requires": {
         "camelcase": "4.1.0",
+<<<<<<< .our
         "chalk": "2.4.1",
+=======
+        "chalk": "2.3.2",
+>>>>>>> .their
         "chokidar": "1.7.0",
         "minimist": "1.2.0",
         "text-table": "0.2.0",
@@ -9587,14 +12270,24 @@
           "dev": true
         },
         "chalk": {
+<<<<<<< .our
           "version": "2.4.1",
           "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
           "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+=======
+          "version": "2.3.2",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.2.tgz",
+          "integrity": "sha512-ZM4j2/ld/YZDc3Ma8PgN7gyAk+kHMMMyzLNryCPGhWrsfAuDVeuid5bpRFTDgMH9JBK2lA4dyyAkkZYF/WcqDQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "ansi-styles": "3.2.1",
             "escape-string-regexp": "1.0.5",
+<<<<<<< .our
             "supports-color": "5.4.0"
+=======
+            "supports-color": "5.3.0"
+>>>>>>> .their
           }
         },
         "has-flag": {
@@ -9604,9 +12297,15 @@
           "dev": true
         },
         "supports-color": {
+<<<<<<< .our
           "version": "5.4.0",
           "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.4.0.tgz",
           "integrity": "sha512-zjaXglF5nnWpsq470jSv6P9DwPvgLkuapYmfDm3JWOm0vkNTVF2tI4UrN2r6jH1qM/uc/WtxYY1hYoA2dOKj5w==",
+=======
+          "version": "5.3.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.3.0.tgz",
+          "integrity": "sha512-0aP01LLIskjKs3lq52EC0aGBAJhLq7B2Rd8HC/DR/PtNNpcLilNmHC12O+hu0usQpo7wtHNRqtrhBwtDb0+dNg==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "has-flag": "3.0.0"
@@ -9622,20 +12321,36 @@
       "requires": {
         "concat-stream": "1.5.2",
         "debug": "2.6.9",
+<<<<<<< .our
         "fault": "1.0.2",
         "fn-name": "2.0.1",
         "glob": "7.1.2",
         "ignore": "3.3.8",
+=======
+        "fault": "1.0.1",
+        "fn-name": "2.0.1",
+        "glob": "7.1.2",
+        "ignore": "3.3.7",
+>>>>>>> .their
         "is-empty": "1.2.0",
         "is-hidden": "1.1.1",
         "is-object": "1.0.1",
         "js-yaml": "3.11.0",
+<<<<<<< .our
         "load-plugin": "2.2.2",
         "parse-json": "2.2.0",
         "to-vfile": "2.2.0",
         "trough": "1.0.2",
         "vfile-reporter": "4.0.0",
         "vfile-statistics": "1.1.1",
+=======
+        "load-plugin": "2.2.1",
+        "parse-json": "2.2.0",
+        "to-vfile": "2.2.0",
+        "trough": "1.0.1",
+        "vfile-reporter": "4.0.0",
+        "vfile-statistics": "1.1.0",
+>>>>>>> .their
         "x-is-function": "1.0.4",
         "x-is-string": "0.1.0",
         "xtend": "4.0.1"
@@ -9667,6 +12382,7 @@
       }
     },
     "unified-message-control": {
+<<<<<<< .our
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/unified-message-control/-/unified-message-control-1.0.4.tgz",
       "integrity": "sha512-e1dEtN4Z/TvLn/qHm+xeZpzqhJTtfZusFErk336kkZVpqrJYiV9ptxq+SbRPFMlN0OkjDYHmVJ929KYjsMTo3g==",
@@ -9675,6 +12391,16 @@
         "trim": "0.0.1",
         "unist-util-visit": "1.3.1",
         "vfile-location": "2.0.3"
+=======
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/unified-message-control/-/unified-message-control-1.0.3.tgz",
+      "integrity": "sha512-zXx8LVgecdkzIMHj5c+aV3GQqJ8uxIhKi2yCccW5mhNQ5Ettb8GMA5VKvurk9Xg382/+EmUlTWW/NhBBgwmG+A==",
+      "dev": true,
+      "requires": {
+        "trim": "0.0.1",
+        "unist-util-visit": "1.3.0",
+        "vfile-location": "2.0.2"
+>>>>>>> .their
       }
     },
     "uniq": {
@@ -9693,6 +12419,7 @@
       }
     },
     "unist-util-generated": {
+<<<<<<< .our
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/unist-util-generated/-/unist-util-generated-1.1.2.tgz",
       "integrity": "sha512-1HcwiEO62dr0XWGT+abVK4f0aAm8Ik8N08c5nAYVmuSxfvpA9rCcNyX/le8xXj1pJK5nBrGlZefeWB6bN8Pstw==",
@@ -9755,6 +12482,58 @@
       "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=",
       "dev": true
     },
+=======
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/unist-util-generated/-/unist-util-generated-1.1.1.tgz",
+      "integrity": "sha1-mfFseJWayFTe58YVwpGSTIv03n8=",
+      "dev": true
+    },
+    "unist-util-is": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-2.1.1.tgz",
+      "integrity": "sha1-DDEmKeP5YMZukx6BLT2A53AQlHs=",
+      "dev": true
+    },
+    "unist-util-modify-children": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/unist-util-modify-children/-/unist-util-modify-children-1.1.1.tgz",
+      "integrity": "sha1-ZtfmpEnm9nIguXarPLi166w55R0=",
+      "dev": true,
+      "requires": {
+        "array-iterate": "1.1.1"
+      }
+    },
+    "unist-util-position": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/unist-util-position/-/unist-util-position-3.0.0.tgz",
+      "integrity": "sha1-5uHgPu64HF4a/lU+jUrfvXwNj4I=",
+      "dev": true
+    },
+    "unist-util-remove-position": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/unist-util-remove-position/-/unist-util-remove-position-1.1.1.tgz",
+      "integrity": "sha1-WoXBVV/BugwQG4ZwfRXlD6TIcbs=",
+      "dev": true,
+      "requires": {
+        "unist-util-visit": "1.3.0"
+      }
+    },
+    "unist-util-stringify-position": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-1.1.1.tgz",
+      "integrity": "sha1-PMvcU2ee7W7PN3fdf14yKcG2qjw=",
+      "dev": true
+    },
+    "unist-util-visit": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-1.3.0.tgz",
+      "integrity": "sha512-9ntYcxPFtl44gnwXrQKZ5bMqXMY0ZHzUpqMFiU4zcc8mmf/jzYm8GhYgezuUlX4cJIM1zIDYaO6fG/fI+L6iiQ==",
+      "dev": true,
+      "requires": {
+        "unist-util-is": "2.1.1"
+      }
+    },
+>>>>>>> .their
     "untildify": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/untildify/-/untildify-2.1.0.tgz",
@@ -9770,6 +12549,7 @@
       "integrity": "sha1-0vD3N9FrBhXnKmk17QQhRXLVb5c=",
       "dev": true
     },
+<<<<<<< .our
     "update-check": {
       "version": "1.5.1",
       "resolved": "https://registry.npmjs.org/update-check/-/update-check-1.5.1.tgz",
@@ -9788,6 +12568,16 @@
       "requires": {
         "boxen": "1.3.0",
         "chalk": "2.4.1",
+=======
+    "update-notifier": {
+      "version": "2.4.0",
+      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-2.4.0.tgz",
+      "integrity": "sha1-+bTHAPv9TsEsgRWHJYd31WPYyGY=",
+      "dev": true,
+      "requires": {
+        "boxen": "1.3.0",
+        "chalk": "2.3.2",
+>>>>>>> .their
         "configstore": "3.1.2",
         "import-lazy": "2.1.0",
         "is-ci": "1.1.0",
@@ -9808,14 +12598,24 @@
           }
         },
         "chalk": {
+<<<<<<< .our
           "version": "2.4.1",
           "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
           "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+=======
+          "version": "2.3.2",
+          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.2.tgz",
+          "integrity": "sha512-ZM4j2/ld/YZDc3Ma8PgN7gyAk+kHMMMyzLNryCPGhWrsfAuDVeuid5bpRFTDgMH9JBK2lA4dyyAkkZYF/WcqDQ==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "ansi-styles": "3.2.1",
             "escape-string-regexp": "1.0.5",
+<<<<<<< .our
             "supports-color": "5.4.0"
+=======
+            "supports-color": "5.3.0"
+>>>>>>> .their
           }
         },
         "has-flag": {
@@ -9825,9 +12625,15 @@
           "dev": true
         },
         "supports-color": {
+<<<<<<< .our
           "version": "5.4.0",
           "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.4.0.tgz",
           "integrity": "sha512-zjaXglF5nnWpsq470jSv6P9DwPvgLkuapYmfDm3JWOm0vkNTVF2tI4UrN2r6jH1qM/uc/WtxYY1hYoA2dOKj5w==",
+=======
+          "version": "5.3.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.3.0.tgz",
+          "integrity": "sha512-0aP01LLIskjKs3lq52EC0aGBAJhLq7B2Rd8HC/DR/PtNNpcLilNmHC12O+hu0usQpo7wtHNRqtrhBwtDb0+dNg==",
+>>>>>>> .their
           "dev": true,
           "requires": {
             "has-flag": "3.0.0"
@@ -9910,12 +12716,15 @@
         "spdx-expression-parse": "3.0.0"
       }
     },
+<<<<<<< .our
     "vary": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
       "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=",
       "dev": true
     },
+=======
+>>>>>>> .their
     "verror": {
       "version": "1.10.0",
       "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
@@ -9935,6 +12744,7 @@
       "requires": {
         "is-buffer": "1.1.6",
         "replace-ext": "1.0.0",
+<<<<<<< .our
         "unist-util-stringify-position": "1.1.2",
         "vfile-message": "1.0.1"
       }
@@ -9952,6 +12762,25 @@
       "dev": true,
       "requires": {
         "unist-util-stringify-position": "1.1.2"
+=======
+        "unist-util-stringify-position": "1.1.1",
+        "vfile-message": "1.0.0"
+      }
+    },
+    "vfile-location": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/vfile-location/-/vfile-location-2.0.2.tgz",
+      "integrity": "sha1-02dcWch3SY5JK0dW/2Xkrxp1IlU=",
+      "dev": true
+    },
+    "vfile-message": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-1.0.0.tgz",
+      "integrity": "sha512-HPREhzTOB/sNDc9/Mxf8w0FmHnThg5CRSJdR9VRFkD2riqYWs+fuXlj5z8mIpv2LrD7uU41+oPWFOL4Mjlf+dw==",
+      "dev": true,
+      "requires": {
+        "unist-util-stringify-position": "1.1.1"
+>>>>>>> .their
       }
     },
     "vfile-reporter": {
@@ -9963,8 +12792,13 @@
         "repeat-string": "1.6.1",
         "string-width": "1.0.2",
         "supports-color": "4.5.0",
+<<<<<<< .our
         "unist-util-stringify-position": "1.1.2",
         "vfile-statistics": "1.1.1"
+=======
+        "unist-util-stringify-position": "1.1.1",
+        "vfile-statistics": "1.1.0"
+>>>>>>> .their
       },
       "dependencies": {
         "has-flag": {
@@ -9985,9 +12819,15 @@
       }
     },
     "vfile-statistics": {
+<<<<<<< .our
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/vfile-statistics/-/vfile-statistics-1.1.1.tgz",
       "integrity": "sha512-dxUM6IYvGChHuwMT3dseyU5BHprNRXzAV0OHx1A769lVGsTiT50kU7BbpRFV+IE6oWmU+PwHdsTKfXhnDIRIgQ==",
+=======
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/vfile-statistics/-/vfile-statistics-1.1.0.tgz",
+      "integrity": "sha1-AhBMYP3u0dEbH3OtZTMLdjSz2JU=",
+>>>>>>> .their
       "dev": true
     },
     "vm-browserify": {
@@ -10002,7 +12842,11 @@
     "walk-sync": {
       "version": "0.3.2",
       "resolved": "https://registry.npmjs.org/walk-sync/-/walk-sync-0.3.2.tgz",
+<<<<<<< .our
       "integrity": "sha1-SCcoCvxC0OA1NnxKTjHurA0Tb3U=",
+=======
+      "integrity": "sha512-FMB5VqpLqOCcqrzA9okZFc0wq0Qbmdm396qJxvQZhDpyu0W95G9JCmp74tx7iyYnyOcBtUuKJsgIKAqjozvmmQ==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "ensure-posix-path": "1.0.2",
@@ -10029,7 +12873,11 @@
     "which": {
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/which/-/which-1.3.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-/wS9/AEO5UfXgL7DjhrBwnd9JTo=",
+=======
+      "integrity": "sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "isexe": "2.0.0"
@@ -10142,7 +12990,11 @@
     "write-file-atomic": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.3.0.tgz",
+<<<<<<< .our
       "integrity": "sha1-H/YVdcLipOjlENb6TiQ8zhg5mas=",
+=======
+      "integrity": "sha512-xuPeK4OdjWqtfi59ylvVL0Yn35SF3zgcAcv7rBPFHVaEapaDr4GdGgm3j7ckTwH9wHL7fGmgfAnb0+THrHb8tA==",
+>>>>>>> .their
       "dev": true,
       "requires": {
         "graceful-fs": "4.1.11",
changed in both
  base   100644 14c3ba9421dbc3f8367641960d1aaafda16c7416 package.json
  our    100644 c081cd89450cd50efba1ec280ff1349a96ea3ce0 package.json
  their  100644 baee69b3712f6ce4345afddf0b60e573acd80e6d package.json
@@ -1,6 +1,10 @@
 {
   "name": "electron",
+<<<<<<< .our
   "version": "4.0.0-nightly.20180821",
+=======
+  "version": "1.8.8",
+>>>>>>> .their
   "repository": "https://github.com/electron/electron",
   "description": "Build cross platform desktop apps with JavaScript, HTML, and CSS",
   "devDependencies": {
@@ -13,7 +17,11 @@
     "dugite": "^1.45.0",
     "electabul": "~0.0.4",
     "electron-docs-linter": "^2.3.4",
+<<<<<<< .our
     "electron-typescript-definitions": "^1.3.6",
+=======
+    "electron-typescript-definitions": "~1.2.11",
+>>>>>>> .their
     "github": "^9.2.0",
     "html-entities": "^1.2.1",
     "husky": "^0.14.3",
changed in both
  base   100755 4465b85c135ddb55a673c5180e15f05f09dac57e script/bootstrap.py
  our    100755 e4aaf89e216b0164f15882a3040e8cac70bf1fd9 script/bootstrap.py
  their  100755 1ee84561d1100be2a75927c922da9c153c0fd0ca script/bootstrap.py
@@ -230,12 +230,21 @@
 def download_native_mksnapshot(arch):
   if not os.path.exists(os.path.join(VENDOR_DIR,
                                      'native_mksnapshot')):
+<<<<<<< .our
     tar_name = 'native-mksnapshot.tar.bz2'
     url = '{0}/linux/{1}/{2}/{3}'.format(BASE_URL, arch,
            get_libchromiumcontent_commit(), tar_name)
     download(tar_name, url, os.path.join(SOURCE_ROOT, tar_name))
     subprocess.call(['tar', '-jxf', tar_name, '-C', VENDOR_DIR])
     os.remove(tar_name)
+=======
+    zip_name = 'native-mksnapshot.zip'
+    url = '{0}/linux/{1}/{2}/{3}'.format(BASE_URL, arch,
+           get_libchromiumcontent_commit(), zip_name)
+    download(zip_name, url, os.path.join(SOURCE_ROOT, zip_name))
+    subprocess.call(['unzip', zip_name, '-d', VENDOR_DIR])
+    os.remove(zip_name)
+>>>>>>> .their
 
 def create_chrome_version_h():
   version_file = os.path.join(VENDOR_DIR, 'libchromiumcontent', 'VERSION')
changed in both
  base   100755 c97cd8336f7d7980911d0bdea93137e7bc95ba24 script/build.py
  our    100755 fb2b95d3bb71a25ce1ca58acf596afdc0f2cc5bd script/build.py
  their  100755 2a2231394207c28fcd2b86d3d9f9b079b08d637e script/build.py
@@ -40,6 +40,12 @@
   if is_verbose_mode():
     ninja.append('-v')
 
+<<<<<<< .our
+=======
+  args = parse_args()
+  if args.ninja_path:
+    ninja = args.ninja_path
+>>>>>>> .their
   if args.libcc:
     if ('D' not in args.configuration
         or not os.path.exists(GCLIENT_DONE)
@@ -93,12 +99,15 @@
   parser.add_argument('--ninja-path',
                       help='Path of ninja command to use.',
                       required=False)
+<<<<<<< .our
   parser.add_argument('--compdb',
                       help=(
                         'Generate JSON compilation database. This will not '
                         'trigger actual build. '
                       ),
                       action='store_true', default=False)
+=======
+>>>>>>> .their
   return parser.parse_args()
 
 
changed in both
  base   100644 e6870246b5698116bc6c123c821b1069a8362e77 script/ci-release-build.js
  our    100644 be9f9597387f5f8b7bfddc61c202f32ce4c6d478 script/ci-release-build.js
  their  100644 60c3682ac708e0177352aee7284744b82255c05b script/ci-release-build.js
@@ -3,12 +3,15 @@
 const assert = require('assert')
 const request = require('request')
 const buildAppVeyorURL = 'https://windows-ci.electronjs.org/api/builds'
+<<<<<<< .our
 const vstsURL = 'https://github.visualstudio.com/electron/_apis/build'
 
 const appVeyorJobs = {
   'electron-x64': 'electron',
   'electron-ia32': 'electron-39ng6'
 }
+=======
+>>>>>>> .their
 
 const circleCIJobs = [
   'electron-linux-arm',
@@ -18,11 +21,14 @@
   'electron-linux-x64'
 ]
 
+<<<<<<< .our
 const vstsJobs = [
   'electron-release-mas-x64',
   'electron-release-osx-x64'
 ]
 
+=======
+>>>>>>> .their
 async function makeRequest (requestOptions, parseResponse) {
   return new Promise((resolve, reject) => {
     request(requestOptions, (err, res, body) => {
@@ -139,6 +145,7 @@
   }
 }
 
+<<<<<<< .our
 async function buildVSTS (targetBranch, options) {
   if (options.job) {
     assert(vstsJobs.includes(options.job), `Unknown VSTS CI job name: ${options.job}. Valid values are: ${vstsJobs}.`)
@@ -202,6 +209,8 @@
   console.log(`VSTS release build request for ${build.name} successful. Check ${vstsResponse._links.web.href} for status.`)
 }
 
+=======
+>>>>>>> .their
 function runRelease (targetBranch, options) {
   if (options.ci) {
     switch (options.ci) {
@@ -213,6 +222,7 @@
         buildAppVeyor(targetBranch, options)
         break
       }
+<<<<<<< .our
       case 'VSTS': {
         buildVSTS(targetBranch, options)
         break
@@ -226,12 +236,19 @@
     buildCircleCI(targetBranch, options)
     buildAppVeyor(targetBranch, options)
     buildVSTS(targetBranch, options)
+=======
+    }
+  } else {
+    buildCircleCI(targetBranch, options.ghRelease, options.job)
+    buildAppVeyor(targetBranch, options.ghRelease)
+>>>>>>> .their
   }
 }
 
 module.exports = runRelease
 
 if (require.main === module) {
+<<<<<<< .our
   const args = require('minimist')(process.argv.slice(2), {
     boolean: ['ghRelease', 'automaticRelease']
   })
@@ -239,6 +256,13 @@
   if (args._.length < 1) {
     console.log(`Trigger CI to build release builds of electron.
     Usage: ci-release-build.js [--job=CI_JOB_NAME] [--ci=CircleCI|AppVeyor|VSTS] [--ghRelease] [--automaticRelease] TARGET_BRANCH
+=======
+  const args = require('minimist')(process.argv.slice(2), { boolean: 'ghRelease' })
+  const targetBranch = args._[0]
+  if (args._.length < 1) {
+    console.log(`Trigger CI to build release builds of electron.
+    Usage: ci-release-build.js [--job=CI_JOB_NAME] [--ci=CircleCI|AppVeyor] [--ghRelease] TARGET_BRANCH
+>>>>>>> .their
     `)
     process.exit(0)
   }
changed in both
  base   100755 9eef2bffef97c473849d226f90580db061d7087c script/create-dist.py
  our    100755 4a6c0c7ce8f275175e48c4c380ff33627f7a5961 script/create-dist.py
  their  100755 f20ebf83adfd79ef2c1f0fb71e577eb3b8b44c5c script/create-dist.py
@@ -147,7 +147,11 @@
 
   # Copy file and keep the executable bit.
   shutil.copyfile(src, dest)
+<<<<<<< .our
   add_exec_bit(dest)
+=======
+  os.chmod(dest, os.stat(dest).st_mode | stat.S_IEXEC)
+>>>>>>> .their
 
 def copy_vcruntime_binaries():
   arch = get_target_arch()
@@ -231,7 +235,7 @@
   elif get_target_arch() == 'arm64':
     strip = 'aarch64-linux-gnu-strip'
   elif get_target_arch() == 'mips64el':
-    strip = 'mips64el-redhat-linux-strip'
+    strip = 'mips64el-loongson-linux-strip'
   else:
     strip = 'strip'
   execute([strip, binary_path], env=build_env())
@@ -302,7 +306,11 @@
     dest = os.path.join(DIST_DIR, binary)
     # Copy file and keep the executable bit.
     shutil.copyfile(src, dest)
+<<<<<<< .our
     add_exec_bit(dest)
+=======
+    os.chmod(dest, os.stat(dest).st_mode | stat.S_IEXEC)
+>>>>>>> .their
 
     dist_name = get_zip_name(binary, version)
     zip_file = os.path.join(SOURCE_ROOT, 'dist', dist_name)
merged
  result 100644 052f0830e8bfc18ad4a0785af5a96c7267e4a1fa script/lib/config.py
  our    100644 9ad0fbc680e5ecdeb8c13d0f0d6678bbba7d9031 script/lib/config.py
@@ -8,8 +8,8 @@
 # URL to the mips64el sysroot image.
 MIPS64EL_SYSROOT_URL = 'https://github.com/electron/debian-sysroot-image-creator/releases/download/v0.5.0/debian_jessie_mips64-sysroot.tar.bz2'
 # URL to the mips64el toolchain.
-MIPS64EL_GCC = 'gcc-4.8.3-d197-n64-loongson'
-MIPS64EL_GCC_URL = 'http://ftp.loongnix.org/toolchain/gcc/release/' + MIPS64EL_GCC + '.tar.gz'
+MIPS64EL_GCC = 'cross-gcc-4.9.3-n64-loongson-rc5.4'
+MIPS64EL_GCC_URL = 'https://github.com/electron/debian-sysroot-image-creator/releases/download/v0.5.0/' + MIPS64EL_GCC + '.tar.gz'
 
 BASE_URL = os.getenv('LIBCHROMIUMCONTENT_MIRROR') or \
     'https://s3.amazonaws.com/github-janky-artifacts/libchromiumcontent'
@@ -93,11 +93,11 @@
     VENDOR_DIR = os.path.join(SOURCE_ROOT, 'vendor')
     gcc_dir = os.path.join(VENDOR_DIR, MIPS64EL_GCC)
     ldlib_dirs = [
-      gcc_dir + '/usr/x86_64-unknown-linux-gnu/mips64el-redhat-linux/lib',
+      gcc_dir + '/usr/x86_64-unknown-linux-gnu/mips64el-loongson-linux/lib',
       gcc_dir + '/usr/lib64',
-      gcc_dir + '/usr/mips64el-redhat-linux/lib64',
-      gcc_dir + '/usr/mips64el-redhat-linux/sysroot/lib64',
-      gcc_dir + '/usr/mips64el-redhat-linux/sysroot/usr/lib64',
+      gcc_dir + '/usr/mips64el-loongson-linux/lib64',
+      gcc_dir + '/usr/mips64el-loongson-linux/sysroot/lib64',
+      gcc_dir + '/usr/mips64el-loongson-linux/sysroot/usr/lib64',
     ]
     env['LD_LIBRARY_PATH'] = os.pathsep.join(ldlib_dirs)
     env['PATH'] = os.pathsep.join([gcc_dir + '/usr/bin', env['PATH']])
changed in both
  base   100755 ccc9057693fe3524bf7ffc8cd619579fbe8635e3 script/prepare-release.js
  our    100755 72a28b719bf1ff7770692caef86c76746c4d8edf script/prepare-release.js
  their  100755 cb5ea44688210d23b03a13dc8e68d2b7b635dd98 script/prepare-release.js
@@ -34,6 +34,13 @@
   if (!dryRun) {
     console.log(`Bumping for new "${versionType}" version.`)
   }
+<<<<<<< .our
+=======
+}
+
+function getNewVersion (dryRun) {
+  console.log(`Bumping for new "${versionType}" version.`)
+>>>>>>> .their
   let bumpScript = path.join(__dirname, 'bump-version.py')
   let scriptArgs = [bumpScript, '--bump', versionType]
   if (args.stable) {
@@ -164,6 +171,7 @@
   githubOpts.draft = true
   githubOpts.name = `electron ${newVersion}`
   if (isBeta) {
+<<<<<<< .our
     if (newVersion.indexOf('nightly') > 0) {
       githubOpts.body = `Note: This is a nightly release.  Please file new issues ` +
         `for any bugs you find in it.\n \n This release is published to npm ` +
@@ -175,6 +183,12 @@
         `under the beta tag and can be installed via npm install electron@beta, ` +
         `or npm i electron@${newVersion.substr(1)}.\n \n ${releaseNotes}`
     }
+=======
+    githubOpts.body = `Note: This is a beta release.  Please file new issues ` +
+      `for any bugs you find in it.\n \n This release is published to npm ` +
+      `under the beta tag and can be installed via npm install electron@beta, ` +
+      `or npm i electron@${newVersion.substr(1)}.\n \n ${releaseNotes}`
+>>>>>>> .their
     githubOpts.name = `${githubOpts.name}`
     githubOpts.prerelease = true
   } else {
@@ -250,11 +264,36 @@
   })
 }
 
+<<<<<<< .our
 // function to determine if there have been commits to master since the last release
 async function changesToRelease () {
   let lastCommitWasRelease = new RegExp(`^Bump v[0-9.]*(-beta[0-9.]*)?(-nightly[0-9.]*)?$`, 'g')
   let lastCommit = await GitProcess.exec(['log', '-n', '1', `--pretty=format:'%s'`], gitDir)
   return !lastCommitWasRelease.test(lastCommit.stdout)
+=======
+async function verifyNewVersion () {
+  let newVersion = await getNewVersion(true)
+  let response = await promptForVersion(newVersion)
+  if (response.match(/^y/i)) {
+    console.log(`${pass} Starting release of ${newVersion}`)
+  } else {
+    console.log(`${fail} Aborting release of ${newVersion}`)
+    process.exit()
+  }
+}
+
+async function promptForVersion (version) {
+  return new Promise((resolve, reject) => {
+    const rl = readline.createInterface({
+      input: process.stdin,
+      output: process.stdout
+    })
+    rl.question(`Do you want to create the release ${version.green} (y/N)? `, (answer) => {
+      rl.close()
+      resolve(answer)
+    })
+  })
+>>>>>>> .their
 }
 
 async function prepareRelease (isBeta, notesOnly) {
@@ -262,6 +301,7 @@
     let newVersion = await getNewVersion(true)
     console.log(newVersion)
   } else {
+<<<<<<< .our
     const currentBranch = (args.branch) ? args.branch : await getCurrentBranch(gitDir)
     if (notesOnly) {
       let releaseNotes = await getReleaseNotes(currentBranch)
@@ -278,6 +318,13 @@
         process.exit(1)
       }
     }
+=======
+    await verifyNewVersion()
+    await createReleaseBranch()
+    await createRelease(currentBranch, isBeta)
+    await pushRelease()
+    await runReleaseBuilds()
+>>>>>>> .their
   }
 }
 
changed in both
  base   100644 aaf93f33cd9a49f4ce4981efd8a8480e6658579f script/publish-to-npm.js
  our    100644 27290c513bb28d9bd394575d833f1e6786e3b479 script/publish-to-npm.js
  their  100644 eb0702ff5ef265b545824ba21ffb4c5d760d5476 script/publish-to-npm.js
changed in both
  base   100755 1baa56a7c8862da9f24f7814dc12359c0c75b072 script/release.js
  our    100755 84e00ad4f309201f151c3f8fcbaf9ee536c9b6cb script/release.js
  their  100755 9863ef912cd5a940428e9ac22e1993494b2b1828 script/release.js
@@ -446,6 +446,7 @@
     `shasums defined in ${validationArgs.shaSumFile}.`)
 }
 
+<<<<<<< .our
 async function tagLibCC () {
   const tag = `electron-${pkg.version}`
   const libccDir = path.join(path.resolve(__dirname, '..'), 'vendor', 'libchromiumcontent')
@@ -459,6 +460,23 @@
       console.log(`${fail} Error pushing libchromiumcontent tag ${tag}: ` +
         `${pushDetails.stderr}`)
     }
+=======
+async function cleanupReleaseBranch () {
+  console.log(`Cleaning up release branch.`)
+  let errorMessage = `Could not delete local release branch.`
+  let successMessage = `Successfully deleted local release branch.`
+  await callGit(['branch', '-D', 'release'], errorMessage, successMessage)
+  errorMessage = `Could not delete remote release branch.`
+  successMessage = `Successfully deleted remote release branch.`
+  return callGit(['push', 'origin', ':release'], errorMessage, successMessage)
+}
+
+async function callGit (args, errorMessage, successMessage) {
+  let gitResult = await GitProcess.exec(args, gitDir)
+  if (gitResult.exitCode === 0) {
+    console.log(`${pass} ${successMessage}`)
+    return true
+>>>>>>> .their
   } else {
     console.log(`${fail} Error tagging libchromiumcontent with ${tag}: ` +
       `${tagDetails.stderr}`)
changed in both
  base   100755 cea171d8597c9917839e322cb6c8e4d0c308ac30 script/update-clang.sh
  our    100755 0c7ab60533381e33152b8735aaccf41d5f0d6676 script/update-clang.sh
  their  100755 4a0924576a0fe26d980c71bfa7ff4917d3fb66db script/update-clang.sh
@@ -46,37 +46,54 @@
 
 # Check if there's a prebuilt binary and if so just fetch that. That's faster,
 # and goma relies on having matching binary hashes on client and server too.
-CDS_FILE="clang-${PACKAGE_VERSION}.tgz"
+echo Trying to download prebuilt clang
+rm -rf "${LLVM_BUILD_DIR}"
+mkdir -p "${LLVM_BUILD_DIR}"
+
+CDS_FILES=("clang-${PACKAGE_VERSION}.tgz")
 CDS_OUT_DIR=$(mktemp -d -t clang_download.XXXXXX)
-CDS_OUTPUT="${CDS_OUT_DIR}/${CDS_FILE}"
 if [ "${OS}" = "Linux" ]; then
   ARCH="$(uname -m)"
   if [ "${ARCH}" = "aarch64" ]; then
+<<<<<<< .our
     CDS_FULL_URL="${S3_URL}/arm64/${CDS_FILE}"
   else
     CDS_FULL_URL="${CDS_URL}/Linux_x64/${CDS_FILE}"
+=======
+    CDS_URL="${S3_URL}"
+    CDS_SUBDIR="arm64"
+  else
+    CDS_FILES+=("llvmgold-${PACKAGE_VERSION}.tgz")
+    CDS_SUBDIR="Linux_x64"
+>>>>>>> .their
   fi
 elif [ "${OS}" = "Darwin" ]; then
-  CDS_FULL_URL="${CDS_URL}/Mac/${CDS_FILE}"
-fi
-echo Trying to download prebuilt clang
-if which curl > /dev/null; then
-  curl -L --fail "${CDS_FULL_URL}" -o "${CDS_OUTPUT}" || \
-      rm -rf "${CDS_OUT_DIR}"
-elif which wget > /dev/null; then
-  wget "${CDS_FULL_URL}" -O "${CDS_OUTPUT}" || rm -rf "${CDS_OUT_DIR}"
-else
-  echo "Neither curl nor wget found. Please install one of these."
-  exit 1
-fi
-if [ -f "${CDS_OUTPUT}" ]; then
-  rm -rf "${LLVM_BUILD_DIR}"
-  mkdir -p "${LLVM_BUILD_DIR}"
-  tar -xzf "${CDS_OUTPUT}" -C "${LLVM_BUILD_DIR}"
-  echo clang "${PACKAGE_VERSION}" unpacked
-  echo "${PACKAGE_VERSION}" > "${STAMP_FILE}"
-  rm -rf "${CDS_OUT_DIR}"
-  exit 0
-else
-  echo Did not find prebuilt clang "${PACKAGE_VERSION}", building
+  CDS_SUBDIR="Mac"
 fi
+for CDS_FILE in "${CDS_FILES[@]}"
+do
+  CDS_OUTPUT="${CDS_OUT_DIR}/${CDS_FILE}"
+  CDS_FULL_URL="${CDS_URL}/${CDS_SUBDIR}/${CDS_FILE}"
+
+  if which curl > /dev/null; then
+    curl -L --fail "${CDS_FULL_URL}" -o "${CDS_OUTPUT}" || \
+        rm -rf "${CDS_OUT_DIR}"
+  elif which wget > /dev/null; then
+    wget "${CDS_FULL_URL}" -O "${CDS_OUTPUT}" || rm -rf "${CDS_OUT_DIR}"
+  else
+    echo "Neither curl nor wget found. Please install one of these."
+    exit 1
+  fi
+
+  if [ -f "${CDS_OUTPUT}" ]; then
+    tar -xzf "${CDS_OUTPUT}" -C "${LLVM_BUILD_DIR}"
+  else
+    echo Did not find prebuilt clang "${PACKAGE_VERSION}"
+    exit 1
+  fi
+done
+
+echo clang "${PACKAGE_VERSION}" unpacked
+echo "${PACKAGE_VERSION}" > "${STAMP_FILE}"
+rm -rf "${CDS_OUT_DIR}"
+exit 0
changed in both
  base   100755 2be84be82d78c16a55dae4070d81c6ec79ab2691 script/upload.py
  our    100755 2d9eaa201265971ca01acaea6e84a440e5db0532 script/upload.py
  their  100755 ee7a027af02274326ba06d84df031bb0d241ec47 script/upload.py
@@ -76,9 +76,23 @@
   upload_electron(release, os.path.join(DIST_DIR, ffmpeg), args)
 
   chromedriver = get_zip_name('chromedriver', ELECTRON_VERSION)
+<<<<<<< .our
   upload_electron(release, os.path.join(DIST_DIR, chromedriver), args)
   mksnapshot = get_zip_name('mksnapshot', ELECTRON_VERSION)
   upload_electron(release, os.path.join(DIST_DIR, mksnapshot), args)
+=======
+  upload_electron(github, release, os.path.join(DIST_DIR, chromedriver),
+                  args.upload_to_s3)
+  mksnapshot = get_zip_name('mksnapshot', ELECTRON_VERSION)
+  upload_electron(github, release, os.path.join(DIST_DIR, mksnapshot),
+                args.upload_to_s3)
+
+  if get_target_arch().startswith('arm'):
+    # Upload the x64 binary for arm/arm64 mksnapshot
+    mksnapshot = get_zip_name('mksnapshot', ELECTRON_VERSION, 'x64')
+    upload_electron(github, release, os.path.join(DIST_DIR, mksnapshot),
+                    args.upload_to_s3)
+>>>>>>> .their
 
   if get_target_arch().startswith('arm'):
     # Upload the x64 binary for arm/arm64 mksnapshot
@@ -149,8 +163,56 @@
   return dist_time > int(head_time)
 
 
+<<<<<<< .our
 def upload_electron(release, file_path, args):
   filename = os.path.basename(file_path)
+=======
+def get_text_with_editor(name):
+  editor = os.environ.get('EDITOR', 'nano')
+  initial_message = '\n# Please enter the body of your release note for %s.' \
+                    % name
+
+  t = tempfile.NamedTemporaryFile(suffix='.tmp', delete=False)
+  t.write(initial_message)
+  t.close()
+  subprocess.call([editor, t.name])
+
+  text = ''
+  for line in open(t.name, 'r'):
+    if len(line) == 0 or line[0] != '#':
+      text += line
+
+  os.unlink(t.name)
+  return text
+
+def create_or_get_release_draft(github, releases, tag, tag_exists):
+  # Search for existing draft.
+  for release in releases:
+    if release['draft'] and release['tag_name'] == tag:
+      return release
+
+  if tag_exists:
+    tag = 'do-not-publish-me'
+  return create_release_draft(github, tag)
+
+
+def create_release_draft(github, tag):
+  name = '{0} {1} beta'.format(PROJECT_NAME, tag)
+  if os.environ.has_key('CI'):
+    body = '(placeholder)'
+  else:
+    body = get_text_with_editor(name)
+  if body == '':
+    sys.stderr.write('Quit due to empty release note.\n')
+    sys.exit(0)
+
+  data = dict(tag_name=tag, name=name, body=body, draft=True, prerelease=True)
+  r = github.repos(ELECTRON_REPO).releases.post(data=data)
+  return r
+
+
+def upload_electron(github, release, file_path, upload_to_s3):
+>>>>>>> .their
 
   # if upload_to_s3 is set, skip github upload.
   if args.upload_to_s3:
changed in both
  base   100644 3df3a87e66429193d65c27545e92a034dce92eeb spec/api-app-spec.js
  our    100644 d224eda2989332c18d655cef05a8bacc2eb6d4b8 spec/api-app-spec.js
  their  100644 5816902d7cd68c74d4161ef3a87402125a44c0a5 spec/api-app-spec.js
@@ -720,6 +720,54 @@
     })
   })
 
+  describe('app launch through uri', () => {
+    before(function () {
+      if (process.platform !== 'win32') {
+        this.skip()
+      }
+    })
+
+    it('does not launch for blacklisted argument', function (done) {
+      const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')
+      // App should exit with non 123 code.
+      const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'electron-test://?', '--no-sandbox', '--gpu-launcher=cmd.exe /c start calc'])
+      first.once('exit', (code) => {
+        assert.notEqual(code, 123)
+        done()
+      })
+    })
+
+    it('launches successfully for multiple uris in cmd args', function (done) {
+      const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')
+      // App should exit with code 123.
+      const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'http://electronjs.org', 'electron-test://testdata'])
+      first.once('exit', (code) => {
+        assert.equal(code, 123)
+        done()
+      })
+    })
+
+    it('does not launch for encoded space', function (done) {
+      const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')
+      // App should exit with non 123 code.
+      const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'electron-test://?', '--no-sandbox', '--gpu-launcher%20"cmd.exe /c start calc'])
+      first.once('exit', (code) => {
+        assert.notEqual(code, 123)
+        done()
+      })
+    })
+
+    it('launches successfully for argnames similar to blacklisted ones', function (done) {
+      const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')
+      // inspect is blacklisted, but inspector should work, and app launch should succeed
+      const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'electron-test://?', '--inspector'])
+      first.once('exit', (code) => {
+        assert.equal(code, 123)
+        done()
+      })
+    })
+  })
+
   describe('getFileIcon() API', () => {
     const iconPath = path.join(__dirname, 'fixtures/assets/icon.ico')
     const sizes = {
changed in both
  base   100644 ab96021ebf4c4360fa581b5a695249456a9afeda spec/api-browser-view-spec.js
  our    100644 968912a4abf3d759a1363e2420d2c21b7923dbd6 spec/api-browser-view-spec.js
  their  100644 df239a8914527a2d62f652b878c97a7791f63a9d spec/api-browser-view-spec.js
@@ -44,9 +44,15 @@
   describe('BrowserView.isDestroyed()', () => {
     it('returns correct value', () => {
       view = new BrowserView()
+<<<<<<< .our
       expect(view.isDestroyed()).to.be.false()
       view.destroy()
       expect(view.isDestroyed()).to.be.true()
+=======
+      assert.ok(!view.isDestroyed())
+      view.destroy()
+      assert.ok(view.isDestroyed())
+>>>>>>> .their
     })
   })
 
changed in both
  base   100644 2adc82df05d0d9c0524324edfe33f83824f47cb4 spec/api-browser-window-spec.js
  our    100644 f4cba12ec19d224bc46fca898db42a99baf4972e spec/api-browser-window-spec.js
  their  100644 2a52bbc1043c17624ffe60cca6a09b43bf3089aa spec/api-browser-window-spec.js
@@ -453,6 +453,29 @@
       // Values can be 0,2,3,4, or 6. We want 6, which is RGB + Alpha
       expect(imgBuffer[25]).to.equal(6)
     })
+
+    it('preserves transparency', (done) => {
+      w.close()
+      const width = 400
+      const height = 400
+      w = new BrowserWindow({
+        show: false,
+        width: width,
+        height: height,
+        transparent: true
+      })
+      w.loadURL('data:text/html,<html><body background-color: rgba(255,255,255,0)></body></html>')
+      w.once('ready-to-show', () => {
+        w.show()
+        w.capturePage((image) => {
+          let imgBuffer = image.toPNG()
+          // Check 25th byte in the PNG
+          // Values can be 0,2,3,4, or 6. We want 6, which is RGB + Alpha
+          assert.equal(imgBuffer[25], 6)
+          done()
+        })
+      })
+    })
   })
 
   describe('BrowserWindow.setSize(width, height)', () => {
changed in both
  base   100644 2a74fc7297af92e99ff99ec38d6a57e1246b6f38 spec/api-menu-spec.js
  our    100644 ed2749700c6c8bf299f507d52606c1ae3f597e5c spec/api-menu-spec.js
  their  100644 4afac1b4f7f2f46aa9fd573c40a6aa74ecb0cc88 spec/api-menu-spec.js
@@ -648,10 +648,28 @@
       return closeWindow(w).then(() => { w = null })
     })
 
+<<<<<<< .our
     it('throws an error if options is not an object', () => {
       expect(() => {
         menu.popup('this is a string, not an object')
       }).to.throw(/Options must be an object/)
+=======
+    it('returns immediately', () => {
+      const { browserWindow, x, y, async } = menu.popup(w, {x: 100, y: 101, async: true})
+
+      assert.equal(browserWindow, w)
+      assert.equal(x, 100)
+      assert.equal(y, 101)
+      assert.equal(async, true)
+    })
+
+    it('works without a given BrowserWindow and options', () => {
+      const { browserWindow, x, y } = menu.popup({x: 100, y: 101, async: true})
+
+      assert.equal(browserWindow.constructor.name, 'BrowserWindow')
+      assert.equal(x, 100)
+      assert.equal(y, 101)
+>>>>>>> .their
     })
 
     it('allows for options to be optional', () => {
changed in both
  base   100644 54235a334a5403dd580424d3129569c60e4c41de spec/api-session-spec.js
  our    100644 b9093d1d6335ece5ca713a668a67bf3b40f4fabe spec/api-session-spec.js
  their  100644 5e9743f83d9ab56419080674f82f8847495eb2e5 spec/api-session-spec.js
@@ -298,8 +298,12 @@
                                    filename, port, savePath, isCustom) => {
       assert.equal(state, 'completed')
       assert.equal(filename, 'mock.pdf')
+<<<<<<< .our
       assert.ok(path.isAbsolute(savePath))
       assert.ok(isPathEqual(savePath, path.join(__dirname, 'fixtures', 'mock.pdf')))
+=======
+      assert.equal(savePath, path.join(__dirname, 'fixtures', 'mock.pdf'))
+>>>>>>> .their
       if (isCustom) {
         assert.equal(url, `${protocolName}://item`)
       } else {
changed in both
  base   100644 1420fed7c6a7b64ad1fb04da0751725bddb87b5c spec/chromium-spec.js
  our    100644 d90269769d269e4054d25cba4b6c4ac8a1929aa6 spec/chromium-spec.js
  their  100644 ffcc187e8434e1baaf5b667184a7a376200987fe spec/chromium-spec.js
@@ -319,8 +319,12 @@
       b = window.open(windowUrl, '', 'nodeIntegration=no,show=no')
     })
 
+<<<<<<< .our
     // TODO(codebytere): re-enable this test
     xit('disables node integration when it is disabled on the parent window for chrome devtools URLs', (done) => {
+=======
+    it('disables node integration when it is disabled on the parent window for chrome devtools URLs', (done) => {
+>>>>>>> .their
       let b
       app.once('web-contents-created', (event, contents) => {
         contents.once('did-finish-load', () => {
changed in both
  base   100644 cfe840ca0a44c5766509b2865034d98e375da1a1 spec/modules-spec.js
  our    100644 b996b8f4839bff2160bffb69e55263b16a4178d7 spec/modules-spec.js
  their  100644 28f2602acff67b2da9accd0574d64d386e0795a7 spec/modules-spec.js
changed in both
  base   100644 57cb31e2b52888c7d2135d0169d514e26106d356 spec/node-spec.js
  our    100644 9bb03494a56ffacec075c40bebde39a3b57ac734 spec/node-spec.js
  their  100644 572c9548c1d2a3657473a64e74679c777ca5a2ba spec/node-spec.js
changed in both
  base   100644 4a4dfd109df33c9f5f607d6ea593276973e0bb3f spec/static/main.js
  our    100644 5659c44c8de4456a25e0026e29199b827c89cb08 spec/static/main.js
  their  100644 f91dc4e5216774d73a5d7648ee873770ac694210 spec/static/main.js
changed in both
  base   100644 6580f18a1ad9e53ab3f2ae88cb7ea023bcf9579c toolchain.gypi
  our    100644 697add78e42191741cee1b015cdcf4f801c570e7 toolchain.gypi
  their  100644 82408a5ac62ac1c84ae33c3b440b8fc243674fee toolchain.gypi
@@ -9,7 +9,7 @@
     'cc_wrapper%': '',
 
     # Path to mips64el toolchain.
-    'make_mips64_dir%': 'vendor/gcc-4.8.3-d197-n64-loongson/usr',
+    'make_mips64_dir%': 'vendor/cross-gcc-4.9.3-n64-loongson-rc5.4/usr',
 
     'variables': {
       # The minimum macOS SDK version to use.
@@ -116,8 +116,10 @@
     # Setup building with clang.
     ['clang==1', {
       'make_global_settings': [
+        ['AR', '<(make_clang_dir)/bin/llvm-ar'],
         ['CC', '<(make_clang_dir)/bin/clang'],
         ['CXX', '<(make_clang_dir)/bin/clang++'],
+        ['AR.host', '<(make_clang_dir)/bin/llvm-ar'],
         ['CC.host', '$(CC)'],
         ['CXX.host', '$(CXX)'],
       ],
@@ -192,8 +194,8 @@
 
     ['target_arch=="mips64el"', {
       'make_global_settings': [
-        ['CC', '<(make_mips64_dir)/bin/mips64el-redhat-linux-gcc'],
-        ['CXX', '<(make_mips64_dir)/bin/mips64el-redhat-linux-g++'],
+        ['CC', '<(make_mips64_dir)/bin/mips64el-loongson-linux-gcc'],
+        ['CXX', '<(make_mips64_dir)/bin/mips64el-loongson-linux-g++'],
         ['CC.host', '$(CC)'],
         ['CXX.host', '$(CXX)'],
       ],
changed in both
  base   160000 eb1db5393cd8bf2f931c5ef3ab7c55948bd57d60 vendor/libchromiumcontent
  our    160000 c85470a1c379b1c4bedb372c146521bc4be9b75d vendor/libchromiumcontent
  their  160000 07396ffd8e07470ae2e939d26bc8d7b6b4c3d9d3 vendor/libchromiumcontent
changed in both
  base   160000 dc8fe9d390b1deb32ae2601357a90679cbcc757e vendor/node
  our    160000 ece0a06ac8147efb5b5af431c21f312f1884616e vendor/node
  their  160000 2586ef1eb5f5f53da2c1852efb47c20dc8888534 vendor/node
added in both
  our    100644 84bd69c2b2868ac23bc30061aa208ad38fbb9506 vsts.yml
  their  100644 aaee2e6522650cd470f09e43b74b4d0a126c2128 vsts.yml
@@ -59,7 +59,11 @@
 - bash: |
     echo 'Verifying ffmpeg on build'
     if [ "$ELECTRON_RELEASE" == "1" ]; then
+<<<<<<< .our
       script/verify-ffmpeg.py -c R
+=======
+      script/verify-ffmpeg.py -R
+>>>>>>> .their
     else
       script/verify-ffmpeg.py
     fi
@@ -69,6 +73,7 @@
 - task: PublishTestResults@2
   displayName: Publish Test Results
   inputs:
+<<<<<<< .our
     testResultsFiles: '**/test-*.xml'
   condition: and(always(), eq(variables['MOCHA_FILE'], 'test-results.xml'))
 
@@ -93,5 +98,18 @@
   inputs:
     PathtoPublish: '$(Build.SourcesDirectory)/out'
     ArtifactName: out
+=======
+    testResultsFiles: 'test-results.xml'
+    searchFolder: junit
+  condition: and(always(), ne(variables['ELECTRON_RELEASE'], '1'))
+
+- task: kasunkodagoda.slack-notification.slack-notification-task.SlackNotification@3
+  displayName: Post Slack Notification
+  inputs:
+    SlackApiToken: '$(slack_token)'
+    Channel: '#bot-nightly-releases'
+    Message: '$(Build.DefinitionName)-$(Build.BuildNumber) finished with a $(Agent.JobStatus) status.'
+  condition: and(always(), eq(variables['Build.Reason'], 'Schedule'))
+>>>>>>> .their
 
 - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
