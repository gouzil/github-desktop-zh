changed in both
  base   100644 d4f98eab95b73b59018f170b09b9132d4d03477b .circleci/config.yml
  our    100644 6d44d618aabcce04c60344f2274dec5b0c2a1f68 .circleci/config.yml
  their  100644 55d4ccd2f775f7a91f7e5f6f01fbaf2e034a4556 .circleci/config.yml
@@ -19,6 +19,7 @@
       fi
     when: on_success
 
+<<<<<<< .our
 build-steps: &build-steps
   steps:
     - checkout
@@ -92,6 +93,13 @@
           fi
     - run:
         name: Test
+=======
+version: 2
+jobs:
+  electron-linux-arm:
+    docker:
+      - image: electronbuilds/electron:0.0.7
+>>>>>>> .their
         environment:
           MOCHA_FILE: junit/test-results.xml
           MOCHA_REPORTER: mocha-junit-reporter
@@ -110,6 +118,7 @@
                 echo 'Skipping tests on GitHub release'
               fi
             fi
+<<<<<<< .our
           else
            echo 'Skipping tests due to configuration'
           fi
@@ -117,6 +126,76 @@
         name: Verify FFmpeg
         command: |
           if [ "$RUN_TESTS" == "true" ]; then
+=======
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Optionally finish release
+          shell: /bin/sh
+          command: |
+            if [ "$ELECTRON_RELEASE" == "1" ] && [ "$AUTO_RELEASE" == "true" ]; then
+              echo 'Trying to finish release'
+              node script/release.js --validateRelease --automaticRelease
+              releaseExitCode=$?
+              if [ $releaseExitCode -eq 0 ]; then
+                echo 'Release is ready to go; releasing'
+                node script/release.js--automaticRelease
+                if [ $releaseExitCode -eq 0 ]; then
+                  echo 'Release successful, now publishing to npm'
+                  echo "//registry.npmjs.org/:_authToken=$ELECTRON_NPM_TOKEN" >> ~/.npmrc
+                  npm run publish-to-npm
+                  echo 'Release has been published to npm'
+                fi
+              else
+                echo 'Release is not complete, skipping publish for now'
+              fi
+            else
+              echo 'Skipping finishing release because build is not for release'
+            fi
+      - run:
+          name: Zip out directory
+          command: |
+>>>>>>> .their
             if [ "$ELECTRON_RELEASE" != "1" ]; then
               echo 'Verifying ffmpeg on debug build'
               script/verify-ffmpeg.py
@@ -391,11 +470,105 @@
     resource_class: 2xlarge
 
   electron-linux-arm64:
+<<<<<<< .our
     environment:
       TARGET_ARCH: arm64
     <<: *build-defaults
     resource_class: 2xlarge
 
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: arm64
+    resource_class: 2xlarge
+    steps:
+      - checkout
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Optionally finish release
+          shell: /bin/sh
+          command: |
+            if [ "$ELECTRON_RELEASE" == "1" ] && [ "$AUTO_RELEASE" == "true" ]; then
+              echo 'Trying to finish release'
+              node script/release.js --validateRelease --automaticRelease
+              releaseExitCode=$?
+              if [ $releaseExitCode -eq 0 ]; then
+                echo 'Release is ready to go; releasing'
+                node script/release.js--automaticRelease
+                if [ $releaseExitCode -eq 0 ]; then
+                  echo 'Release successful, now publishing to npm'
+                  echo "//registry.npmjs.org/:_authToken=$ELECTRON_NPM_TOKEN" >> ~/.npmrc
+                  npm run publish-to-npm
+                  echo 'Release has been published to npm'
+                fi
+              else
+                echo 'Release is not complete, skipping publish for now'
+              fi
+            else
+              echo 'Skipping finishing release because build is not for release'
+            fi
+      - run:
+          name: Zip out directory
+          command: |
+            if [ "$ELECTRON_RELEASE" != "1" ]; then
+              zip -r electron.zip out/D
+            fi
+      - persist_to_workspace:
+          root: /home/builduser
+          paths:
+            - project/out
+      - store_artifacts:
+          path: electron.zip
+>>>>>>> .their
   electron-linux-arm64-test:
     machine: true
     steps:
@@ -430,6 +603,7 @@
     resource_class: 2xlarge
 
   electron-linux-ia32:
+<<<<<<< .our
     environment:
       TARGET_ARCH: ia32
       DISPLAY: ':99.0'
@@ -668,6 +842,312 @@
       GN_EXTRA_ARGS: 'is_mas_build = true'
     <<: *gn-mac-build-machine
     <<: *gn-mac-build-steps
+=======
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: ia32
+          DISPLAY: ':99.0'
+    resource_class: xlarge
+    steps:
+      - checkout
+      - run:
+          name: Setup for headless testing
+          command: sh -e /etc/init.d/xvfb start
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Optionally finish release
+          shell: /bin/sh
+          command: |
+            if [ "$ELECTRON_RELEASE" == "1" ] && [ "$AUTO_RELEASE" == "true" ]; then
+              echo 'Trying to finish release'
+              node script/release.js --validateRelease --automaticRelease
+              releaseExitCode=$?
+              if [ $releaseExitCode -eq 0 ]; then
+                echo 'Release is ready to go; releasing'
+                node script/release.js--automaticRelease
+                if [ $releaseExitCode -eq 0 ]; then
+                  echo 'Release successful, now publishing to npm'
+                  echo "//registry.npmjs.org/:_authToken=$ELECTRON_NPM_TOKEN" >> ~/.npmrc
+                  npm run publish-to-npm
+                  echo 'Release has been published to npm'
+                fi
+              else
+                echo 'Release is not complete, skipping publish for now'
+              fi
+            else
+              echo 'Skipping finishing release because build is not for release'
+            fi
+      - run:
+          name: Test
+          environment:
+            MOCHA_FILE: junit/test-results.xml
+            MOCHA_REPORTER: mocha-junit-reporter
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Testing Electron debug build'
+                out/D/electron --version
+                mkdir junit
+                script/test.py --ci --rebuild_native_modules
+             else
+                echo 'Skipping testing on release build'
+             fi
+      - run:
+          name: Verify FFmpeg
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Verifying ffmpeg on debug build'
+                script/verify-ffmpeg.py
+             else
+                echo 'Skipping verify ffmpeg on release build'
+             fi
+  electron-linux-mips64el:
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: mips64el
+    resource_class: xlarge
+    steps:
+      - checkout
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Optionally finish release
+          shell: /bin/sh
+          command: |
+            if [ "$ELECTRON_RELEASE" == "1" ] && [ "$AUTO_RELEASE" == "true" ]; then
+              echo 'Trying to finish release'
+              node script/release.js --validateRelease --automaticRelease
+              releaseExitCode=$?
+              if [ $releaseExitCode -eq 0 ]; then
+                echo 'Release is ready to go; releasing'
+                node script/release.js--automaticRelease
+                if [ $releaseExitCode -eq 0 ]; then
+                  echo 'Release successful, now publishing to npm'
+                  echo "//registry.npmjs.org/:_authToken=$ELECTRON_NPM_TOKEN" >> ~/.npmrc
+                  npm run publish-to-npm
+                  echo 'Release has been published to npm'
+                fi
+              else
+                echo 'Release is not complete, skipping publish for now'
+              fi
+            else
+              echo 'Skipping finishing release because build is not for release'
+            fi
+
+  electron-linux-x64:
+    docker:
+      - image: electronbuilds/electron:0.0.7
+        environment:
+          TARGET_ARCH: x64
+          DISPLAY: ':99.0'
+    resource_class: xlarge
+    steps:
+      - checkout
+      - run:
+          name: Setup for headless testing
+          command: sh -e /etc/init.d/xvfb start
+      - run:
+          name: Check for release
+          command: |
+            if [ -n "${RUN_RELEASE_BUILD}" ]; then
+              echo 'release build triggered from api'
+              echo 'export ELECTRON_RELEASE=1 TRIGGERED_BY_API=1' >> $BASH_ENV
+            fi
+      - run:
+         name: Bootstrap
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Bootstrapping Electron for release build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH
+           else
+              echo 'Bootstrapping Electron for debug build'
+              script/bootstrap.py --target_arch=$TARGET_ARCH --dev
+           fi
+      - run: npm run lint
+      - run:
+         name: Build
+         command: |
+           if [ "$ELECTRON_RELEASE" == "1" ]; then
+              echo 'Building Electron for release'
+              script/build.py -c R
+           else
+              echo 'Building Electron for debug'
+              script/build.py -c D
+           fi
+      - run:
+          name: Create distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ]; then
+                echo 'Creating Electron release distribution'
+                script/create-dist.py
+             else
+                echo 'Skipping create distribution because build is not for release'
+             fi
+      - run:
+          name: Upload distribution
+          command: |
+             if [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" != "1" ]; then
+                echo 'Uploading Electron release distribution to github releases'
+                script/upload.py
+             elif [ "$ELECTRON_RELEASE" == "1" ] && [ "$TRIGGERED_BY_API" == "1" ]; then
+                echo 'Uploading Electron release distribution to s3'
+                script/upload.py --upload_to_s3
+             else
+                echo 'Skipping upload distribution because build is not for release'
+             fi
+      - run:
+          name: Optionally finish release
+          shell: /bin/sh
+          command: |
+            if [ "$ELECTRON_RELEASE" == "1" ] && [ "$AUTO_RELEASE" == "true" ]; then
+              echo 'Trying to finish release'
+              node script/release.js --validateRelease --automaticRelease
+              releaseExitCode=$?
+              if [ $releaseExitCode -eq 0 ]; then
+                echo 'Release is ready to go; releasing'
+                node script/release.js--automaticRelease
+                if [ $releaseExitCode -eq 0 ]; then
+                  echo 'Release successful, now publishing to npm'
+                  echo "//registry.npmjs.org/:_authToken=$ELECTRON_NPM_TOKEN" >> ~/.npmrc
+                  npm run publish-to-npm
+                  echo 'Release has been published to npm'
+                fi
+              else
+                echo 'Release is not complete, skipping publish for now'
+              fi
+            else
+              echo 'Skipping finishing release because build is not for release'
+            fi
+      - run:
+          name: Test
+          environment:
+            MOCHA_FILE: junit/test-results.xml
+            MOCHA_REPORTER: mocha-junit-reporter
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Testing Electron debug build'
+                mkdir junit
+                script/test.py --ci --rebuild_native_modules
+             else
+                echo 'Skipping testing on release build'
+             fi
+      - run:
+          name: Verify FFmpeg
+          command: |
+             if [ "$ELECTRON_RELEASE" != "1" ]; then
+                echo 'Verifying ffmpeg on debug build'
+                script/verify-ffmpeg.py
+             else
+                echo 'Skipping verify ffmpeg on release build'
+             fi
+      - run:
+          name: Generate Typescript Definitions
+          command: npm run create-typescript-definitions
+      - store_test_results:
+          path: junit
+      - store_artifacts:
+          path: junit
+      - store_artifacts:
+          path: out/electron.d.ts
+      - store_artifacts:
+          path: out/electron-api.json
+>>>>>>> .their
 
 workflows:
   version: 2
changed in both
  base   100644 5d04da05397c4c74ce00d6d6c8969ce370adb32d CONTRIBUTING.md
  our    100644 414f83db905db904728facf3b40e70e7b7973193 CONTRIBUTING.md
  their  100644 0955f68c4f2b1097e770398cf51d3af811f53050 CONTRIBUTING.md
changed in both
  base   100644 4cfea0e70f9af56ba746347b4cae410970f3d900 Dockerfile
  our    100644 74e5eeedea9bea87cd7a98ac2cb63f4376275a2a Dockerfile
  their  100644 2d74e16915d2e89e1e1e7f3ffd259cc448e1b864 Dockerfile
@@ -7,8 +7,13 @@
 RUN chmod a+rwx /home
 
 # Install node.js
+<<<<<<< .our
 RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
 RUN apt-get install -y nodejs
+=======
+RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
+RUN apt-get update && apt-get install -y nodejs
+>>>>>>> .their
 
 # Install wget used by crash reporter
 RUN apt-get install -y wget
changed in both
  base   100644 271947c56e39b91fc23bf10579f61cab50b0f4dc Dockerfile.circleci
  our    100644 d369c8c640161fc3ba65935297aec7dd27eb1e9f Dockerfile.circleci
  their  100644 0cdb1e88c24f01a5acdfd8ef348126819f593454 Dockerfile.circleci
@@ -3,8 +3,13 @@
 USER root
 
 # Install node.js
+<<<<<<< .our
 RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
 RUN apt-get install -y nodejs
+=======
+RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
+RUN apt-get update && apt-get install -y nodejs
+>>>>>>> .their
 
 # Install wget used by crash reporter
 RUN apt-get install -y wget
added in remote
  their  100644 c6d558f7f3518ea2924fa9075ed38ab48d70d204 Jenkinsfile.arm64
@@ -0,0 +1,36 @@
+pipeline {
+  agent {
+    docker {
+      image 'electronbuilds/arm64v8:0.0.2'
+      args '--privileged'
+    }
+  }
+  environment {
+    TARGET_ARCH='arm64'
+    DISPLAY=':99.0'
+    MOCHA_TIMEOUT='60000'
+  }
+  stages {
+    stage('Bootstrap') {
+      steps {
+        sh 'script/bootstrap.py -v --dev --target_arch=$TARGET_ARCH'
+      }
+    }
+    stage('Build') {
+      steps {
+        sh 'script/build.py -c D --ninja-path /usr/local/ninja/ninja'
+      }
+    }
+    stage('Test') {
+      steps {
+        sh '/etc/init.d/xvfb start'
+        sh 'script/test.py --ci'
+      }
+    }
+  }
+  post {
+    always {
+      cleanWs()
+    }
+  }
+}
changed in both
  base   100644 160dae7908236105f8534f9448f4111da1bcb014 README.md
  our    100644 ec09364417b767ac59b2d970fee5e2ab2db2173b README.md
  their  100644 0a2e72b22aa7259045d448ed2bcc41bdfe70ad53 README.md
changed in both
  base   100644 4bd88a5a43c03ceba308ec06fdf0cbadeddcaae3 atom/browser/api/atom_api_browser_view.cc
  our    100644 bd83208694c61c4d7c43ce4be26939c2682b2a13 atom/browser/api/atom_api_browser_view.cc
  their  100644 41f0e99cdd79bf1ad2c4c8c0db5aaa97ac5e1297 atom/browser/api/atom_api_browser_view.cc
changed in both
  base   100644 ced1cb31d8df7689f7652111720ba20fb029b1fe atom/browser/api/atom_api_menu_views.cc
  our    100644 3da7dc2842fa4561e037aa67f290d0cc6ca71014 atom/browser/api/atom_api_menu_views.cc
  their  100644 fa178e57d82413544b92172ae0ed4401ea5f178b atom/browser/api/atom_api_menu_views.cc
@@ -49,8 +49,16 @@
   menu_runners_[window_id] =
       std::make_unique<MenuRunner>(model(), flags, close_callback);
   menu_runners_[window_id]->RunMenuAt(
+<<<<<<< .our
       native_window->widget(), NULL, gfx::Rect(location, gfx::Size()),
       views::MENU_ANCHOR_TOPLEFT, ui::MENU_SOURCE_MOUSE);
+=======
+      native_window->widget(),
+      NULL,
+      gfx::Rect(location, gfx::Size()),
+      views::MENU_ANCHOR_TOPLEFT,
+      ui::MENU_SOURCE_MOUSE);
+>>>>>>> .their
 }
 
 void MenuViews::ClosePopupAt(int32_t window_id) {
removed in local
  base   100644 0d22fad5b8b5e3ed7711d55aa763f930014a75d7 atom/browser/api/atom_api_screen_mac.mm
  their  100644 056b775fdfc221cb0501ba5b7afd8de01f2d4d63 atom/browser/api/atom_api_screen_mac.mm
changed in both
  base   100644 6e5c4b9cbe77c1a4004bbc2bf7b0f0089ffb9004 atom/browser/api/atom_api_session.cc
  our    100644 658f913bb60b66ae1bf3aae97d7d9158e56f7ee0 atom/browser/api/atom_api_session.cc
  their  100644 373ef90c393af3921e1cbd2d6375e7b9d9b7ecb5 atom/browser/api/atom_api_session.cc
@@ -451,6 +451,7 @@
   AtomNetworkDelegate* network_delegate =
       static_cast<AtomNetworkDelegate*>(context->network_delegate());
   network_delegate->SetDevToolsNetworkEmulationClientId(client_id);
+<<<<<<< .our
 }
 
 void DestroyGlobalHandle(v8::Isolate* isolate,
@@ -468,6 +469,8 @@
       object->SetAlignedPointerInInternalField(0, nullptr);
     }
   }
+=======
+>>>>>>> .their
 }
 
 }  // namespace
changed in both
  base   100644 83adf62eee8301c49799b5397f2dcf6bfdbbd295 atom/browser/api/atom_api_web_contents.cc
  our    100644 20a1ac2e672f08ffea528b6e094ba530ff8083d1 atom/browser/api/atom_api_web_contents.cc
  their  100644 c004ca93b2a55d75782a4f06c64ea98fe1c73faf atom/browser/api/atom_api_web_contents.cc
@@ -1015,6 +1015,18 @@
                                     content::RenderFrameHost* frame_host) {
   bool handled = true;
   FrameDispatchHelper helper = {this, frame_host};
+<<<<<<< .our
+=======
+  auto relay = NativeWindowRelay::FromWebContents(web_contents());
+  if (relay) {
+    IPC_BEGIN_MESSAGE_MAP_WITH_PARAM(NativeWindow, message, frame_host)
+      IPC_MESSAGE_FORWARD(AtomAutofillFrameHostMsg_HidePopup,
+                          relay->window.get(), NativeWindow::HideAutofillPopup)
+      IPC_MESSAGE_UNHANDLED(handled = false)
+    IPC_END_MESSAGE_MAP()
+  }
+
+>>>>>>> .their
   IPC_BEGIN_MESSAGE_MAP_WITH_PARAM(WebContents, message, frame_host)
     IPC_MESSAGE_HANDLER(AtomFrameHostMsg_Message, OnRendererMessage)
     IPC_MESSAGE_FORWARD_DELAY_REPLY(AtomFrameHostMsg_Message_Sync, &helper,
@@ -1024,10 +1036,14 @@
         FrameDispatchHelper::OnSetTemporaryZoomLevel)
     IPC_MESSAGE_FORWARD_DELAY_REPLY(AtomFrameHostMsg_GetZoomLevel, &helper,
                                     FrameDispatchHelper::OnGetZoomLevel)
+<<<<<<< .our
 #if defined(TOOLKIT_VIEWS) && !defined(OS_MACOSX)
     IPC_MESSAGE_HANDLER(AtomAutofillFrameHostMsg_ShowPopup, ShowAutofillPopup)
     IPC_MESSAGE_HANDLER(AtomAutofillFrameHostMsg_HidePopup, HideAutofillPopup)
 #endif
+=======
+    IPC_MESSAGE_HANDLER(AtomAutofillFrameHostMsg_ShowPopup, ShowAutofillPopup)
+>>>>>>> .their
     IPC_MESSAGE_UNHANDLED(handled = false)
   IPC_END_MESSAGE_MAP()
 
@@ -1075,6 +1091,20 @@
        details.is_same_document, details.did_replace_entry);
 }
 
+<<<<<<< .our
+=======
+int64_t WebContents::GetIDForContents(content::WebContents* web_contents) {
+  int64_t process_id = web_contents->GetRenderProcessHost()->GetID();
+  int64_t routing_id = web_contents->GetMainFrame()->GetRoutingID();
+  int64_t rv = (process_id << 32) + routing_id;
+  return rv;
+}
+
+int64_t WebContents::GetID() const {
+  return WebContents::GetIDForContents(web_contents());
+}
+
+>>>>>>> .their
 int WebContents::GetProcessID() const {
   return web_contents()->GetMainFrame()->GetProcess()->GetID();
 }
@@ -1552,7 +1582,11 @@
 bool WebContents::SendIPCMessage(bool all_frames,
                                  const base::string16& channel,
                                  const base::ListValue& args) {
+<<<<<<< .our
   auto* frame_host = web_contents()->GetMainFrame();
+=======
+  auto frame_host = web_contents()->GetMainFrame();
+>>>>>>> .their
   if (frame_host) {
     return frame_host->Send(new AtomFrameMsg_Message(
         frame_host->GetRoutingID(), all_frames, channel, args));
@@ -1853,6 +1887,7 @@
   rfh->Send(reply_msg);
 }
 
+<<<<<<< .our
 v8::Local<v8::Value> WebContents::GetPreloadPath(v8::Isolate* isolate) const {
   if (auto* web_preferences = WebContentsPreferences::From(web_contents())) {
     base::FilePath::StringType preload;
@@ -1880,6 +1915,25 @@
 }
 
 v8::Local<v8::Value> WebContents::GetOwnerBrowserWindow() const {
+=======
+v8::Local<v8::Value> WebContents::GetWebPreferences(v8::Isolate* isolate) {
+  WebContentsPreferences* web_preferences =
+      WebContentsPreferences::FromWebContents(web_contents());
+  if (!web_preferences)
+    return v8::Null(isolate);
+  return mate::ConvertToV8(isolate, *web_preferences->web_preferences());
+}
+
+v8::Local<v8::Value> WebContents::GetLastWebPreferences(v8::Isolate* isolate) {
+  WebContentsPreferences* web_preferences =
+      WebContentsPreferences::FromWebContents(web_contents());
+  if (!web_preferences)
+    return v8::Null(isolate);
+  return mate::ConvertToV8(isolate, *web_preferences->last_web_preferences());
+}
+
+v8::Local<v8::Value> WebContents::GetOwnerBrowserWindow() {
+>>>>>>> .their
   if (owner_window())
     return BrowserWindow::From(isolate(), owner_window());
   else
changed in both
  base   100644 16f23210557ca816cdeadd50b9332447eca8815f atom/browser/api/atom_api_web_contents.h
  our    100644 7939f8268aa8c3371623e0c15f3b6001d7f1efa4 atom/browser/api/atom_api_web_contents.h
  their  100644 027332a3706d5ac43a4a769234d361304bdc0350 atom/browser/api/atom_api_web_contents.h
@@ -97,6 +97,8 @@
   static void BuildPrototype(v8::Isolate* isolate,
                              v8::Local<v8::FunctionTemplate> prototype);
 
+  static int64_t GetIDForContents(content::WebContents* web_contents);
+
   // Notifies to destroy any guest web contents before destroying self.
   void DestroyWebContents(bool async);
 
@@ -234,8 +236,13 @@
   v8::Local<v8::Value> GetPreloadPath(v8::Isolate* isolate) const;
 
   // Returns the web preferences of current WebContents.
+<<<<<<< .our
   v8::Local<v8::Value> GetWebPreferences(v8::Isolate* isolate) const;
   v8::Local<v8::Value> GetLastWebPreferences(v8::Isolate* isolate) const;
+=======
+  v8::Local<v8::Value> GetWebPreferences(v8::Isolate* isolate);
+  v8::Local<v8::Value> GetLastWebPreferences(v8::Isolate* isolate);
+>>>>>>> .their
 
   // Returns the owner window.
   v8::Local<v8::Value> GetOwnerBrowserWindow() const;
changed in both
  base   100644 3f53f4d3d7204f59037ba80556a2c9896e23aae4 atom/browser/api/atom_api_web_request.cc
  our    100644 c088196f833160ac964e67030fa083302dd090b0 atom/browser/api/atom_api_web_request.cc
  their  100644 ac84ac196b69a121a54dc64b87b7c2c1d6df21b5 atom/browser/api/atom_api_web_request.cc
@@ -40,7 +40,11 @@
 
 namespace {
 
+<<<<<<< .our
 template <typename Method, typename Event, typename Listener>
+=======
+template<typename Method, typename Event, typename Listener>
+>>>>>>> .their
 void CallNetworkDelegateMethod(
     brightray::URLRequestContextGetter* url_request_context_getter,
     Method method,
@@ -95,14 +99,24 @@
   }
 
   brightray::URLRequestContextGetter* url_request_context_getter =
+<<<<<<< .our
       browser_context_->GetRequestContext();
+=======
+      browser_context_->url_request_context_getter();
+>>>>>>> .their
   if (!url_request_context_getter)
     return;
   BrowserThread::PostTask(
       BrowserThread::IO, FROM_HERE,
+<<<<<<< .our
       base::BindOnce(&CallNetworkDelegateMethod<Method, Event, Listener>,
                      base::RetainedRef(url_request_context_getter), method,
                      type, std::move(patterns), std::move(listener)));
+=======
+      base::Bind(&CallNetworkDelegateMethod<Method, Event, Listener>,
+                 base::RetainedRef(url_request_context_getter),
+                 method, type, std::move(patterns), std::move(listener)));
+>>>>>>> .their
 }
 
 // static
removed in local
  base   100644 993f9680ccb475f8870a2e3b4da2d20472531d91 atom/browser/api/atom_api_window.cc
  their  100644 d177afb300f65ba14daa8c07042d4d768b00fd54 atom/browser/api/atom_api_window.cc
removed in local
  base   100644 f86c387a34afb15920738413c6819176081b5ee7 atom/browser/api/atom_api_window.h
  their  100644 e07f34e23f060906942b5fce81081965ea792204 atom/browser/api/atom_api_window.h
changed in both
  base   100644 8810fed4b9aef78842fb65db93ed2efebabb6928 atom/browser/api/event.cc
  our    100644 7b617034eca5a229fc9323bfd6d531ebded752d6 atom/browser/api/event.cc
  their  100644 1ee0d57e36068c9b6427c278e9a7a5a66b7f8f79 atom/browser/api/event.cc
@@ -6,7 +6,10 @@
 
 #include "atom/common/api/api_messages.h"
 #include "atom/common/native_mate_converters/string16_converter.h"
+<<<<<<< .our
 #include "atom/common/native_mate_converters/value_converter.h"
+=======
+>>>>>>> .their
 #include "content/public/browser/render_frame_host.h"
 #include "content/public/browser/web_contents.h"
 #include "native_mate/object_template_builder.h"
@@ -27,6 +30,7 @@
   message_ = message;
 
   Observe(content::WebContents::FromRenderFrameHost(sender));
+<<<<<<< .our
 }
 
 void Event::RenderFrameDeleted(content::RenderFrameHost* rfh) {
@@ -42,6 +46,23 @@
     sender_ = new_rfh;
 }
 
+=======
+}
+
+void Event::RenderFrameDeleted(content::RenderFrameHost* rfh) {
+  if (sender_ != rfh)
+    return;
+  sender_ = nullptr;
+  message_ = nullptr;
+}
+
+void Event::RenderFrameHostChanged(content::RenderFrameHost* old_rfh,
+                                   content::RenderFrameHost* new_rfh) {
+  if (sender_ && sender_ == old_rfh)
+    sender_ = new_rfh;
+}
+
+>>>>>>> .their
 void Event::FrameDeleted(content::RenderFrameHost* rfh) {
   if (sender_ != rfh)
     return;
@@ -57,7 +78,11 @@
   if (message_ == nullptr || sender_ == nullptr)
     return false;
 
+<<<<<<< .our
   AtomFrameHostMsg_Message_Sync::WriteReplyParams(message_, result);
+=======
+  AtomFrameHostMsg_Message_Sync::WriteReplyParams(message_, json);
+>>>>>>> .their
   bool success = sender_->Send(message_);
   message_ = nullptr;
   sender_ = nullptr;
changed in both
  base   100644 d73bd2f64b55b5eb0827f819805578559b947f46 atom/browser/api/event.h
  our    100644 fbec8f27574691005d203adbafb50709f5c2d010 atom/browser/api/event.h
  their  100644 05ad7daff8ac524294c1cacb66f876efc9716dd4 atom/browser/api/event.h
@@ -44,8 +44,13 @@
 
  private:
   // Replyer for the synchronous messages.
+<<<<<<< .our
   content::RenderFrameHost* sender_ = nullptr;
   IPC::Message* message_ = nullptr;
+=======
+  content::RenderFrameHost* sender_;
+  IPC::Message* message_;
+>>>>>>> .their
 
   DISALLOW_COPY_AND_ASSIGN(Event);
 };
changed in both
  base   100644 3dbcd0601ef8a63cd6712b566cdc7f388c85e3ee atom/browser/api/event_emitter.cc
  our    100644 c6e810b51225c8f89eaf53ac3e46381b52ba63b5 atom/browser/api/event_emitter.cc
  their  100644 91769cbb94794a978732773612a3fec245acd750 atom/browser/api/event_emitter.cc
changed in both
  base   100644 8d9d2960df35a33a09dfc79c4c35d424738df43f atom/browser/api/event_emitter.h
  our    100644 5e4ca3b4ffcb184583ef386100eabda7a9e00da0 atom/browser/api/event_emitter.h
  their  100644 8145113084a9c0c34ea808e3712879f5f70737c9 atom/browser/api/event_emitter.h
changed in both
  base   100644 c83a99c2b38708ca296b4c9215e26cb58eb9a7d2 atom/browser/atom_browser_client.cc
  our    100644 57c4ee582405e6d501ec23940ccb10689ecd64a1 atom/browser/atom_browser_client.cc
  their  100644 37dd43c49fc8056cf1a511d8c5895535a556cf9e atom/browser/atom_browser_client.cc
@@ -343,6 +343,11 @@
       web_preferences->AppendCommandLineSwitches(command_line);
     SessionPreferences::AppendExtraCommandLineSwitches(
         web_contents->GetBrowserContext(), command_line);
+
+    auto context_id = atom::api::WebContents::GetIDForContents(
+      web_contents);
+    command_line->AppendSwitchASCII(switches::kContextId,
+      base::IntToString(context_id));
   }
 }
 
changed in both
  base   100644 f16ee50158508565cc1e043d3257ad687cc69215 atom/browser/browser.cc
  our    100644 ce35de64d60c6767ac52596c1b32e7bde5ceefa0 atom/browser/browser.cc
  their  100644 3ba915f91eb3403df9630697e77cce9ed7fa3307 atom/browser/browser.cc
changed in both
  base   100644 0970b26b776b34f68e5f22776e74c19ddcc039ad atom/browser/browser.h
  our    100644 aed7d25c37da59c0dd5e09940a064c329353a0b2 atom/browser/browser.h
  their  100644 a8c1a8c5e7c4409e3a78279da46fb2ba6112f409 atom/browser/browser.h
@@ -277,7 +277,11 @@
   bool is_ready_ = false;
 
   // The browser is being shutdown.
+<<<<<<< .our
   bool is_shutdown_ = false;
+=======
+  bool is_shutdown_;
+>>>>>>> .their
 
   int badge_count_ = 0;
 
changed in both
  base   100644 7c154b60b00e25c42847ceefb98723b50ea03dd0 atom/browser/native_browser_view.h
  our    100644 56937e4c8c69e3605d2b6cc71a0877b74ff4e83d atom/browser/native_browser_view.h
  their  100644 cab6980fa2cf035c1a5ca6b4aee822a0ee604fd4 atom/browser/native_browser_view.h
changed in both
  base   100644 17b0a1ee9006dd70888165a9209076fd7065f3cc atom/browser/native_browser_view_mac.mm
  our    100644 0416e26e89f1e0f37366ef1798b4359da0729225 atom/browser/native_browser_view_mac.mm
  their  100644 86df632638ef7772270569824515b251470d0c08 atom/browser/native_browser_view_mac.mm
changed in both
  base   100644 78e788b3019c23bce13fdc8d94385d4a3937cf22 atom/browser/native_browser_view_views.cc
  our    100644 6414005a1e40d80ae86102b12edee0255cab9adb atom/browser/native_browser_view_views.cc
  their  100644 def64d12e3520fa15a2b6779147a819a6eaec2f8 atom/browser/native_browser_view_views.cc
changed in both
  base   100644 5dcda13447cde098fccaf8782fefb97d861d47f4 atom/browser/native_browser_view_views.h
  our    100644 8f8e860292baddad1156c50ae7cfaa0fd6e87d99 atom/browser/native_browser_view_views.h
  their  100644 abf47178302ad7527c1640a3f41492f871f137e5 atom/browser/native_browser_view_views.h
changed in both
  base   100644 34778fb6434707e6ae3c70ab55e48e87eb556448 atom/browser/native_window.cc
  our    100644 4ff2bcfcabfd34d8563f9ed213c03655a99dd9c6 atom/browser/native_window.cc
  their  100644 ec671732a6d57de95b4a8a20a7df1d3984b3a7e5 atom/browser/native_window.cc
changed in both
  base   100644 d1cfa7cc352971772689ecd60a110b48ef1a7eaa atom/browser/native_window.h
  our    100644 35b67e2dd230692c415a32aae5f0a5e99ab74ac0 atom/browser/native_window.h
  their  100644 b96f2ea8a2946d68818997e6a5488c85652aab1b atom/browser/native_window.h
@@ -221,6 +221,8 @@
       content::WebContents*,
       const content::NativeWebKeyboardEvent& event) {}
 
+  virtual void UpdateDraggableRegionViews() {}
+
   // Public API used by platform-dependent delegates and observers to send UI
   // related notifications.
   void NotifyWindowRequestPreferredWith(int* width);
changed in both
  base   100644 60d8fc23f59a842c100412b1c236b87d0815a7a0 atom/browser/native_window_mac.h
  our    100644 44a78198f44cdba9875e3fb27c8e2c87eaa6f33b atom/browser/native_window_mac.h
  their  100644 9e8c3aef87dd8d2d4a3260587b7013d260649b55 atom/browser/native_window_mac.h
@@ -118,8 +118,11 @@
   void MoveTabToNewWindow() override;
   void ToggleTabBar() override;
   bool AddTabbedWindow(NativeWindow* window) override;
+<<<<<<< .our
 
   bool SetWindowButtonVisibility(bool visible) override;
+=======
+>>>>>>> .their
 
   void SetVibrancy(const std::string& type) override;
   void SetTouchBar(
@@ -130,8 +133,19 @@
   gfx::Rect ContentBoundsToWindowBounds(const gfx::Rect& bounds) const override;
   gfx::Rect WindowBoundsToContentBounds(const gfx::Rect& bounds) const override;
 
+<<<<<<< .our
   // Use a custom content view instead of Chromium's BridgedContentView.
   void OverrideNSWindowContentView();
+=======
+  // content::WebContentsObserver:
+  void RenderViewHostChanged(content::RenderViewHost* old_host,
+                             content::RenderViewHost* new_host) override;
+
+  // Refresh the DraggableRegion views.
+  void UpdateDraggableRegionViews() override {
+    UpdateDraggableRegionViews(draggable_regions_);
+  }
+>>>>>>> .their
 
   // Set the attribute of NSWindow while work around a bug of zoom button.
   void SetStyleMask(bool on, NSUInteger flag);
changed in both
  base   100644 ad1713e401240dbc1c2054551d0caeb41aea2884 atom/browser/native_window_mac.mm
  our    100644 004263ec127709067e903ffbf31003b8844226b4 atom/browser/native_window_mac.mm
  their  100644 0397c62d8df94b3ce66482c0d9c4b3b87ac97a45 atom/browser/native_window_mac.mm
@@ -28,9 +28,12 @@
 #include "skia/ext/skia_utils_mac.h"
 #include "ui/gfx/skia_util.h"
 #include "ui/gl/gpu_switching_manager.h"
+<<<<<<< .our
 #include "ui/views/background.h"
 #include "ui/views/cocoa/bridged_native_widget.h"
 #include "ui/views/widget/widget.h"
+=======
+>>>>>>> .their
 
 // This view always takes the size of its superview. It is intended to be used
 // as a NSWindow's contentView.  It is needed because NSWindow's implementation
@@ -1144,10 +1147,17 @@
 }
 
 bool NativeWindowMac::AddTabbedWindow(NativeWindow* window) {
+<<<<<<< .our
   if (window_ == window->GetNativeWindow()) {
     return false;
   } else {
     if (@available(macOS 10.12, *))
+=======
+  if (window_.get() == window->GetNativeWindow()) {
+    return false;
+  } else {
+    if ([window_ respondsToSelector:@selector(addTabbedWindow:ordered:)])
+>>>>>>> .their
       [window_ addTabbedWindow:window->GetNativeWindow() ordered:NSWindowAbove];
   }
   return true;
@@ -1185,15 +1195,22 @@
       return;
     }
 
+<<<<<<< .our
     background_color_before_vibrancy_.reset([[window_ backgroundColor] retain]);
     transparency_before_vibrancy_ = [window_ titlebarAppearsTransparent];
     ui::GpuSwitchingManager::SetTransparent(true);
+=======
+    [vibrant_view removeFromSuperview];
+    [window_ setVibrantView:nil];
+    ui::GpuSwitchingManager::SetTransparent(transparent());
+>>>>>>> .their
 
     if (title_bar_style_ != NORMAL) {
       [window_ setTitlebarAppearsTransparent:YES];
       [window_ setBackgroundColor:[NSColor clearColor]];
     }
 
+<<<<<<< .our
     NSVisualEffectView* effect_view = (NSVisualEffectView*)vibrant_view;
     if (effect_view == nil) {
       effect_view = [[[NSVisualEffectView alloc]
@@ -1208,6 +1225,31 @@
                              positioned:NSWindowBelow
                              relativeTo:nil];
     }
+=======
+  SetRenderWidgetHostOpaque(false);
+  background_color_before_vibrancy_.reset([window_ backgroundColor]);
+  transparency_before_vibrancy_ = [window_ titlebarAppearsTransparent];
+  ui::GpuSwitchingManager::SetTransparent(true);
+
+  if (title_bar_style_ != NORMAL) {
+    [window_ setTitlebarAppearsTransparent:YES];
+    [window_ setBackgroundColor:[NSColor clearColor]];
+  }
+
+  NSVisualEffectView* effect_view = (NSVisualEffectView*)vibrant_view;
+  if (effect_view == nil) {
+    effect_view = [[[NSVisualEffectView alloc]
+        initWithFrame: [[window_ contentView] bounds]] autorelease];
+    [window_ setVibrantView:(NSView*)effect_view];
+
+    [effect_view setAutoresizingMask:NSViewWidthSizable | NSViewHeightSizable];
+    [effect_view setBlendingMode:NSVisualEffectBlendingModeBehindWindow];
+    [effect_view setState:NSVisualEffectStateActive];
+    [[window_ contentView] addSubview:effect_view
+                           positioned:NSWindowBelow
+                           relativeTo:nil];
+  }
+>>>>>>> .their
 
     NSVisualEffectMaterial vibrancyType = NSVisualEffectMaterialLight;
 
@@ -1387,6 +1429,7 @@
     [parent->GetNativeWindow() addChildWindow:window_ ordered:NSWindowAbove];
 }
 
+<<<<<<< .our
 void NativeWindowMac::ShowWindowButton(NSWindowButton button) {
   auto view = [window_ standardWindowButton:button];
   [view.superview addSubview:view positioned:NSWindowAbove relativeTo:nil];
@@ -1395,6 +1438,35 @@
 void NativeWindowMac::SetForwardMouseMessages(bool forward) {
   [window_ setAcceptsMouseMovedEvents:forward];
 }
+=======
+  // Remove all ControlRegionViews that are added last time.
+  // Note that [webView subviews] returns the view's mutable internal array and
+  // it should be copied to avoid mutating the original array while enumerating
+  // it.
+  base::scoped_nsobject<NSArray> subviews([[webView subviews] copy]);
+  for (NSView* subview in subviews.get())
+    if ([subview isKindOfClass:[ControlRegionView class]])
+      [subview removeFromSuperview];
+
+  // Draggable regions is implemented by having the whole web view draggable
+  // (mouseDownCanMoveWindow) and overlaying regions that are not draggable.
+  std::vector<gfx::Rect> drag_exclude_rects =
+      CalculateNonDraggableRegions(regions, webViewWidth, webViewHeight);
+
+  if (browser_view_) {
+    browser_view_->UpdateDraggableRegions(drag_exclude_rects);
+  }
+
+  // Create and add a ControlRegionView for each region that needs to be
+  // excluded from the dragging.
+  for (const auto& rect : drag_exclude_rects) {
+    base::scoped_nsobject<NSView> controlRegion(
+        [[ControlRegionView alloc] initWithFrame:NSZeroRect]);
+    [controlRegion setFrame:NSMakeRect(rect.x(), webViewHeight - rect.bottom(),
+                                       rect.width(), rect.height())];
+    [webView addSubview:controlRegion];
+  }
+>>>>>>> .their
 
 void NativeWindowMac::OverrideNSWindowContentView() {
   // When using `views::Widget` to hold WebContents, Chromium would use
changed in both
  base   100644 008109970ec8d3c55a2028a173c3b941908d78a7 atom/browser/native_window_views.cc
  our    100644 0dba39942f92d54ba34db7709b73012055680d94 atom/browser/native_window_views.cc
  their  100644 f3e6fc09c5850cbc3d6989a2a94607b1f9a5d514 atom/browser/native_window_views.cc
@@ -1115,7 +1115,11 @@
   if (!active && IsMenuBarAutoHide() && IsMenuBarVisible())
     SetMenuBarVisibility(false);
 
+<<<<<<< .our
   root_view_->ResetAltState();
+=======
+  menu_bar_alt_pressed_ = false;
+>>>>>>> .their
 }
 
 void NativeWindowViews::OnWidgetBoundsChanged(views::Widget* changed_widget,
@@ -1237,9 +1241,138 @@
 void NativeWindowViews::HandleKeyboardEvent(
     content::WebContents*,
     const content::NativeWebKeyboardEvent& event) {
+<<<<<<< .our
   keyboard_event_handler_->HandleKeyboardEvent(event,
                                                root_view_->GetFocusManager());
   root_view_->HandleKeyEvent(event);
+=======
+  keyboard_event_handler_->HandleKeyboardEvent(event, GetFocusManager());
+
+  if (!menu_bar_)
+    return;
+
+  // Show accelerator when "Alt" is pressed.
+  if (menu_bar_visible_ && IsAltKey(event))
+    menu_bar_->SetAcceleratorVisibility(
+        event.GetType() == blink::WebInputEvent::kRawKeyDown);
+
+  // Show the submenu when "Alt+Key" is pressed.
+  if (event.GetType() == blink::WebInputEvent::kRawKeyDown &&
+      !IsAltKey(event) && IsAltModifier(event)) {
+    if (!menu_bar_visible_ &&
+        (menu_bar_->HasAccelerator(event.windows_key_code)))
+      SetMenuBarVisibility(true);
+    menu_bar_->ActivateAccelerator(event.windows_key_code);
+    return;
+  }
+
+  if (!menu_bar_autohide_)
+    return;
+
+  // Toggle the menu bar only when a single Alt is released.
+  if (event.GetType() == blink::WebInputEvent::kRawKeyDown && IsAltKey(event)) {
+    // When a single Alt is pressed:
+    menu_bar_alt_pressed_ = true;
+  } else if (event.GetType() == blink::WebInputEvent::kKeyUp &&
+             IsAltKey(event) && menu_bar_alt_pressed_) {
+    // When a single Alt is released right after a Alt is pressed:
+    menu_bar_alt_pressed_ = false;
+    SetMenuBarVisibility(!menu_bar_visible_);
+  } else {
+    // When any other keys except single Alt have been pressed/released:
+    menu_bar_alt_pressed_ = false;
+  }
+}
+
+void NativeWindowViews::ShowAutofillPopup(
+    content::RenderFrameHost* frame_host,
+    content::WebContents* web_contents,
+    const gfx::RectF& bounds,
+    const std::vector<base::string16>& values,
+    const std::vector<base::string16>& labels) {
+  bool is_offsceen = false;
+  bool is_embedder_offscreen = false;
+
+  auto* web_contents_preferences =
+      WebContentsPreferences::FromWebContents(web_contents);
+  if (web_contents_preferences) {
+    const auto* web_preferences = web_contents_preferences->web_preferences();
+
+    web_preferences->GetBoolean("offscreen", &is_offsceen);
+    int guest_instance_id = 0;
+    web_preferences->GetInteger(options::kGuestInstanceID, &guest_instance_id);
+
+    if (guest_instance_id) {
+      auto manager = WebViewManager::GetWebViewManager(web_contents);
+      if (manager) {
+        auto embedder = manager->GetEmbedder(guest_instance_id);
+        if (embedder) {
+          is_embedder_offscreen = WebContentsPreferences::IsPreferenceEnabled(
+              "offscreen", embedder);
+        }
+      }
+    }
+  }
+
+  autofill_popup_->CreateView(
+      frame_host,
+      is_offsceen || is_embedder_offscreen,
+      widget(),
+      bounds);
+  autofill_popup_->SetItems(values, labels);
+  autofill_popup_->UpdatePopupBounds(menu_bar_visible_ ? 0 : kMenuBarHeight);
+}
+
+void NativeWindowViews::HideAutofillPopup(
+    content::RenderFrameHost* frame_host) {
+  autofill_popup_->Hide();
+}
+
+void NativeWindowViews::Layout() {
+  const auto size = GetContentsBounds().size();
+  const auto menu_bar_bounds =
+      menu_bar_visible_ ? gfx::Rect(0, 0, size.width(), kMenuBarHeight)
+                        : gfx::Rect();
+  if (menu_bar_) {
+    menu_bar_->SetBoundsRect(menu_bar_bounds);
+  }
+
+  if (web_view_) {
+    web_view_->SetBoundsRect(
+        gfx::Rect(0, menu_bar_bounds.height(), size.width(),
+                  size.height() - menu_bar_bounds.height()));
+  }
+
+  if (autofill_popup_.get())
+    autofill_popup_->UpdatePopupBounds(menu_bar_visible_ ? 0 : kMenuBarHeight);
+}
+
+gfx::Size NativeWindowViews::GetMinimumSize() const {
+  return NativeWindow::GetMinimumSize();
+}
+
+gfx::Size NativeWindowViews::GetMaximumSize() const {
+  return NativeWindow::GetMaximumSize();
+}
+
+bool NativeWindowViews::AcceleratorPressed(const ui::Accelerator& accelerator) {
+  return accelerator_util::TriggerAcceleratorTableCommand(
+      &accelerator_table_, accelerator);
+}
+
+void NativeWindowViews::RegisterAccelerators(AtomMenuModel* menu_model) {
+  // Clear previous accelerators.
+  views::FocusManager* focus_manager = GetFocusManager();
+  accelerator_table_.clear();
+  focus_manager->UnregisterAccelerators(this);
+
+  // Register accelerators with focus manager.
+  accelerator_util::GenerateAcceleratorTable(&accelerator_table_, menu_model);
+  for (const auto& iter : accelerator_table_) {
+    focus_manager->RegisterAccelerator(
+        iter.first, ui::AcceleratorManager::kNormalPriority, this);
+  }
+>>>>>>> .their
 }
 
 ui::WindowShowState NativeWindowViews::GetRestoredState() {
changed in both
  base   100644 a39e84ce5b8d7b757233dab4bed646e08cb8c76a atom/browser/net/asar/url_request_asar_job.cc
  our    100644 85eb2e1dd142b6d64aafb5350ae47603db989e8f atom/browser/net/asar/url_request_asar_job.cc
  their  100644 a6fe5e26540c9533f16dcf56fc955d0025de3b4a atom/browser/net/asar/url_request_asar_job.cc
changed in both
  base   100644 9b0f3a98dc53b922c0d070244f8f7457f332d850 atom/browser/net/atom_network_delegate.cc
  our    100644 e71ea74317b69f31a5aac8e723902748972fed8f atom/browser/net/atom_network_delegate.cc
  their  100644 239a64016febb8f9d81206d7f2a7d100ccd1f293 atom/browser/net/atom_network_delegate.cc
@@ -250,6 +250,7 @@
 
 AtomNetworkDelegate::~AtomNetworkDelegate() {}
 
+<<<<<<< .our
 void AtomNetworkDelegate::SetSimpleListenerInIO(SimpleEvent type,
                                                 URLPatterns patterns,
                                                 SimpleListener callback) {
@@ -266,6 +267,26 @@
     response_listeners_.erase(type);
   else
     response_listeners_[type] = {std::move(patterns), std::move(callback)};
+=======
+void AtomNetworkDelegate::SetSimpleListenerInIO(
+    SimpleEvent type,
+    URLPatterns patterns,
+    SimpleListener callback) {
+  if (callback.is_null())
+    simple_listeners_.erase(type);
+  else
+    simple_listeners_[type] = { std::move(patterns), std::move(callback) };
+}
+
+void AtomNetworkDelegate::SetResponseListenerInIO(
+    ResponseEvent type,
+    URLPatterns patterns,
+    ResponseListener callback) {
+  if (callback.is_null())
+    response_listeners_.erase(type);
+  else
+    response_listeners_[type] = { std::move(patterns), std::move(callback) };
+>>>>>>> .their
 }
 
 void AtomNetworkDelegate::SetDevToolsNetworkEmulationClientId(
changed in both
  base   100644 e00c26ff2cbc134b987b4361896971e48056951d atom/browser/net/atom_network_delegate.h
  our    100644 39a7a8ddfcda17fd7d022331132b54485d07a279 atom/browser/net/atom_network_delegate.h
  their  100644 ad37a926d4732d94526f74b2f927e35504d2efe3 atom/browser/net/atom_network_delegate.h
changed in both
  base   100644 3313eba36bb903426778fac6cd18258a95fec677 atom/browser/resources/mac/Info.plist
  our    100644 9094f0f7335edf833d51f688851e6a105de60433 atom/browser/resources/mac/Info.plist
  their  100644 6d0fe2ab89b8d9b3737456dc5f7fb22ef6dd6098 atom/browser/resources/mac/Info.plist
@@ -17,9 +17,15 @@
   <key>CFBundleIconFile</key>
   <string>electron.icns</string>
   <key>CFBundleVersion</key>
+<<<<<<< .our
   <string>4.0.0</string>
   <key>CFBundleShortVersionString</key>
   <string>4.0.0</string>
+=======
+  <string>2.0.0</string>
+  <key>CFBundleShortVersionString</key>
+  <string>2.0.0</string>
+>>>>>>> .their
   <key>LSApplicationCategoryType</key>
   <string>public.app-category.developer-tools</string>
   <key>LSMinimumSystemVersion</key>
changed in both
  base   100644 c349f99d712ff69960d35b18587ddb6c417f7cd5 atom/browser/resources/win/atom.rc
  our    100644 c0bd831e8bddf10180f75cd40694831e2e98622d atom/browser/resources/win/atom.rc
  their  100644 2da4c1d50dc436530b90ce2c6e3c720c8a7ece8e atom/browser/resources/win/atom.rc
@@ -56,8 +56,13 @@
 //
 
 VS_VERSION_INFO VERSIONINFO
+<<<<<<< .our
  FILEVERSION 4,0,0,20180821
  PRODUCTVERSION 4,0,0,20180821
+=======
+ FILEVERSION 2,0,0,5
+ PRODUCTVERSION 2,0,0,5
+>>>>>>> .their
  FILEFLAGSMASK 0x3fL
 #ifdef _DEBUG
  FILEFLAGS 0x1L
@@ -74,12 +79,20 @@
         BEGIN
             VALUE "CompanyName", "GitHub, Inc."
             VALUE "FileDescription", "Electron"
+<<<<<<< .our
             VALUE "FileVersion", "4.0.0"
+=======
+            VALUE "FileVersion", "2.0.0"
+>>>>>>> .their
             VALUE "InternalName", "electron.exe"
             VALUE "LegalCopyright", "Copyright (C) 2015 GitHub, Inc. All rights reserved."
             VALUE "OriginalFilename", "electron.exe"
             VALUE "ProductName", "Electron"
+<<<<<<< .our
             VALUE "ProductVersion", "4.0.0"
+=======
+            VALUE "ProductVersion", "2.0.0"
+>>>>>>> .their
             VALUE "SquirrelAwareVersion", "1"
         END
     END
changed in both
  base   100644 8bdf4e0c2be32fc7d704bc989d7ccec5dd5db672 atom/browser/ui/cocoa/atom_menu_controller.mm
  our    100644 cecf30ce1c88e007957a65427648941765a6067e atom/browser/ui/cocoa/atom_menu_controller.mm
  their  100644 a117a1f4fa4158cccb3d9b942e7aaa2e9960492b atom/browser/ui/cocoa/atom_menu_controller.mm
@@ -334,8 +334,13 @@
   if (isMenuOpen_) {
     isMenuOpen_ = NO;
     model_->MenuWillClose();
+<<<<<<< .our
     // Post async task so that itemSelected runs before the close callback
     // deletes the controller from the map which deallocates it
+=======
+    // Post async task so that itemSelected runs before the close callback	
+    // deletes the controller from the map which deallocates it	
+>>>>>>> .their
     if (!closeCallback.is_null()) {
       BrowserThread::PostTask(BrowserThread::UI, FROM_HERE, closeCallback);
     }
changed in both
  base   100644 b26d472db131f7be9d5bfbbd1cebfc992743d312 atom/browser/ui/file_dialog_mac.mm
  our    100644 18b18a8b240cda5512ae49e0afde5c749bdf75c0 atom/browser/ui/file_dialog_mac.mm
  their  100644 30c656cb115ad93b074e73917654f5f5a898f0a3 atom/browser/ui/file_dialog_mac.mm
changed in both
  base   100644 a358f676a8c41d15bb9c3157cce4a62ef8356855 atom/browser/ui/tray_icon_cocoa.mm
  our    100644 2c434d7a9e312adfb3802628a3d092a95d4ac49f atom/browser/ui/tray_icon_cocoa.mm
  their  100644 6931618f9b8ef8ed1d40c8a87ed7c577da6c0450 atom/browser/ui/tray_icon_cocoa.mm
changed in both
  base   100644 e1836ad68985f6068a5ea4be76d6f58682056d04 atom/browser/ui/tray_icon_gtk.cc
  our    100644 4c780285c80a157afca74b0927175ba3b045def9 atom/browser/ui/tray_icon_gtk.cc
  their  100644 eb7be1ed3b4345cf825075785c1c1708a7b69d30 atom/browser/ui/tray_icon_gtk.cc
@@ -36,9 +36,16 @@
   if (libgtkui::AppIndicatorIcon::CouldOpen()) {
     ++indicators_count;
     icon_.reset(new libgtkui::AppIndicatorIcon(
+<<<<<<< .our
         base::StringPrintf("%s%d", Browser::Get()->GetName().c_str(),
                            indicators_count),
         image.AsImageSkia(), toolTip));
+=======
+        base::StringPrintf(
+            "%s%d", Browser::Get()->GetName().c_str(), indicators_count),
+        image.AsImageSkia(),
+        toolTip));
+>>>>>>> .their
   } else {
     icon_.reset(new libgtkui::Gtk2StatusIcon(image.AsImageSkia(), toolTip));
   }
changed in both
  base   100644 bf9801a1457740da391c75621214b8d91cb7467d atom/browser/ui/views/menu_bar.cc
  our    100644 e838d3cc217b5ffdb77226beff0d7217539f23f9 atom/browser/ui/views/menu_bar.cc
  their  100644 d963c121bbd29bf3f67b488666297c86b4fee225 atom/browser/ui/views/menu_bar.cc
@@ -18,11 +18,17 @@
 
 namespace {
 
+<<<<<<< .our
+=======
+const char kViewClassName[] = "ElectronMenuBar";
+
+>>>>>>> .their
 // Default color of the menu bar.
 const SkColor kDefaultColor = SkColorSetARGB(255, 233, 233, 233);
 
 }  // namespace
 
+<<<<<<< .our
 const char MenuBar::kViewClassName[] = "ElectronMenuBar";
 
 MenuBar::MenuBar(views::View* window)
@@ -32,12 +38,35 @@
   SetLayoutManager(
       std::make_unique<views::BoxLayout>(views::BoxLayout::kHorizontal));
   window_->GetFocusManager()->AddFocusChangeListener(this);
+=======
+MenuBar::MenuBar(NativeWindow* window)
+    : background_color_(kDefaultColor), menu_model_(NULL), window_(window) {
+  RefreshColorCache();
+  UpdateViewColors();
+  SetLayoutManager(new views::BoxLayout(views::BoxLayout::kHorizontal));
+>>>>>>> .their
 }
 
 MenuBar::~MenuBar() {
   window_->GetFocusManager()->RemoveFocusChangeListener(this);
 }
 
+<<<<<<< .our
+=======
+void MenuBar::AddedToWidget() {
+  auto fm = GetFocusManager();
+  fm->AddFocusChangeListener(this);
+  // Note that we don't own fm -- this manages the _connection_
+  focus_manager_.reset(fm, [this](views::FocusManager* fm) {
+    fm->RemoveFocusChangeListener(this);
+  });
+}
+
+void MenuBar::RemovedFromWidget() {
+  focus_manager_.reset();
+}
+
+>>>>>>> .their
 void MenuBar::SetMenu(AtomMenuModel* model) {
   menu_model_ = model;
   RebuildChildren();
@@ -61,7 +90,11 @@
 }
 
 void MenuBar::ActivateAccelerator(base::char16 key) {
+<<<<<<< .our
   auto* child = FindAccelChild(key);
+=======
+  auto child = FindAccelChild(key);
+>>>>>>> .their
   if (child)
     static_cast<SubmenuButton*>(child)->Activate(nullptr);
 }
@@ -151,7 +184,11 @@
 void MenuBar::RebuildChildren() {
   RemoveAllChildViews(true);
   for (int i = 0, n = GetItemCount(); i < n; ++i) {
+<<<<<<< .our
     auto* button =
+=======
+    auto button =
+>>>>>>> .their
         new SubmenuButton(menu_model_->GetLabelAt(i), this, background_color_);
     button->set_tag(i);
     AddChildView(button);
@@ -169,7 +206,11 @@
 #if defined(USE_X11)
   const auto& textColor = has_focus_ ? enabled_color_ : disabled_color_;
   for (auto* child : GetChildrenInZOrder()) {
+<<<<<<< .our
     auto* button = static_cast<SubmenuButton*>(child);
+=======
+    auto button = static_cast<SubmenuButton*>(child);
+>>>>>>> .their
     button->SetTextColor(views::Button::STATE_NORMAL, textColor);
     button->SetTextColor(views::Button::STATE_DISABLED, disabled_color_);
     button->SetTextColor(views::Button::STATE_PRESSED, enabled_color_);
@@ -178,7 +219,11 @@
   }
 #elif defined(OS_WIN)
   for (auto* child : GetChildrenInZOrder()) {
+<<<<<<< .our
     auto* button = static_cast<SubmenuButton*>(child);
+=======
+    auto button = static_cast<SubmenuButton*>(child);
+>>>>>>> .their
     button->SetUnderlineColor(color_utils::GetSysSkColor(COLOR_MENUTEXT));
   }
 #endif
changed in both
  base   100644 761e31b98ea75f44bcd016da3b34b7615f3b409f atom/browser/ui/views/menu_bar.h
  our    100644 2b10ba3e3bf2ccfc0453fdb59ad022ef7da8ed5b atom/browser/ui/views/menu_bar.h
  their  100644 13cfa32f3988881e3aa87cae6cae65656fa68d70 atom/browser/ui/views/menu_bar.h
@@ -5,6 +5,12 @@
 #ifndef ATOM_BROWSER_UI_VIEWS_MENU_BAR_H_
 #define ATOM_BROWSER_UI_VIEWS_MENU_BAR_H_
 
+<<<<<<< .our
+=======
+#include <memory>
+
+#include "atom/browser/native_window.h"
+>>>>>>> .their
 #include "atom/browser/ui/atom_menu_model.h"
 #include "ui/views/controls/button/menu_button_listener.h"
 #include "ui/views/focus/focus_manager.h"
@@ -49,7 +55,9 @@
 
  protected:
   // views::View:
+  void AddedToWidget() override;
   const char* GetClassName() const override;
+  void RemovedFromWidget() override;
 
   // views::MenuButtonListener:
   void OnMenuButtonClicked(views::MenuButton* source,
@@ -79,6 +87,11 @@
 
   bool has_focus_ = true;
 
+  View* FindAccelChild(base::char16 key);
+
+  std::shared_ptr<views::FocusManager> focus_manager_;
+  bool has_focus_ = true;
+
   DISALLOW_COPY_AND_ASSIGN(MenuBar);
 };
 
changed in both
  base   100644 3c3cff3c65410f2e61bdade6e457a096ffba3a54 atom/browser/ui/views/submenu_button.cc
  our    100644 1124d3d01471876fefa2757570ba3cff796a991c atom/browser/ui/views/submenu_button.cc
  their  100644 baee28f2cd6931611e048ec46c83e602b95b4b59 atom/browser/ui/views/submenu_button.cc
@@ -82,8 +82,12 @@
 
 bool SubmenuButton::GetUnderlinePosition(const base::string16& text,
                                          base::char16* accelerator,
+<<<<<<< .our
                                          int* start,
                                          int* end) const {
+=======
+                                         int* start, int* end) const {
+>>>>>>> .their
   int pos, span;
   base::string16 trimmed = gfx::RemoveAcceleratorChar(text, '&', &pos, &span);
   if (pos > -1 && span != 0) {
@@ -96,9 +100,14 @@
   return false;
 }
 
+<<<<<<< .our
 void SubmenuButton::GetCharacterPosition(const base::string16& text,
                                          int index,
                                          int* pos) const {
+=======
+void SubmenuButton::GetCharacterPosition(
+    const base::string16& text, int index, int* pos) const {
+>>>>>>> .their
   int height = 0;
   gfx::Canvas::SizeStringInt(text.substr(0, index), gfx::FontList(), pos,
                              &height, 0, 0);
changed in both
  base   100644 5c05481cbbfb85b5d77511cb91cc19cc8ef0e626 atom/browser/ui/views/submenu_button.h
  our    100644 d8b7785da131271e88533879d090badfd6e49dd5 atom/browser/ui/views/submenu_button.h
  their  100644 0f7eddf4c914790675f0c9bfab696b2a96b91f74 atom/browser/ui/views/submenu_button.h
@@ -33,11 +33,17 @@
  private:
   bool GetUnderlinePosition(const base::string16& text,
                             base::char16* accelerator,
+<<<<<<< .our
                             int* start,
                             int* end) const;
   void GetCharacterPosition(const base::string16& text,
                             int index,
                             int* pos) const;
+=======
+                            int* start, int* end) const;
+  void GetCharacterPosition(
+      const base::string16& text, int index, int* pos) const;
+>>>>>>> .their
 
   base::char16 accelerator_ = 0;
 
changed in both
  base   100644 2cbf07be86a812f07105846dc8caf8226a8595df atom/browser/web_contents_preferences.cc
  our    100644 c21c93383155091a7481cdd4e741cefad90a4a55 atom/browser/web_contents_preferences.cc
  their  100644 5b845f86ede32cab629a5bcf010882daebef9361 atom/browser/web_contents_preferences.cc
@@ -97,6 +97,7 @@
   instances_.push_back(this);
 
   // Set WebPreferences defaults onto the JS object
+<<<<<<< .our
   SetDefaultBoolIfUndefined(options::kPlugins, false);
   SetDefaultBoolIfUndefined(options::kExperimentalFeatures, false);
   bool node = SetDefaultBoolIfUndefined(options::kNodeIntegration, true);
@@ -104,11 +105,22 @@
   SetDefaultBoolIfUndefined(options::kWebviewTag, node);
   SetDefaultBoolIfUndefined(options::kSandbox, false);
   SetDefaultBoolIfUndefined(options::kNativeWindowOpen, false);
+=======
+  SetDefaultBoolIfUndefined("plugins", false);
+  SetDefaultBoolIfUndefined(options::kExperimentalFeatures, false);
+  SetDefaultBoolIfUndefined(options::kExperimentalCanvasFeatures, false);
+  bool node = SetDefaultBoolIfUndefined(options::kNodeIntegration, true);
+  SetDefaultBoolIfUndefined(options::kNodeIntegrationInWorker, false);
+  SetDefaultBoolIfUndefined(options::kWebviewTag, node);
+  SetDefaultBoolIfUndefined("sandbox", false);
+  SetDefaultBoolIfUndefined("nativeWindowOpen", false);
+>>>>>>> .their
   SetDefaultBoolIfUndefined(options::kContextIsolation, false);
   SetDefaultBoolIfUndefined("javascript", true);
   SetDefaultBoolIfUndefined("images", true);
   SetDefaultBoolIfUndefined("textAreasAreResizable", true);
   SetDefaultBoolIfUndefined("webgl", true);
+<<<<<<< .our
   bool webSecurity = true;
   SetDefaultBoolIfUndefined(options::kWebSecurity, webSecurity);
   // If webSecurity was explicity set to false, let's inherit that into
@@ -125,6 +137,15 @@
   SetDefaultBoolIfUndefined(options::kOffscreen, false);
 
   last_preference_ = preference_.Clone();
+=======
+  SetDefaultBoolIfUndefined("webSecurity", true);
+  SetDefaultBoolIfUndefined("allowRunningInsecureContent", false);
+  #if defined(OS_MACOSX)
+  SetDefaultBoolIfUndefined(options::kScrollBounce, false);
+  #endif
+  SetDefaultBoolIfUndefined("offscreen", false);
+  last_web_preferences_.MergeDictionary(&web_preferences_);
+>>>>>>> .their
 }
 
 WebContentsPreferences::~WebContentsPreferences() {
@@ -154,6 +175,16 @@
   return default_value;
 }
 
+bool WebContentsPreferences::SetDefaultBoolIfUndefined(const std::string key,
+                                                       bool val) {
+  bool existing;
+  if (!web_preferences_.GetBoolean(key, &existing)) {
+    web_preferences_.SetBoolean(key, val);
+    return val;
+  }
+  return existing;
+}
+
 void WebContentsPreferences::Merge(const base::DictionaryValue& extend) {
   if (preference_.is_dict())
     static_cast<base::DictionaryValue*>(&preference_)->MergeDictionary(&extend);
@@ -212,8 +243,18 @@
   return FromWebContents(web_contents);
 }
 
+<<<<<<< .our
 void WebContentsPreferences::AppendCommandLineSwitches(
     base::CommandLine* command_line) {
+=======
+  // We are appending args to a webContents so let's save the current state
+  // of our preferences object so that during the lifetime of the WebContents
+  // we can fetch the options used to initally configure the WebContents
+  self->last_web_preferences_.Clear();
+  self->last_web_preferences_.MergeDictionary(&web_preferences);
+
+  bool b;
+>>>>>>> .their
   // Check if plugins are enabled.
   if (IsEnabled(options::kPlugins))
     command_line->AppendSwitch(switches::kEnablePlugins);
changed in both
  base   100644 94dd8dc598bef5cc35383d69d20ade8d644a7ef5 atom/browser/web_contents_preferences.h
  our    100644 d835347afcd259f473f95271a2c19e42afcc6f2b atom/browser/web_contents_preferences.h
  their  100644 28ee9a85485e26b33b8a7852a4a212b4c11b71a0 atom/browser/web_contents_preferences.h
@@ -59,25 +59,45 @@
   bool GetPreloadPath(base::FilePath::StringType* path) const;
 
   // Returns the web preferences.
+<<<<<<< .our
   base::Value* preference() { return &preference_; }
   base::Value* last_preference() { return &last_preference_; }
+=======
+  base::DictionaryValue* web_preferences() { return &web_preferences_; }
+  base::DictionaryValue* last_web_preferences() {
+    return &last_web_preferences_;
+  }
+>>>>>>> .their
 
  private:
   friend class content::WebContentsUserData<WebContentsPreferences>;
   friend class AtomBrowserClient;
 
+<<<<<<< .our
   // Get WebContents according to process ID.
   static content::WebContents* GetWebContentsFromProcessID(int process_id);
 
   // Set preference value to given bool if user did not provide value
   bool SetDefaultBoolIfUndefined(const base::StringPiece& key, bool val);
+=======
+  // Set preference value to given bool if user did not provide value
+  bool SetDefaultBoolIfUndefined(const std::string key, bool val);
+
+  // Get preferences value as integer possibly coercing it from a string
+  bool GetInteger(const std::string& attributeName, int* intValue);
+>>>>>>> .their
 
   static std::vector<WebContentsPreferences*> instances_;
 
   content::WebContents* web_contents_;
+<<<<<<< .our
 
   base::Value preference_ = base::Value(base::Value::Type::DICTIONARY);
   base::Value last_preference_ = base::Value(base::Value::Type::DICTIONARY);
+=======
+  base::DictionaryValue web_preferences_;
+  base::DictionaryValue last_web_preferences_;
+>>>>>>> .their
 
   DISALLOW_COPY_AND_ASSIGN(WebContentsPreferences);
 };
changed in both
  base   100644 ad8c1d49bbc049b89eb4c69224b42fb51906c726 atom/common/api/api_messages.h
  our    100644 6131a7a473c68e31790fcd8697c8f380c65ad275 atom/common/api/api_messages.h
  their  100644 46e6142260d67b6408060ccaf328ee1f74335fe4 atom/common/api/api_messages.h
@@ -59,6 +59,7 @@
 
 // Sent by renderer to set the temporary zoom level.
 IPC_SYNC_MESSAGE_ROUTED1_1(AtomFrameHostMsg_SetTemporaryZoomLevel,
+<<<<<<< .our
                            double /* zoom level */,
                            double /* result */)
 
@@ -69,3 +70,10 @@
 IPC_MESSAGE_ROUTED2(AtomFrameHostMsg_PDFSaveURLAs,
                     GURL /* url */,
                     content::Referrer /* referrer */)
+=======
+                            double /* zoom level */,
+                            double /* result */)
+
+// Sent by renderer to get the zoom level.
+IPC_SYNC_MESSAGE_ROUTED0_1(AtomFrameHostMsg_GetZoomLevel, double /* result */)
+>>>>>>> .their
changed in both
  base   100644 d1a185d51f394b1828d66cbcf2a1d1cc278de23d atom/common/api/remote_callback_freer.cc
  our    100644 eba828591353dae53d1b7cdaa60fee52166d7473 atom/common/api/remote_callback_freer.cc
  their  100644 c15d5389a2e99fa0f305a812860a3232a3ec069d atom/common/api/remote_callback_freer.cc
@@ -39,7 +39,11 @@
   base::ListValue args;
   args.AppendString(context_id_);
   args.AppendInteger(object_id_);
+<<<<<<< .our
   auto* frame_host = web_contents()->GetMainFrame();
+=======
+  auto frame_host = web_contents()->GetMainFrame();
+>>>>>>> .their
   if (frame_host) {
     frame_host->Send(new AtomFrameMsg_Message(frame_host->GetRoutingID(), false,
                                               channel, args));
changed in both
  base   100644 315127822d1709802abf317c4d8cf49ec7e2bfaa atom/common/api/remote_object_freer.cc
  our    100644 8afe8b9a32bc4ba4d5cdfc66ecf7036b8553cb48 atom/common/api/remote_object_freer.cc
  their  100644 ef028441e3da5c7d56f6bdba2f162814ff6b21f3 atom/common/api/remote_object_freer.cc
changed in both
  base   100644 5fa39680ca814675d344665b3b2a6ce5d94e625f atom/common/atom_version.h
  our    100644 65e7d19911559a40b1b258319df5fe0fa180354f atom/common/atom_version.h
  their  100644 8ed7feec5bdc6c7a043e4deda125349ee57db21d atom/common/atom_version.h
@@ -5,10 +5,17 @@
 #ifndef ATOM_COMMON_ATOM_VERSION_H_
 #define ATOM_COMMON_ATOM_VERSION_H_
 
+<<<<<<< .our
 #define ATOM_MAJOR_VERSION 4
 #define ATOM_MINOR_VERSION 0
 #define ATOM_PATCH_VERSION 0
 #define ATOM_PRE_RELEASE_VERSION -nightly.20180821
+=======
+#define ATOM_MAJOR_VERSION 2
+#define ATOM_MINOR_VERSION 0
+#define ATOM_PATCH_VERSION 0
+#define ATOM_PRE_RELEASE_VERSION -beta.5
+>>>>>>> .their
 
 #ifndef ATOM_STRINGIFY
 #define ATOM_STRINGIFY(n) ATOM_STRINGIFY_HELPER(n)
changed in both
  base   100644 a7908ef30c6bafc4aca1da9a870f7ae12703fe04 atom/common/crash_reporter/crash_reporter_win.cc
  our    100644 c574da71c9de9bd8c7b7cad57d3a0f84708fb97c atom/common/crash_reporter/crash_reporter_win.cc
  their  100644 49f90b7e6665727b697a243414544bae304fde6e atom/common/crash_reporter/crash_reporter_win.cc
changed in both
  base   100644 cff228ba49068a8a683257e9ac50778437a56c45 atom/common/linux/application_info.cc
  our    100644 3354c73b8b60f77cf054f975ea713d96b7e7683e atom/common/linux/application_info.cc
  their  100644 05bd7f6fc15015a4f570e36801aea622a8f0cb3a atom/common/linux/application_info.cc
@@ -19,7 +19,11 @@
 namespace {
 
 GDesktopAppInfo* get_desktop_app_info() {
+<<<<<<< .our
   GDesktopAppInfo* ret = nullptr;
+=======
+  GDesktopAppInfo * ret = nullptr;
+>>>>>>> .their
 
   std::string desktop_id;
   if (brightray::platform_util::GetDesktopName(&desktop_id))
changed in both
  base   100644 eed6e7bc092f84bd1bde673c27f5fe5363c7783c atom/common/options_switches.cc
  our    100644 8b1836f80c583e4db68971ff1b00ca4f86356b45 atom/common/options_switches.cc
  their  100644 c1cd185443c0fdbadeb7ba2e174d2048ab2d45d7 atom/common/options_switches.cc
@@ -188,6 +188,9 @@
 // The application path
 const char kAppPath[] = "app-path";
 
+// The context ID for this process
+const char kContextId[] = "context-id";
+
 // The command line switch versions of the options.
 const char kBackgroundColor[] = "background-color";
 const char kPreloadScript[] = "preload";
changed in both
  base   100644 525301971c8a05c45e12aada7d0534b84307aebf atom/common/options_switches.h
  our    100644 5f6d7e9d38120668ed06922ced2f8d6a6e27a52b atom/common/options_switches.h
  their  100644 9d65bc376925906063c24a9a254b2c31c7e22c34 atom/common/options_switches.h
@@ -92,6 +92,7 @@
 extern const char kSecureSchemes[];
 extern const char kAppUserModelId[];
 extern const char kAppPath[];
+extern const char kContextId[];
 
 extern const char kBackgroundColor[];
 extern const char kPreloadScript[];
changed in both
  base   100644 7bee1411ba1c2fbac516ff8b65bcbd89f6132819 atom/renderer/api/atom_api_renderer_ipc.cc
  our    100644 3e48a4f7d0c11f40e6360b0acc2c83c38e671319 atom/renderer/api/atom_api_renderer_ipc.cc
  their  100644 ad6a12b90d525e9c6a49fac7a5d122b8c2c295f9 atom/renderer/api/atom_api_renderer_ipc.cc
@@ -12,8 +12,13 @@
 #include "native_mate/dictionary.h"
 #include "third_party/WebKit/public/web/WebLocalFrame.h"
 
+<<<<<<< .our
 using blink::WebLocalFrame;
 using content::RenderFrame;
+=======
+using content::RenderFrame;
+using blink::WebLocalFrame;
+>>>>>>> .their
 
 namespace atom {
 
@@ -48,10 +53,17 @@
 
   RenderFrame* render_frame = GetCurrentRenderFrame();
   if (render_frame == nullptr)
+<<<<<<< .our
     return result;
 
   IPC::SyncMessage* message = new AtomFrameHostMsg_Message_Sync(
       render_frame->GetRoutingID(), channel, arguments, &result);
+=======
+    return json;
+
+  IPC::SyncMessage* message = new AtomFrameHostMsg_Message_Sync(
+      render_frame->GetRoutingID(), channel, arguments, &json);
+>>>>>>> .their
   bool success = render_frame->Send(message);
 
   if (!success)
changed in both
  base   100644 d0164f44a0a523b26a919e02b5b7add25a0e7224 atom/renderer/api/atom_api_web_frame.cc
  our    100644 f0f7ef249d73876f7107d3d3865e8fc71ee33945 atom/renderer/api/atom_api_web_frame.cc
  their  100644 fe8d5c9c24a6da8d77615df1c366ac9b2c7a0778 atom/renderer/api/atom_api_web_frame.cc
changed in both
  base   100644 1971a26c1c5d4f5c5f5f029e6334f157a16b5394 atom/renderer/atom_render_frame_observer.cc
  our    100644 ea2355fd968339600ae8093524f1c3dcfd2f4ff3 atom/renderer/atom_render_frame_observer.cc
  their  100644 4ddf9186b723091ef91d69cfaedc4fbdd1ac09fa atom/renderer/atom_render_frame_observer.cc
@@ -7,6 +7,8 @@
 #include <string>
 #include <vector>
 
+#include "atom/common/native_mate_converters/string16_converter.h"
+
 #include "atom/common/api/api_messages.h"
 #include "atom/common/api/event_emitter_caller.h"
 #include "atom/common/native_mate_converters/value_converter.h"
@@ -72,7 +74,12 @@
     RendererClientBase* renderer_client)
     : content::RenderFrameObserver(frame),
       render_frame_(frame),
+<<<<<<< .our
       renderer_client_(renderer_client) {
+=======
+      renderer_client_(renderer_client),
+      document_created_(false) {
+>>>>>>> .their
   // Initialise resource for directory listing.
   net::NetModule::SetResourceProvider(NetResourceProvider);
 }
@@ -195,8 +202,13 @@
 }
 
 void AtomRenderFrameObserver::EmitIPCEvent(blink::WebLocalFrame* frame,
+<<<<<<< .our
                                            const base::string16& channel,
                                            const base::ListValue& args) {
+=======
+                                          const base::string16& channel,
+                                          const base::ListValue& args) {
+>>>>>>> .their
   if (!frame)
     return;
 
changed in both
  base   100644 248d5a68096dedea0f6ffb3c9df38ff3373e7c18 atom/renderer/atom_render_frame_observer.h
  our    100644 e774741c019956a3bff00db2f6d2b133bf1be6de atom/renderer/atom_render_frame_observer.h
  their  100644 d4f3d0c7d5c454bb65a190f59b26501137dd04e0 atom/renderer/atom_render_frame_observer.h
@@ -56,7 +56,11 @@
 
   content::RenderFrame* render_frame_;
   RendererClientBase* renderer_client_;
+<<<<<<< .our
   bool document_created_ = false;
+=======
+  bool document_created_;
+>>>>>>> .their
 
   DISALLOW_COPY_AND_ASSIGN(AtomRenderFrameObserver);
 };
changed in both
  base   100644 4d3e7cba7a65330a45a5f2aebba90c257b206e35 atom/renderer/atom_render_view_observer.h
  our    100644 097616e12369662473c12645a93e27cffcb55e3b atom/renderer/atom_render_view_observer.h
  their  100644 ca9fb01288e3bd4788c7718f0feb8b37307383e6 atom/renderer/atom_render_view_observer.h
@@ -14,7 +14,11 @@
   explicit AtomRenderViewObserver(content::RenderView* render_view);
 
  protected:
+<<<<<<< .our
   ~AtomRenderViewObserver() override;
+=======
+  virtual ~AtomRenderViewObserver();
+>>>>>>> .their
 
  private:
   // content::RenderViewObserver implementation.
changed in both
  base   100644 82ba9d024350009ae86bc5406513c8086073990a atom/renderer/atom_renderer_client.cc
  our    100644 204f17c2cf0d2d4ec4a71bdbecfcd1cbdc5fc8be atom/renderer/atom_renderer_client.cc
  their  100644 12e8fa2603a1b533646b300efbf312b9cb2d8361 atom/renderer/atom_renderer_client.cc
changed in both
  base   100644 07d20bda8b00b1acdb823546f5e606154278cd4e atom/renderer/atom_sandboxed_renderer_client.cc
  our    100644 6e29fe45a69f44856d7fca449ec1be4eaf6970a2 atom/renderer/atom_sandboxed_renderer_client.cc
  their  100644 4a97a5da54fbc371abd4f11c8901ac7ed5b0df07 atom/renderer/atom_sandboxed_renderer_client.cc
@@ -12,7 +12,10 @@
 #include "atom/common/options_switches.h"
 #include "atom/renderer/api/atom_api_renderer_ipc.h"
 #include "atom/renderer/atom_render_frame_observer.h"
+<<<<<<< .our
 #include "base/base_paths.h"
+=======
+>>>>>>> .their
 #include "base/command_line.h"
 #include "base/files/file_path.h"
 #include "base/path_service.h"
@@ -20,7 +23,10 @@
 #include "chrome/renderer/printing/print_web_view_helper.h"
 #include "content/public/renderer/render_frame.h"
 #include "native_mate/dictionary.h"
+<<<<<<< .our
 #include "third_party/WebKit/public/web/WebDocument.h"
+=======
+>>>>>>> .their
 #include "third_party/WebKit/public/web/WebKit.h"
 
 #include "atom/common/node_includes.h"
@@ -102,12 +108,19 @@
   AtomSandboxedRenderFrameObserver(content::RenderFrame* render_frame,
                                    AtomSandboxedRendererClient* renderer_client)
       : AtomRenderFrameObserver(render_frame, renderer_client),
+<<<<<<< .our
         renderer_client_(renderer_client) {}
+=======
+        v8_converter_(new atom::V8ValueConverter),
+        renderer_client_(renderer_client) {
+    v8_converter_->SetDisableNode(true);
+  }
+>>>>>>> .their
 
  protected:
   void EmitIPCEvent(blink::WebLocalFrame* frame,
                     const base::string16& channel,
-                    const base::ListValue& args) override {
+                    const base::ListValue& args) {
     if (!frame)
       return;
 
changed in both
  base   100644 89af0932d10a598f87dd28ec4b32ae3b2e0eadca atom/renderer/renderer_client_base.cc
  our    100644 69490420ef5b8f87e7cb8fd97ebd5ec4509fa1ae atom/renderer/renderer_client_base.cc
  their  100644 af9dfe39367ff1014e558afee2f0fe5ab0e7456e atom/renderer/renderer_client_base.cc
@@ -161,7 +161,10 @@
 
 void RendererClientBase::RenderFrameCreated(
     content::RenderFrame* render_frame) {
+<<<<<<< .our
 #if defined(TOOLKIT_VIEWS)
+=======
+>>>>>>> .their
   new AutofillAgent(render_frame);
 #endif
 #if defined(ENABLE_PEPPER_FLASH)
changed in both
  base   100644 065fe818a64586b6f786cdaa163c40b8a3aacabe brightray/brightray.gyp
  our    100644 f233257e88bad8f0ff703034bea02e4715a5b5b9 brightray/brightray.gyp
  their  100644 e42bbce42ae24faed7267e50e8efa7be4b66d215 brightray/brightray.gyp
@@ -178,6 +178,7 @@
                 ],
               },
             }],
+<<<<<<< .our
             # Due to strange linker behavior, component build of arm needs to
             # be linked with libjpeg.a explicitly.
             ['target_arch=="arm" and libchromiumcontent_component==1', {
@@ -187,6 +188,8 @@
                 ],
               },
             }],
+=======
+>>>>>>> .their
           ],
         }],  # OS=="linux"
         ['OS=="mac"', {
changed in both
  base   100644 143a5fdea3eb6ad7709fa8383298029a24c1b407 brightray/browser/linux/libnotify_notification.cc
  our    100644 0725ffded989d3c6bce753a210e464deca346ad1 brightray/browser/linux/libnotify_notification.cc
  their  100644 7f9fb35e434f7cc85cf4145661e754ff4a0d84fc brightray/browser/linux/libnotify_notification.cc
changed in both
  base   100644 04033f451e045ee7211f0a7152d46c5010a55b72 brightray/browser/url_request_context_getter.h
  our    100644 941a5782b14a941bb25a7a9ef6ca6d73f8bc3ec1 brightray/browser/url_request_context_getter.h
  their  100644 1a26704d380ab7d113c4e2b0deb940a2d674f96b brightray/browser/url_request_context_getter.h
@@ -76,11 +76,14 @@
       const override;
 
   net::URLRequestJobFactory* job_factory() const { return job_factory_; }
+<<<<<<< .our
   void set_delegate(Delegate* delegate) { delegate_ = delegate; }
 
   // Discard reference to URLRequestContext and inform observers to
   // shutdown. Must be called only on IO thread.
   void NotifyContextShuttingDown(std::unique_ptr<ResourceContext>);
+=======
+>>>>>>> .their
 
  private:
   friend class BrowserContext;
changed in both
  base   100644 08b203a23291ba0e2ba254873074178da4921123 brightray/common/application_info_win.cc
  our    100644 a0256372bbdbbc1d77cb84885faab42a27f55c9f brightray/common/application_info_win.cc
  their  100644 89ea0aceb6784119ad65783cfd1c019e7aedbf57 brightray/common/application_info_win.cc
changed in both
  base   100644 6a7d91f135c4b904e6d3172da91e7813793a2fba brightray/filenames.gypi
  our    100644 b9e2d96175f8ee2d407db9c49b2e2b74756327de brightray/filenames.gypi
  their  100644 9ddd990cfa52886ead940c428d1f355ef6234d9a brightray/filenames.gypi
changed in both
  base   100644 2be2da597664c1913a665ad51de5becc42658d0f docs/api/browser-window.md
  our    100644 dff61dd336f047cf2f6f06228b2df2b98ff2304d docs/api/browser-window.md
  their  100644 a6fab3f609c6ffea07e47cd9256451eeb53df600 docs/api/browser-window.md
removed in local
  base   100644 7dfc6084f5c94bfb924438e7efa50260d38b9144 docs/tutorial/planned-breaking-changes.md
  their  100644 00e01f4f8c3a85f0e535a00c11e22f3595bff4b9 docs/tutorial/planned-breaking-changes.md
changed in both
  base   100644 53ad35c63321e74a5023197ef2e075584e0f268b electron.gyp
  our    100644 944ddab2a3fd879044e31677e4bac2843fffbdee electron.gyp
  their  100644 0e5903bde4b5ed676dbb270aeddf4c453381eea1 electron.gyp
@@ -4,7 +4,11 @@
     'product_name%': 'Electron',
     'company_name%': 'GitHub, Inc',
     'company_abbr%': 'github',
+<<<<<<< .our
     'version%': '4.0.0-nightly.20180821',
+=======
+    'version%': '2.0.0-beta.5',
+>>>>>>> .their
     'js2c_input_dir': '<(SHARED_INTERMEDIATE_DIR)/js2c',
   },
   'includes': [
changed in both
  base   100644 381a2a866372ebe06f374529c634af411c864ba0 lib/browser/api/app.js
  our    100644 66f6ae651acf10fb19b8ec068fc5280850dd3d91 lib/browser/api/app.js
  their  100644 1ea1daddca84dfeba57b7b7883ebb754b8508d2d lib/browser/api/app.js
changed in both
  base   100644 da5ff57a113f7a063d1409ff56003db4bd04e68a lib/browser/api/menu.js
  our    100644 506e3525c10ce142cafe3fc1bf4de1c255e48503 lib/browser/api/menu.js
  their  100644 e246a089478555f15a6b4bd79255d2bbdb43c705 lib/browser/api/menu.js
@@ -47,7 +47,11 @@
   this.delegate = delegate
 }
 
+<<<<<<< .our
 Menu.prototype.popup = function (options = {}) {
+=======
+Menu.prototype.popup = function (options) {
+>>>>>>> .their
   if (options == null || typeof options !== 'object') {
     throw new TypeError('Options must be an object')
   }
merged
  result 100644 bbbc1bbe1727dd30352c4836cea489145cd7ad7d lib/browser/api/screen.js
  our    100644 8287bfa8bfdc6db322a05059fd5c8ba58e802db9 lib/browser/api/screen.js
@@ -1,8 +1,17 @@
 const {EventEmitter} = require('events')
+const {deprecate} = require('electron')
 const {screen, Screen} = process.atomBinding('screen')
 
 // Screen is an EventEmitter.
 Object.setPrototypeOf(Screen.prototype, EventEmitter.prototype)
 EventEmitter.call(screen)
 
+const nativeFn = screen.getMenuBarHeight
+screen.getMenuBarHeight = function () {
+  if (!process.noDeprecations) {
+    deprecate.warn('screen.getMenuBarHeight', 'screen.getPrimaryDisplay().workArea')
+  }
+  return nativeFn.call(this)
+}
+
 module.exports = screen
changed in both
  base   100644 0338b776f8938c1548ea9786385fe75db9db3403 lib/browser/guest-view-manager.js
  our    100644 1e4029e39a981c85fb6ff18c5ccd52f81b3c56f2 lib/browser/guest-view-manager.js
  their  100644 dd8e0ff1a9239e5c7a92f90a58da866c076011ca lib/browser/guest-view-manager.js
changed in both
  base   100644 50e890e225a315718d04a0028fb6bf2feb4092ce lib/browser/guest-window-manager.js
  our    100644 7253c1942b0956ae6b9b0c80a23470fc26669b8a lib/browser/guest-window-manager.js
  their  100644 ec77a7abdff1ba27e55da513c10d084d7978b7c0 lib/browser/guest-window-manager.js
@@ -65,7 +65,11 @@
   // Inherit certain option values from parent window
   const webPreferences = embedder.getLastWebPreferences()
   for (const [name, value] of inheritedWebPreferences) {
+<<<<<<< .our
     if (webPreferences[name] === value) {
+=======
+    if (embedder.getLastWebPreferences()[name] === value) {
+>>>>>>> .their
       options.webPreferences[name] = value
     }
   }
changed in both
  base   100644 c0cd09dea4273642aa780756985e9c90dbe164d3 lib/browser/rpc-server.js
  our    100644 ff9f77321de3a4145946b67f3fe2a597f98e2510 lib/browser/rpc-server.js
  their  100644 6321c0526f25a99d80228bbd569cc000ec76dee2 lib/browser/rpc-server.js
@@ -387,9 +387,15 @@
   objectsRegistry.remove(event.sender, contextId, id)
 })
 
+<<<<<<< .our
 ipcMain.on('ELECTRON_BROWSER_CONTEXT_RELEASE', (event, contextId) => {
   objectsRegistry.clear(event.sender, contextId)
   event.returnValue = null
+=======
+ipcMain.on('ELECTRON_BROWSER_CONTEXT_RELEASE', (e, contextId) => {
+  objectsRegistry.clear(contextId)
+  e.returnValue = null
+>>>>>>> .their
 })
 
 ipcMain.on('ELECTRON_BROWSER_GUEST_WEB_CONTENTS', function (event, contextId, guestInstanceId) {
changed in both
  base   100644 6dc774049def3acbd13b79dfd559c12d4eebd657 lib/common/api/crash-reporter.js
  our    100644 1090d425e4c5cdf89a03d470718324ef16963472 lib/common/api/crash-reporter.js
  their  100644 1b20fa52aab741e5dd34de7872f36798ec7c1c68 lib/common/api/crash-reporter.js
changed in both
  base   100644 a4f8072ed57642e1ca7d1066e132875da7ad3f46 lib/renderer/api/remote.js
  our    100644 59117f8f2dd977fc1817a6b1d540b616ddcb0dae lib/renderer/api/remote.js
  their  100644 3de99ecab255308662a4b65c6b45b573d723f4da lib/renderer/api/remote.js
@@ -293,6 +293,14 @@
   callbacksRegistry.remove(id)
 })
 
+<<<<<<< .our
+=======
+process.on('exit', () => {
+  const command = 'ELECTRON_BROWSER_CONTEXT_RELEASE'
+  ipcRenderer.sendSync(command, initialContext)
+})
+
+>>>>>>> .their
 exports.require = (module) => {
   const command = 'ELECTRON_BROWSER_REQUIRE'
   const meta = ipcRenderer.sendSync(command, contextId, module)
@@ -317,6 +325,15 @@
   return metaToValue(ipcRenderer.sendSync('ELECTRON_BROWSER_CURRENT_WEB_CONTENTS', contextId))
 }
 
+const CONTEXT_ARG = '--context-id='
+let initialContext = process.argv.find(arg => arg.startsWith(CONTEXT_ARG))
+if (initialContext) {
+  initialContext = parseInt(initialContext.substr(CONTEXT_ARG.length), 10)
+} else {
+  // In sandbox we need to pull this from remote
+  initialContext = exports.getCurrentWebContents().getId()
+}
+
 // Get a global object in browser.
 exports.getGlobal = (name) => {
   const command = 'ELECTRON_BROWSER_GLOBAL'
changed in both
  base   100644 1cb69436dd479baf54b9805c04c0c31b20f24fad lib/renderer/init.js
  our    100644 2470a5e8be80e770b0c03f6a439a71e72ae12a1b lib/renderer/init.js
  their  100644 795de06274030aaa1b3ad08a8dd6b259639b0e00 lib/renderer/init.js
changed in both
  base   100644 d2da884f1d9caf3d633de25837cb2128f564f2fb lib/renderer/security-warnings.js
  our    100644 b24f9e28b879154457be0342b9d4b44c0e651253 lib/renderer/security-warnings.js
  their  100644 4f7d6ef9e596cdc3a5c7e1f2b89b24b9cd67de1d lib/renderer/security-warnings.js
changed in both
  base   100644 9d3b0da9c80b223e4a1188311a1121796eb9f7ae package.json
  our    100644 c081cd89450cd50efba1ec280ff1349a96ea3ce0 package.json
  their  100644 0ffa2309e83e2205ec4fa907f9e94586e895bf2a package.json
@@ -1,6 +1,10 @@
 {
   "name": "electron",
+<<<<<<< .our
   "version": "4.0.0-nightly.20180821",
+=======
+  "version": "2.0.0-beta.5",
+>>>>>>> .their
   "repository": "https://github.com/electron/electron",
   "description": "Build cross platform desktop apps with JavaScript, HTML, and CSS",
   "devDependencies": {
@@ -25,8 +29,12 @@
     "remark-cli": "^4.0.0",
     "remark-preset-lint-markdown-style-guide": "^2.1.1",
     "request": "^2.68.0",
+<<<<<<< .our
     "semver": "^5.5.0",
     "serve": "^6.5.8",
+=======
+    "serve": "^6.5.3",
+>>>>>>> .their
     "standard": "^10.0.0",
     "standard-markdown": "^4.0.0",
     "sumchecker": "^2.0.2",
changed in both
  base   100755 c97cd8336f7d7980911d0bdea93137e7bc95ba24 script/build.py
  our    100755 fb2b95d3bb71a25ce1ca58acf596afdc0f2cc5bd script/build.py
  their  100755 2a2231394207c28fcd2b86d3d9f9b079b08d637e script/build.py
@@ -40,6 +40,12 @@
   if is_verbose_mode():
     ninja.append('-v')
 
+<<<<<<< .our
+=======
+  args = parse_args()
+  if args.ninja_path:
+    ninja = args.ninja_path
+>>>>>>> .their
   if args.libcc:
     if ('D' not in args.configuration
         or not os.path.exists(GCLIENT_DONE)
@@ -93,12 +99,15 @@
   parser.add_argument('--ninja-path',
                       help='Path of ninja command to use.',
                       required=False)
+<<<<<<< .our
   parser.add_argument('--compdb',
                       help=(
                         'Generate JSON compilation database. This will not '
                         'trigger actual build. '
                       ),
                       action='store_true', default=False)
+=======
+>>>>>>> .their
   return parser.parse_args()
 
 
changed in both
  base   100644 ec2459198bf254e7e380e4ae63097168041d0068 script/ci-release-build.js
  our    100644 be9f9597387f5f8b7bfddc61c202f32ce4c6d478 script/ci-release-build.js
  their  100644 dd722faea96002286202b6054dfdb75a64bae59d script/ci-release-build.js
@@ -18,9 +18,14 @@
   'electron-linux-x64'
 ]
 
+<<<<<<< .our
 const vstsJobs = [
   'electron-release-mas-x64',
   'electron-release-osx-x64'
+=======
+const jenkinsJobs = [
+  'electron-release'
+>>>>>>> .their
 ]
 
 async function makeRequest (requestOptions, parseResponse) {
@@ -51,6 +56,10 @@
 }
 
 async function circleCIcall (buildUrl, targetBranch, job, options) {
+<<<<<<< .our
+=======
+  assert(process.env.CIRCLE_TOKEN, 'CIRCLE_TOKEN not found in environment')
+>>>>>>> .their
   console.log(`Triggering CircleCI to run build job: ${job} on branch: ${targetBranch} with release flag.`)
   let buildRequest = {
     'build_parameters': {
@@ -92,8 +101,14 @@
   }
 }
 
+<<<<<<< .our
 async function callAppVeyor (targetBranch, job, options) {
   console.log(`Triggering AppVeyor to run build job: ${job} on branch: ${targetBranch} with release flag.`)
+=======
+async function buildAppVeyor (targetBranch, options) {
+  console.log(`Triggering AppVeyor to run build on branch: ${targetBranch} with release flag.`)
+  assert(process.env.APPVEYOR_TOKEN, 'APPVEYOR_TOKEN not found in environment')
+>>>>>>> .their
   let environmentVariables = {}
 
   if (options.ghRelease) {
@@ -132,13 +147,18 @@
 function buildCircleCI (targetBranch, options) {
   const circleBuildUrl = `https://circleci.com/api/v1.1/project/github/electron/electron/tree/${targetBranch}?circle-token=${process.env.CIRCLE_TOKEN}`
   if (options.job) {
+<<<<<<< .our
     assert(circleCIJobs.includes(options.job), `Unknown CircleCI job name: ${options.job}. Valid values are: ${circleCIJobs}.`)
+=======
+    assert(circleCIJobs.includes(options.job), `Unknown CI job name: ${options.job}.`)
+>>>>>>> .their
     circleCIcall(circleBuildUrl, targetBranch, options.job, options)
   } else {
     circleCIJobs.forEach((job) => circleCIcall(circleBuildUrl, targetBranch, job, options))
   }
 }
 
+<<<<<<< .our
 async function buildVSTS (targetBranch, options) {
   if (options.job) {
     assert(vstsJobs.includes(options.job), `Unknown VSTS CI job name: ${options.job}. Valid values are: ${vstsJobs}.`)
@@ -152,6 +172,20 @@
 
   if (options.automaticRelease) {
     environmentVariables.AUTO_RELEASE = 'true'
+=======
+async function buildJenkins (targetBranch, options) {
+  assert(process.env.JENKINS_AUTH_TOKEN, 'JENKINS_AUTH_TOKEN not found in environment')
+  assert(process.env.JENKINS_BUILD_TOKEN, 'JENKINS_BUILD_TOKEN not found in environment')
+  let jenkinsCrumb = await getJenkinsCrumb()
+
+  if (options.job) {
+    assert(jenkinsJobs.includes(options.job), `Unknown CI job name: ${options.job}.`)
+    callJenkinsBuild(options.job, jenkinsCrumb, targetBranch, options)
+  } else {
+    jenkinsJobs.forEach((job) => {
+      callJenkinsBuild(job, jenkinsCrumb, targetBranch, options)
+    })
+>>>>>>> .their
   }
 
   let requestOpts = {
@@ -176,6 +210,7 @@
   buildsToRun.forEach((build) => callVSTSBuild(build, targetBranch, environmentVariables))
 }
 
+<<<<<<< .our
 async function callVSTSBuild (build, targetBranch, environmentVariables) {
   let buildBody = {
     definition: build,
@@ -198,6 +233,33 @@
   }
   let vstsResponse = await makeRequest(requestOpts, true).catch(err => {
     console.log(`Error calling VSTS for job ${build.name}`, err)
+=======
+async function callJenkinsBuild (job, jenkinsCrumb, targetBranch, options) {
+  console.log(`Triggering Jenkins to run build job: ${job} on branch: ${targetBranch} with release flag.`)
+  let jenkinsParams = {
+    token: process.env.JENKINS_BUILD_TOKEN,
+    BRANCH: targetBranch
+  }
+  if (!options.ghRelease) {
+    jenkinsParams.RUN_RELEASE_BUILD = 1
+  }
+  if (options.automaticRelease) {
+    jenkinsParams.AUTO_RELEASE = 'true'
+  }
+  await callJenkins(`job/${job}/buildWithParameters`, jenkinsParams, jenkinsCrumb)
+    .catch(err => {
+      console.log(`Error calling Jenkins build`, err)
+    })
+  let buildUrl = `${jenkinsServer}/job/${job}/lastBuild/`
+  console.log(`Jenkins build request successful.  Check build status at ${buildUrl}.`)
+}
+
+async function getJenkinsCrumb () {
+  let crumbResponse = await callJenkins('crumbIssuer/api/xml', {
+    xpath: 'concat(//crumbRequestField,":",//crumb)'
+  }).catch(err => {
+    console.log(`Error getting jenkins crumb:`, err)
+>>>>>>> .their
   })
   console.log(`VSTS release build request for ${build.name} successful. Check ${vstsResponse._links.web.href} for status.`)
 }
@@ -213,8 +275,13 @@
         buildAppVeyor(targetBranch, options)
         break
       }
+<<<<<<< .our
       case 'VSTS': {
         buildVSTS(targetBranch, options)
+=======
+      case 'Jenkins': {
+        buildJenkins(targetBranch, options)
+>>>>>>> .their
         break
       }
       default: {
@@ -225,7 +292,11 @@
   } else {
     buildCircleCI(targetBranch, options)
     buildAppVeyor(targetBranch, options)
+<<<<<<< .our
     buildVSTS(targetBranch, options)
+=======
+    buildJenkins(targetBranch, options)
+>>>>>>> .their
   }
 }
 
@@ -238,7 +309,11 @@
   const targetBranch = args._[0]
   if (args._.length < 1) {
     console.log(`Trigger CI to build release builds of electron.
+<<<<<<< .our
     Usage: ci-release-build.js [--job=CI_JOB_NAME] [--ci=CircleCI|AppVeyor|VSTS] [--ghRelease] [--automaticRelease] TARGET_BRANCH
+=======
+    Usage: ci-release-build.js [--job=CI_JOB_NAME] [--ci=CircleCI|AppVeyor|Jenkins] [--ghRelease] [--automaticRelease] TARGET_BRANCH
+>>>>>>> .their
     `)
     process.exit(0)
   }
changed in both
  base   100644 76f39fc26973e01145f7758785778075ddbaa648 script/lib/dbus_mock.py
  our    100644 9b9c8029cb75a9d84c632d04f234c2020542ca68 script/lib/dbus_mock.py
  their  100644 00b1fd98d7837cfef60460f9d456a5cb8340761c script/lib/dbus_mock.py
@@ -4,21 +4,29 @@
 import atexit
 import os
 import sys
+<<<<<<< .our
+=======
+
+>>>>>>> .their
 
 
 def stop():
     DBusTestCase.stop_dbus(DBusTestCase.system_bus_pid)
     DBusTestCase.stop_dbus(DBusTestCase.session_bus_pid)
+<<<<<<< .our
 
 def start():
     dbusmock_log = sys.stdout if is_verbose_mode() else open(os.devnull, 'w')
 
     DBusTestCase.start_system_bus()
     DBusTestCase.spawn_server_template('logind', None, dbusmock_log)
+=======
+>>>>>>> .their
 
     DBusTestCase.start_session_bus()
     DBusTestCase.spawn_server_template('notification_daemon', None, dbusmock_log)
 
+<<<<<<< .our
 if __name__ == '__main__':
     import subprocess
     start()
@@ -26,3 +34,14 @@
         subprocess.check_call(sys.argv[1:])
     finally:
         stop()
+=======
+atexit.register(cleanup)
+
+dbusmock_log = sys.stdout if is_verbose_mode() else open(os.devnull, 'w')
+
+DBusTestCase.start_system_bus()
+DBusTestCase.spawn_server_template('logind', None, dbusmock_log)
+
+DBusTestCase.start_session_bus()
+DBusTestCase.spawn_server_template('notification_daemon', None, dbusmock_log)
+>>>>>>> .their
changed in both
  base   100755 69882928765a56f50702a371af322710ef3ccf22 script/prepare-release.js
  our    100755 72a28b719bf1ff7770692caef86c76746c4d8edf script/prepare-release.js
  their  100755 bc3f5158d2af1e44ca00fd5485bc89f28c604290 script/prepare-release.js
@@ -5,6 +5,10 @@
 const args = require('minimist')(process.argv.slice(2), {
   boolean: ['automaticRelease', 'notesOnly', 'stable']
 })
+<<<<<<< .our
+=======
+const assert = require('assert')
+>>>>>>> .their
 const ciReleaseBuild = require('./ci-release-build')
 const { execSync } = require('child_process')
 const fail = '\u2717'.red
@@ -21,7 +25,11 @@
 // via conventional-recommended-bump
 
 if (!versionType && !args.notesOnly) {
+<<<<<<< .our
   console.log(`Usage: prepare-release versionType [stable | beta | nightly]` +
+=======
+  console.log(`Usage: prepare-release versionType [major | minor | patch | beta]` +
+>>>>>>> .their
      ` (--stable) (--notesOnly) (--automaticRelease) (--branch)`)
   process.exit(1)
 }
@@ -222,7 +230,11 @@
 }
 
 async function verifyNewVersion () {
+<<<<<<< .our
   let newVersion = await getNewVersion(true)
+=======
+  let newVersion = getNewVersion(true)
+>>>>>>> .their
   let response
   if (args.automaticRelease) {
     response = 'y'
@@ -258,9 +270,26 @@
 }
 
 async function prepareRelease (isBeta, notesOnly) {
+<<<<<<< .our
   if (args.dryRun) {
     let newVersion = await getNewVersion(true)
     console.log(newVersion)
+=======
+  if (args.automaticRelease && (pkg.version.indexOf('beta') === -1 ||
+      versionType !== 'beta')) {
+    console.log(`${fail} Automatic release is only supported for beta releases`)
+    process.exit(1)
+  }
+  let currentBranch
+  if (args.branch) {
+    currentBranch = args.branch
+  } else {
+    currentBranch = await getCurrentBranch(gitDir)
+  }
+  if (notesOnly) {
+    let releaseNotes = await getReleaseNotes(currentBranch)
+    console.log(`Draft release notes are: \n${releaseNotes}`)
+>>>>>>> .their
   } else {
     const currentBranch = (args.branch) ? args.branch : await getCurrentBranch(gitDir)
     if (notesOnly) {
changed in both
  base   100755 9863ef912cd5a940428e9ac22e1993494b2b1828 script/release.js
  our    100755 84e00ad4f309201f151c3f8fcbaf9ee536c9b6cb script/release.js
  their  100755 5e694366dc90a77582111ab2afd29176e63340e4 script/release.js
@@ -6,7 +6,6 @@
 const fs = require('fs')
 const { execSync } = require('child_process')
 const GitHub = require('github')
-const { GitProcess } = require('dugite')
 const nugget = require('nugget')
 const pkg = require('../package.json')
 const pkgVersion = `v${pkg.version}`
@@ -95,6 +94,10 @@
     `electron-${version}-linux-armv7l.zip`,
     `electron-${version}-linux-ia32-symbols.zip`,
     `electron-${version}-linux-ia32.zip`,
+<<<<<<< .our
+=======
+//    `electron-${version}-linux-mips64el.zip`,
+>>>>>>> .their
     `electron-${version}-linux-x64-symbols.zip`,
     `electron-${version}-linux-x64.zip`,
     `electron-${version}-mas-x64-dsym.zip`,
@@ -112,6 +115,10 @@
     `ffmpeg-${version}-linux-arm64.zip`,
     `ffmpeg-${version}-linux-armv7l.zip`,
     `ffmpeg-${version}-linux-ia32.zip`,
+<<<<<<< .our
+=======
+//    `ffmpeg-${version}-linux-mips64el.zip`,
+>>>>>>> .their
     `ffmpeg-${version}-linux-x64.zip`,
     `ffmpeg-${version}-mas-x64.zip`,
     `ffmpeg-${version}-win32-ia32.zip`,
@@ -180,7 +187,15 @@
 function uploadIndexJson () {
   console.log('Uploading index.json to S3.')
   let scriptPath = path.join(__dirname, 'upload-index-json.py')
+<<<<<<< .our
   runScript(scriptPath, [pkgVersion])
+=======
+  let scriptArgs = []
+  if (args.automaticRelease) {
+    scriptArgs.push('-R')
+  }
+  runScript(scriptPath, scriptArgs)
+>>>>>>> .their
   console.log(`${pass} Done uploading index.json to S3.`)
 }
 
@@ -446,6 +461,7 @@
     `shasums defined in ${validationArgs.shaSumFile}.`)
 }
 
+<<<<<<< .our
 async function tagLibCC () {
   const tag = `electron-${pkg.version}`
   const libccDir = path.join(path.resolve(__dirname, '..'), 'vendor', 'libchromiumcontent')
@@ -465,4 +481,6 @@
   }
 }
 
+=======
+>>>>>>> .their
 makeRelease(args.validateRelease)
changed in both
  base   100755 1f90ed795fcc3e739061cf4ae5c8ab9ea95a1236 script/test.py
  our    100755 46cada435e1bd6ecaa2111cdf29e5aeb834b227e script/test.py
  their  100755 cb17102557dca975208140b479168906100cfd74 script/test.py
changed in both
  base   100755 a35eb2f5b90272c8369bcfd511f976a4f64fa57f script/update-clang.sh
  our    100755 0c7ab60533381e33152b8735aaccf41d5f0d6676 script/update-clang.sh
  their  100755 6e4cf08216616a4b6a2ee896bba47b1ba5d469b5 script/update-clang.sh
changed in both
  base   100755 f5e5b3c7a6adcaf7005ad9242c1664ad2f243d1f script/upload-index-json.py
  our    100755 55d0675d0707d34c806847f3a64aa77f20a4830d script/upload-index-json.py
  their  100755 479e46bb811695482f5ea62060e4bef02af505f1 script/upload-index-json.py
@@ -8,7 +8,6 @@
 from lib.util import s3put, scoped_cwd, safe_mkdir
 
 SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
-OUT_DIR     = os.path.join(SOURCE_ROOT, 'out', 'D')
 
 BASE_URL = 'https://electron-metadumper.herokuapp.com/?version='
 
@@ -35,6 +34,7 @@
     raise Exception("Please set META_DUMPER_AUTH_HEADER")
   # Upload the index.json.
   with scoped_cwd(SOURCE_ROOT):
+<<<<<<< .our
     safe_mkdir(OUT_DIR)
     index_json = os.path.relpath(os.path.join(OUT_DIR, 'index.json'))
 
@@ -42,9 +42,27 @@
 
     with open(index_json, "w") as f:
       f.write(new_content)
+=======
+    if len(sys.argv) == 2 and sys.argv[1] == '-R':
+      config = 'R'
+    else:
+      config = 'D'
+    out_dir = os.path.join(SOURCE_ROOT, 'out', config)
+    if sys.platform == 'darwin':
+      electron = os.path.join(out_dir, '{0}.app'.format(PRODUCT_NAME),
+                                'Contents', 'MacOS', PRODUCT_NAME)
+    elif sys.platform == 'win32':
+      electron = os.path.join(out_dir, '{0}.exe'.format(PROJECT_NAME))
+    else:
+      electron = os.path.join(out_dir, PROJECT_NAME)
+    index_json = os.path.relpath(os.path.join(out_dir, 'index.json'))
+    execute([electron,
+             os.path.join('tools', 'dump-version-info.js'),
+             index_json])
+>>>>>>> .their
 
     bucket, access_key, secret_key = s3_config()
-    s3put(bucket, access_key, secret_key, OUT_DIR, 'atom-shell/dist',
+    s3put(bucket, access_key, secret_key, out_dir, 'atom-shell/dist',
           [index_json])
 
 
changed in both
  base   100644 0eda951b15d6fff609b6612589e222adb4f0720e spec/api-app-spec.js
  our    100644 d224eda2989332c18d655cef05a8bacc2eb6d4b8 spec/api-app-spec.js
  their  100644 5c2e0a0c7e6184e780b7ec031f9788f1f54eaca9 spec/api-app-spec.js
@@ -9,7 +9,10 @@
 const {ipcRenderer, remote} = require('electron')
 const {closeWindow} = require('./window-helpers')
 
+<<<<<<< .our
 const {expect} = chai
+=======
+>>>>>>> .their
 const {app, BrowserWindow, Menu, ipcMain} = remote
 
 const isCI = remote.getGlobal('isCi')
@@ -186,11 +189,19 @@
 
       // Singleton will send us greeting data to let us know it's running.
       // After that, ask it to exit gracefully and confirm that it does.
+<<<<<<< .our
       appProcess.stdout.on('data', data => appProcess.kill())
       appProcess.on('exit', (code, sig) => {
         const message = `code:\n${code}\nsig:\n${sig}`
         expect(code).to.equal(0, message)
         expect(sig).to.be.null(message)
+=======
+      appProcess.stdout.on('data', (data) => appProcess.kill())
+      appProcess.on('exit', (code, sig) => {
+        let message = ['code:', code, 'sig:', sig].join('\n')
+        assert.equal(code, 0, message)
+        assert.equal(sig, null, message)
+>>>>>>> .their
         done()
       })
     })
@@ -948,4 +959,18 @@
       return expect(app.whenReady()).to.be.eventually.fulfilled
     })
   })
+
+  describe('dock.setMenu', () => {
+    before(function () {
+      if (process.platform !== 'darwin') {
+        this.skip()
+      }
+    })
+
+    it('keeps references to the menu', () => {
+      app.dock.setMenu(new Menu())
+      const v8Util = process.atomBinding('v8_util')
+      v8Util.requestGarbageCollectionForTesting()
+    })
+  })
 })
changed in both
  base   100644 ab96021ebf4c4360fa581b5a695249456a9afeda spec/api-browser-view-spec.js
  our    100644 968912a4abf3d759a1363e2420d2c21b7923dbd6 spec/api-browser-view-spec.js
  their  100644 df239a8914527a2d62f652b878c97a7791f63a9d spec/api-browser-view-spec.js
@@ -44,9 +44,15 @@
   describe('BrowserView.isDestroyed()', () => {
     it('returns correct value', () => {
       view = new BrowserView()
+<<<<<<< .our
       expect(view.isDestroyed()).to.be.false()
       view.destroy()
       expect(view.isDestroyed()).to.be.true()
+=======
+      assert.ok(!view.isDestroyed())
+      view.destroy()
+      assert.ok(view.isDestroyed())
+>>>>>>> .their
     })
   })
 
changed in both
  base   100644 3033eb6a1f6cca3cf4874a54dd217ec62d2d82cd spec/api-browser-window-spec.js
  our    100644 f4cba12ec19d224bc46fca898db42a99baf4972e spec/api-browser-window-spec.js
  their  100644 efbf288ea8b78a4e439e8d1a5367850b2210eb82 spec/api-browser-window-spec.js
@@ -763,6 +763,7 @@
         w.addTabbedWindow(w)
       }, /AddTabbedWindow cannot be called by a window on itself./)
     })
+<<<<<<< .our
   })
 
   describe('BrowserWindow.setWindowButtonVisibility()', () => {
@@ -790,6 +791,8 @@
         w.setWindowButtonVisibility(true)
       }, /Not supported for this window/)
     })
+=======
+>>>>>>> .their
   })
 
   describe('BrowserWindow.setVibrancy(type)', () => {
changed in both
  base   100644 b4d55cd70b70b42d52a026ff7b4ff3c47d1671df spec/api-crash-reporter-spec.js
  our    100644 dd31b91e1244785412b87db96bb141599e5ccb0f spec/api-crash-reporter-spec.js
  their  100644 ffa3c0370595f32b0c7d476b82bea133d6a87000 spec/api-crash-reporter-spec.js
@@ -266,6 +266,7 @@
   describe('getLastCrashReport', () => {
     it('correctly returns the most recent report', () => {
       const reports = crashReporter.getUploadedReports()
+<<<<<<< .our
       expect(reports).to.be.an('array')
       expect(reports).to.have.lengthOf.at.least(2,
           'There are not enough reports for this test')
@@ -275,16 +276,31 @@
 
       // Let's find the newest report.
       const {report: newestReport} = reports.reduce((acc, cur) => {
+=======
+      const lastReport = crashReporter.getLastCrashReport()
+
+      // Let's find the newest report
+      const newestReport = reports.reduce((acc, cur) => {
+>>>>>>> .their
         const timestamp = new Date(cur.date).getTime()
         return (timestamp > acc.timestamp)
           ? { report: cur, timestamp: timestamp }
           : acc
+<<<<<<< .our
       }, { timestamp: -Infinity })
       assert(newestReport, 'Hey!')
 
       expect(lastReport.date.getTime()).to.be.equal(
           newestReport.date.getTime(),
           'Last report is not the newest.')
+=======
+      }, { timestamp: 0 })
+
+      assert(reports.length > 1, 'has more than 1 report')
+      assert(lastReport != null, 'found a last report')
+      assert(lastReport.date.toString() === newestReport.report.date.toString(),
+        'last report is correct')
+>>>>>>> .their
     })
   })
 
changed in both
  base   100644 667f098bc4b9974a142435e7d3ddb762ac0f54a2 spec/api-menu-spec.js
  our    100644 ed2749700c6c8bf299f507d52606c1ae3f597e5c spec/api-menu-spec.js
  their  100644 3efb6ed8745843bb7e221fe25b3c75761a085759 spec/api-menu-spec.js
@@ -649,6 +649,7 @@
     })
 
     it('throws an error if options is not an object', () => {
+<<<<<<< .our
       expect(() => {
         menu.popup('this is a string, not an object')
       }).to.throw(/Options must be an object/)
@@ -658,6 +659,11 @@
       expect(() => {
         menu.popup({})
       }).to.not.throw()
+=======
+      assert.throws(() => {
+        menu.popup()
+      }, /Options must be an object/)
+>>>>>>> .their
     })
 
     it('should emit menu-will-show event', (done) => {
added in both
  our    100644 9ab56d88e50ae5891364cb271362e5ec0c0edd26 spec/api-notification-dbus-spec.js
  their  100644 81c1b68f31d0c9490742d3bd4b4227abaaf72ca3 spec/api-notification-dbus-spec.js
@@ -6,7 +6,11 @@
 //
 // See https://pypi.python.org/pypi/python-dbusmock to read about dbusmock.
 
+<<<<<<< .our
 const {expect} = require('chai')
+=======
+const assert = require('assert')
+>>>>>>> .their
 const dbus = require('dbus-native')
 const Promise = require('bluebird')
 
@@ -27,12 +31,20 @@
   before(async () => {
     // init app
     app.setName(appName)
+<<<<<<< .our
     app.setDesktopName(`${appName}.desktop`)
+=======
+    app.setDesktopName(appName + '.desktop')
+>>>>>>> .their
     // init dbus
     const path = '/org/freedesktop/Notifications'
     const iface = 'org.freedesktop.DBus.Mock'
     const bus = dbus.sessionBus()
+<<<<<<< .our
     console.log(`session bus: ${process.env.DBUS_SESSION_BUS_ADDRESS}`)
+=======
+    console.log('session bus: ' + process.env.DBUS_SESSION_BUS_ADDRESS)
+>>>>>>> .their
     const service = bus.getService(serviceName)
     const getInterface = Promise.promisify(service.getInterface, {context: service})
     mock = await getInterface(path, iface)
@@ -48,10 +60,17 @@
     app.setVersion(realAppVersion)
   })
 
+<<<<<<< .our
   describe(`Notification module using ${serviceName}`, () => {
     function onMethodCalled (done) {
       function cb (name) {
         console.log(`onMethodCalled: ${name}`)
+=======
+  describe('Notification module using ' + serviceName, () => {
+    function onMethodCalled (done) {
+      function cb (name) {
+        console.log('onMethodCalled: ' + name)
+>>>>>>> .their
         if (name === 'Notify') {
           mock.removeListener('MethodCalled', cb)
           console.log('done')
@@ -83,7 +102,11 @@
       }
     }
 
+<<<<<<< .our
     before(done => {
+=======
+    before((done) => {
+>>>>>>> .their
       mock.on('MethodCalled', onMethodCalled(done))
       // lazy load Notification after we listen to MethodCalled mock signal
       Notification = require('electron').remote.Notification
@@ -98,6 +121,7 @@
       n.show()
     })
 
+<<<<<<< .our
     it(`should call ${serviceName} to show notifications`, async () => {
       const calls = await getCalls()
       expect(calls).to.be.an('array').of.lengthOf.at.least(1)
@@ -108,6 +132,16 @@
 
       let args = unmarshalDBusNotifyArgs(lastCall[2])
       expect(args).to.deep.equal({
+=======
+    it('should call ' + serviceName + ' to show notifications', async () => {
+      const calls = await getCalls()
+      assert(calls.length >= 1)
+      let lastCall = calls[calls.length - 1]
+      let methodName = lastCall[1]
+      assert.equal(methodName, 'Notify')
+      let args = unmarshalDBusNotifyArgs(lastCall[2])
+      assert.deepEqual(args, {
+>>>>>>> .their
         app_name: appName,
         replaces_id: 0,
         app_icon: '',
changed in both
  base   100644 122170292838e951ade4989669c87a7531e89ba7 spec/api-web-contents-spec.js
  our    100644 be02cb3f84001a541d64b11fe6eda50fc32e8afd spec/api-web-contents-spec.js
  their  100644 cf9025228994b80526e5b4ccb715b4cefba56b92 spec/api-web-contents-spec.js
@@ -122,6 +122,7 @@
     })
   })
 
+<<<<<<< .our
   // Disabled because flaky. See #13969
   xdescribe('isCurrentlyAudible() API', () => {
     it('returns whether audio is playing', async () => {
@@ -138,6 +139,8 @@
     })
   })
 
+=======
+>>>>>>> .their
   describe('getWebPreferences() API', () => {
     it('should not crash when called for devTools webContents', (done) => {
       w.webContents.openDevTools()
changed in both
  base   100644 2d388ca3b5744ea69d96ef71da6ade70e3dd001b spec/chromium-spec.js
  our    100644 d90269769d269e4054d25cba4b6c4ac8a1929aa6 spec/chromium-spec.js
  their  100644 25bef2e689e5ecbcd1485a042e84691db9400659 spec/chromium-spec.js
@@ -319,8 +319,12 @@
       b = window.open(windowUrl, '', 'nodeIntegration=no,show=no')
     })
 
+<<<<<<< .our
     // TODO(codebytere): re-enable this test
     xit('disables node integration when it is disabled on the parent window for chrome devtools URLs', (done) => {
+=======
+    it('disables node integration when it is disabled on the parent window for chrome devtools URLs', (done) => {
+>>>>>>> .their
       let b
       app.once('web-contents-created', (event, contents) => {
         contents.once('did-finish-load', () => {
changed in both
  base   100644 07176e0097efa17e8f8aea5bb059a2739b8c3336 spec/fixtures/api/singleton/main.js
  our    100644 3202a7a180d6d48c70706d5ef244652872b24bbc spec/fixtures/api/singleton/main.js
  their  100644 cbf3da1117d91eb8df1b1e6363737a210b7eae78 spec/fixtures/api/singleton/main.js
@@ -3,8 +3,11 @@
 app.once('ready', () => {
   console.log('started')  // ping parent
 })
+<<<<<<< .our
 
 const gotTheLock = app.requestSingleInstanceLock()
+=======
+>>>>>>> .their
 
 app.on('second-instance', () => {
   setImmediate(() => app.exit(0))
changed in both
  base   100644 cfe840ca0a44c5766509b2865034d98e375da1a1 spec/modules-spec.js
  our    100644 b996b8f4839bff2160bffb69e55263b16a4178d7 spec/modules-spec.js
  their  100644 28f2602acff67b2da9accd0574d64d386e0795a7 spec/modules-spec.js
changed in both
  base   100644 e2d7d001eb49a9b01edcf9590ccdcb7ac8cc669c spec/node-spec.js
  our    100644 9bb03494a56ffacec075c40bebde39a3b57ac734 spec/node-spec.js
  their  100644 f053aa4dbadbbc216d98f3a985f29069bb2e4786 spec/node-spec.js
changed in both
  base   100644 ca5cc28d4f9f860947454dfc964208dd13ba1434 spec/static/index.html
  our    100644 fc1e153c0af2908cf7ee4c3ea4f05522de04f0f8 spec/static/index.html
  their  100644 e9d779f061cd5bdf00667d0b7942c6c30de81092 spec/static/index.html
@@ -51,7 +51,11 @@
   if (!process.env.MOCHA_REPORTER) {
     mocha.ui('bdd').reporter(isCi ? 'tap' : 'html')
   }
-  mocha.timeout(isCi ? 30000 : 10000)
+  if (process.env.MOCHA_TIMEOUT && process.env.MOCHA_TIMEOUT > 0) {
+    mocha.timeout(process.env.MOCHA_TIMEOUT)
+  } else {
+    mocha.timeout(isCi ? 30000 : 10000)
+  }
 
   const query = Mocha.utils.parseQuery(window.location.search || '')
   if (query.grep) mocha.grep(query.grep)
changed in both
  base   160000 db1b314c019f6acbd4d1be273b63521cc6051d3c vendor/libchromiumcontent
  our    160000 c85470a1c379b1c4bedb372c146521bc4be9b75d vendor/libchromiumcontent
  their  160000 5e61586b615e23a1426543a6d134fc9023642b59 vendor/libchromiumcontent
