merged
  result 100644 475565722b1029936ff5d7fe47196ca0eb445eb0 .yarnrc
  our    100644 58d37cc88fb09a1944c25f4599a9bf93b42a143e .yarnrc
@@ -1,3 +1,3 @@
 disturl "https://atom.io/download/electron"
-target "2.0.7"
+target "3.0.0-beta.5"
 runtime "electron"
merged
  result 100644 744a6bcac17ec79314944ff462354c088a311af1 OSSREADME.json
  our    100644 e15cccabcadbd5afb0980967f0af53c135710fc0 OSSREADME.json
@@ -2,7 +2,7 @@
 [
 {
 	"name": "chromium",
-	"version": "61.0.3163.100",
+	"version": "66.0.3359.181",
 	"repositoryURL": "http://www.chromium.org/Home",
 	"licenseDetail": [
 		"BSD License",
@@ -38,20 +38,20 @@
 },
 {
 	"name": "libchromiumcontent",
-	"version": "61.0.3163.100",
+	"version": "66.0.3359.181",
 	"license": "MIT",
 	"repositoryURL": "https://github.com/electron/libchromiumcontent",
 	"isProd": true
 },
 {
 	"name": "nodejs",
-	"version": "8.9.3",
+	"version": "10.2.0",
 	"repositoryURL": "https://github.com/nodejs/node",
 	"isProd": true
 },
 {
 	"name": "electron",
-	"version": "2.0.7",
+	"version": "3.0.0-beta.5",
 	"license": "MIT",
 	"repositoryURL": "https://github.com/electron/electron",
 	"isProd": true
merged
  result 100644 03d292a48e340ca5d7d7159b9154a1ded1afde78 build/tfs/darwin/continuous-build-darwin.yml
  our    100644 5fadd2b4d8d03dcad0a6574f23bf5e9dd0c23162 build/tfs/darwin/continuous-build-darwin.yml
@@ -1,7 +1,7 @@
 steps:
 - task: NodeTool@0
   inputs:
-    versionSpec: "8.9.1"
+    versionSpec: "10.2.1"
 - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
   inputs:
     versionSpec: "1.3.2"
merged
  result 100644 4ecef7ba0fd03bbc37e69069ea2a31c096746fda build/tfs/darwin/product-build-darwin.yml
  our    100644 0dd3150358630c75dbf77387203c2ba39425b301 build/tfs/darwin/product-build-darwin.yml
@@ -1,7 +1,7 @@
 steps:
 - task: NodeTool@0
   inputs:
-    versionSpec: "8.9.1"
+    versionSpec: "10.2.1"
 
 - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
   inputs:
merged
  result 100644 ed9df376cb24ffa7c9c31fe0b5aa24c27cbaaf8e build/tfs/linux/continuous-build-linux.yml
  our    100644 abd9a9126dd498b75fadc73e74027c520784a49c build/tfs/linux/continuous-build-linux.yml
@@ -11,7 +11,7 @@
     service dbus start
 - task: NodeTool@0
   inputs:
-    versionSpec: "8.9.1"
+    versionSpec: "10.2.1"
 - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
   inputs:
     versionSpec: "1.3.2"
merged
  result 100644 67856362537197392c9021d26df2a9db2b5a1f1f build/tfs/linux/product-build-linux.yml
  our    100644 9505d71ff34898c51d8133de2a9aa145a8cc567d build/tfs/linux/product-build-linux.yml
@@ -1,7 +1,7 @@
 steps:
 - task: NodeTool@0
   inputs:
-    versionSpec: "8.9.1"
+    versionSpec: "10.2.1"
 
 - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
   inputs:
merged
  result 100644 4d579f0dcd22370da02671d279a59ed1cc81a0e4 build/tfs/win32/continuous-build-win32.yml
  our    100644 4e409f5d53dcaecbc0c5a30e655943ea929fdd36 build/tfs/win32/continuous-build-win32.yml
@@ -1,7 +1,7 @@
 steps:
 - task: NodeTool@0
   inputs:
-    versionSpec: "8.9.1"
+    versionSpec: "10.2.1"
 - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
   inputs:
     versionSpec: "1.3.2"
merged
  result 100644 41c6190f2fbe2177b3eb25a14602f8f121f52beb build/tfs/win32/product-build-win32.yml
  our    100644 c887ade31fddad368413f901c9e8b2e1a350228d build/tfs/win32/product-build-win32.yml
@@ -1,7 +1,7 @@
 steps:
 - task: NodeTool@0
   inputs:
-    versionSpec: "8.9.1"
+    versionSpec: "10.2.1"
 
 - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
   inputs:
changed in both
  base   100644 786f109e924641589010138a6cc2e3cc001dbd8d package.json
  our    100644 d0e982ce0b76c5b1b5eb02b673e459e47f3353a4 package.json
  their  100644 7c08b03da29d150ed70f032232dcf5c8fce26685 package.json
@@ -1,7 +1,7 @@
 {
   "name": "code-oss-dev",
   "version": "1.27.0",
-  "distro": "a4155d9780fbbc94ead6cb3017dd0fc3806c57b8",
+  "distro": "8bf4f1b8058f88ed6a0e54643470c7171eab1eb7",
   "author": {
     "name": "Microsoft Corporation"
   },
@@ -44,11 +44,11 @@
     "spdlog": "0.7.1",
     "sudo-prompt": "8.2.0",
     "v8-inspect-profiler": "^0.0.8",
-    "vscode-chokidar": "1.6.2",
+    "vscode-chokidar": "^1.6.2",
     "vscode-debugprotocol": "1.31.0",
-    "vscode-nsfw": "1.0.17",
+    "vscode-nsfw": "Tyriar/vscode-nsfw#electron-3.0.x",
     "vscode-ripgrep": "1.1.0",
-    "vscode-textmate": "^4.0.1",
+    "vscode-textmate": "Microsoft/vscode-textmate#electron-3.0.x",
     "vscode-xterm": "3.7.0-beta4",
     "winreg": "^1.2.4",
     "yauzl": "^2.9.1"
@@ -139,7 +139,7 @@
   },
   "optionalDependencies": {
     "windows-foreground-love": "0.1.0",
-    "windows-mutex": "^0.2.0",
-    "windows-process-tree": "0.2.2"
+    "windows-mutex": "Microsoft/node-windows-mutex#electron-3.0.x",
+    "windows-process-tree": "Microsoft/vscode-windows-process-tree#electron-3.0.x"
   }
 }
\ No newline at end of file
merged
  result 100644 c08df94a8595ab1577dcd2e93d638a6680e75789 src/main.js
  our    100644 711217d64e2bdc43f33652d0bed34caa052cc331 src/main.js
@@ -78,10 +78,8 @@
 
 const app = require('electron').app;
 
-// TODO@Ben Electron 2.0.x: prevent localStorage migration from SQLite to LevelDB due to issues
-app.commandLine.appendSwitch('disable-mojo-local-storage');
-
 // Force pre-Chrome-60 color profile handling (for https://github.com/Microsoft/vscode/issues/51791)
+// TODO@Ben check if future versions of Electron still support this flag
 app.commandLine.appendSwitch('disable-features', 'ColorCorrectRendering');
 
 const minimist = require('minimist');
merged
  result 100644 defbbd2bc6aac9900bd4f750bc1585eb13d1c57c src/typings/electron.d.ts
  our    100644 445234b2076f14266e2c682765eab7de784259e4 src/typings/electron.d.ts
@@ -1,5 +1,5 @@
-// Type definitions for Electron 2.0.5
-// Project: http://electron.atom.io/
+// Type definitions for Electron 3.0.0-beta.5
+// Project: http://electronjs.org/
 // Definitions by: The Electron Team <https://github.com/electron/electron>
 // Definitions: https://github.com/electron/electron-typescript-definitions
 
@@ -64,6 +64,7 @@
 		Menu: typeof Menu;
 		MenuItem: typeof MenuItem;
 		net: Net;
+		netLog: NetLog;
 		Notification: typeof Notification;
 		powerMonitor: PowerMonitor;
 		powerSaveBlocker: PowerSaveBlocker;
@@ -101,6 +102,7 @@
 	type nativeImage = NativeImage;
 	const nativeImage: typeof NativeImage;
 	const net: Net;
+	const netLog: NetLog;
 	const powerMonitor: PowerMonitor;
 	const powerSaveBlocker: PowerSaveBlocker;
 	const protocol: Protocol;
@@ -471,6 +473,50 @@
 		addListener(event: 'ready', listener: (launchInfo: any) => void): this;
 		removeListener(event: 'ready', listener: (launchInfo: any) => void): this;
 		/**
+		 * This event will be emitted inside the primary instance of your application when
+		 * a second instance has been executed. argv is an Array of the second instance's
+		 * command line arguments, and workingDirectory is its current working directory.
+		 * Usually applications respond to this by making their primary window focused and
+		 * non-minimized. This event is guaranteed to be emitted after the ready event of
+		 * app gets emitted.
+		 */
+		on(event: 'second-instance', listener: (event: Event,
+			/**
+			 * An array of the second instance's command line arguments
+			 */
+			argv: string[],
+			/**
+			 * The second instance's working directory
+			 */
+			workingDirectory: string) => void): this;
+		once(event: 'second-instance', listener: (event: Event,
+			/**
+			 * An array of the second instance's command line arguments
+			 */
+			argv: string[],
+			/**
+			 * The second instance's working directory
+			 */
+			workingDirectory: string) => void): this;
+		addListener(event: 'second-instance', listener: (event: Event,
+			/**
+			 * An array of the second instance's command line arguments
+			 */
+			argv: string[],
+			/**
+			 * The second instance's working directory
+			 */
+			workingDirectory: string) => void): this;
+		removeListener(event: 'second-instance', listener: (event: Event,
+			/**
+			 * An array of the second instance's command line arguments
+			 */
+			argv: string[],
+			/**
+			 * The second instance's working directory
+			 */
+			workingDirectory: string) => void): this;
+		/**
 		 * Emitted when a client certificate is requested. The url corresponds to the
 		 * navigation entry requesting the client certificate and callback can be called
 		 * with an entry filtered from the list. Using event.preventDefault() prevents the
@@ -497,6 +543,17 @@
 			certificateList: Certificate[],
 			callback: (certificate?: Certificate) => void) => void): this;
 		/**
+		 * Emitted when Electron has created a new session.
+		 */
+		on(event: 'session-created', listener: (event: Event,
+			session: Session) => void): this;
+		once(event: 'session-created', listener: (event: Event,
+			session: Session) => void): this;
+		addListener(event: 'session-created', listener: (event: Event,
+			session: Session) => void): this;
+		removeListener(event: 'session-created', listener: (event: Event,
+			session: Session) => void): this;
+		/**
 		 * Emitted when Handoff is about to be resumed on another device. If you need to
 		 * update the state to be transferred, you should call event.preventDefault()
 		 * immediately, construct a new userInfo dictionary and call
@@ -581,7 +638,7 @@
 		 * event represents the applicationWillFinishLaunching notification of
 		 * NSApplication. You would usually set up listeners for the open-file and open-url
 		 * events here, and start the crash reporter and auto updater. In most cases, you
-		 * should just do everything in the ready event handler.
+		 * should do everything in the ready event handler.
 		 */
 		on(event: 'will-finish-launching', listener: Function): this;
 		once(event: 'will-finish-launching', listener: Function): this;
@@ -656,12 +713,12 @@
 		 * Fetches a path's associated icon. On Windows, there a 2 kinds of icons: On Linux
 		 * and macOS, icons depend on the application associated with file mime type.
 		 */
-		getFileIcon(path: string, callback: (error: Error, icon: NativeImage) => void): void;
+		getFileIcon(path: string, options: FileIconOptions, callback: (error: Error, icon: NativeImage) => void): void;
 		/**
 		 * Fetches a path's associated icon. On Windows, there a 2 kinds of icons: On Linux
 		 * and macOS, icons depend on the application associated with file mime type.
 		 */
-		getFileIcon(path: string, options: FileIconOptions, callback: (error: Error, icon: NativeImage) => void): void;
+		getFileIcon(path: string, callback: (error: Error, icon: NativeImage) => void): void;
 		getGPUFeatureStatus(): GPUFeatureStatus;
 		getJumpListSettings(): JumpListSettings;
 		/**
@@ -689,6 +746,12 @@
 		getPath(name: string): string;
 		getVersion(): string;
 		/**
+		 * This method returns whether or not this instance of your app is currently
+		 * holding the single instance lock.  You can request the lock with
+		 * app.requestSingleInstanceLock() and release with app.releaseSingleInstanceLock()
+		 */
+		hasSingleInstanceLock(): boolean;
+		/**
 		 * Hides all application windows without minimizing them.
 		 */
 		hide(): void;
@@ -718,27 +781,6 @@
 		isReady(): boolean;
 		isUnityRunning(): boolean;
 		/**
-		 * This method makes your application a Single Instance Application - instead of
-		 * allowing multiple instances of your app to run, this will ensure that only a
-		 * single instance of your app is running, and other instances signal this instance
-		 * and exit. callback will be called by the first instance with callback(argv,
-		 * workingDirectory) when a second instance has been executed. argv is an Array of
-		 * the second instance's command line arguments, and workingDirectory is its
-		 * current working directory. Usually applications respond to this by making their
-		 * primary window focused and non-minimized. The callback is guaranteed to be
-		 * executed after the ready event of app gets emitted. This method returns false if
-		 * your process is the primary instance of the application and your app should
-		 * continue loading. And returns true if your process has sent its parameters to
-		 * another instance, and you should immediately quit. On macOS the system enforces
-		 * single instance automatically when users try to open a second instance of your
-		 * app in Finder, and the open-file and open-url events will be emitted for that.
-		 * However when users start your app in command line the system's single instance
-		 * mechanism will be bypassed and you have to use this method to ensure single
-		 * instance. An example of activating the window of primary instance when a second
-		 * instance starts:
-		 */
-		makeSingleInstance(callback: (argv: string[], workingDirectory: string) => void): boolean;
-		/**
 		 * No confirmation dialog will be presented by default, if you wish to allow the
 		 * user to confirm the operation you may do so using the dialog API. NOTE: This
 		 * method throws errors if anything other than the user causes the move to fail.
@@ -770,16 +812,35 @@
 		 */
 		relaunch(options?: RelaunchOptions): void;
 		/**
-		 * Releases all locks that were created by makeSingleInstance. This will allow
-		 * multiple instances of the application to once again run side by side.
+		 * Releases all locks that were created by requestSingleInstanceLock. This will
+		 * allow multiple instances of the application to once again run side by side.
 		 */
-		releaseSingleInstance(): void;
+		releaseSingleInstanceLock(): void;
 		/**
 		 * This method checks if the current executable as the default handler for a
 		 * protocol (aka URI scheme). If so, it will remove the app as the default handler.
 		 */
 		removeAsDefaultProtocolClient(protocol: string, path?: string, args?: string[]): boolean;
 		/**
+		 * This method makes your application a Single Instance Application - instead of
+		 * allowing multiple instances of your app to run, this will ensure that only a
+		 * single instance of your app is running, and other instances signal this instance
+		 * and exit. The return value of this method indicates whether or not this instance
+		 * of your application successfully obtained the lock.  If it failed to obtain the
+		 * lock you can assume that another instance of your application is already running
+		 * with the lock and exit immediately. I.e. This method returns true if your
+		 * process is the primary instance of your application and your app should continue
+		 * loading.  It returns false if your process should immediately quit as it has
+		 * sent its parameters to another instance that has already acquired the lock. On
+		 * macOS the system enforces single instance automatically when users try to open a
+		 * second instance of your app in Finder, and the open-file and open-url events
+		 * will be emitted for that. However when users start your app in command line the
+		 * system's single instance mechanism will be bypassed and you have to use this
+		 * method to ensure single instance. An example of activating the window of primary
+		 * instance when a second instance starts:
+		 */
+		requestSingleInstanceLock(): boolean;
+		/**
 		 * Set the about panel options. This will override the values defined in the app's
 		 * .plist file. See the Apple docs for more details.
 		 */
@@ -883,8 +944,15 @@
 		 * userInfo into its current userInfo dictionary.
 		 */
 		updateCurrentActivity(type: string, userInfo: any): void;
+		whenReady(): Promise<any>;
 		commandLine: CommandLine;
 		dock: Dock;
+		/**
+		 * A Boolean property that returns  true if the app is packaged, false otherwise.
+		 * For many apps, this property can be used to distinguish development and
+		 * production environments.
+		 */
+		isPackaged?: boolean;
 	}
 
 	interface AutoUpdater extends EventEmitter {
@@ -892,6 +960,17 @@
 		// Docs: http://electron.atom.io/docs/api/auto-updater
 
 		/**
+		 * This event is emitted after a user calls quitAndInstall(). When this API is
+		 * called, the before-quit event is not emitted before all windows are closed. As a
+		 * result you should listen to this event if you wish to perform actions before the
+		 * windows are closed while a process is quitting, as well as listening to
+		 * before-quit.
+		 */
+		on(event: 'before-quit-for-update', listener: Function): this;
+		once(event: 'before-quit-for-update', listener: Function): this;
+		addListener(event: 'before-quit-for-update', listener: Function): this;
+		removeListener(event: 'before-quit-for-update', listener: Function): this;
+		/**
 		 * Emitted when checking if an update has started.
 		 */
 		on(event: 'checking-for-update', listener: Function): this;
@@ -1034,7 +1113,7 @@
 		 * cancel the close. For example: Note: There is a subtle difference between the
 		 * behaviors of window.onbeforeunload = handler and
 		 * window.addEventListener('beforeunload', handler). It is recommended to always
-		 * set the event.returnValue explicitly, instead of just returning a value, as the
+		 * set the event.returnValue explicitly, instead of only returning a value, as the
 		 * former works more consistently within Electron.
 		 */
 		on(event: 'close', listener: (event: Event) => void): this;
@@ -1107,7 +1186,7 @@
 		removeListener(event: 'minimize', listener: Function): this;
 		/**
 		 * Emitted when the window is being moved to a new position. Note: On macOS this
-		 * event is just an alias of moved.
+		 * event is an alias of moved.
 		 */
 		on(event: 'move', listener: Function): this;
 		once(event: 'move', listener: Function): this;
@@ -1274,7 +1353,7 @@
 		 * emitted.
 		 */
 		static getExtensions(): Extensions;
-		static getFocusedWindow(): BrowserWindow;
+		static getFocusedWindow(): BrowserWindow | null;
 		/**
 		 * Remove a DevTools extension by name. Note: This API cannot be called before the
 		 * ready event of the app module is emitted.
@@ -1440,6 +1519,10 @@
 		 */
 		moveTabToNewWindow(): void;
 		/**
+		 * Moves window to top(z-order) regardless of focus
+		 */
+		moveTop(): void;
+		/**
 		 * Uses Quick Look to preview a file at a given path.
 		 */
 		previewFile(path: string, displayName?: string): void;
@@ -1484,8 +1567,9 @@
 		 * ratio for HD @1920x1080) within the player itself we would call this function
 		 * with arguments of 16/9 and [ 40, 50 ]. The second argument doesn't care where
 		 * the extra width and height are within the content view--only that they exist.
-		 * Just sum any extra width and height areas you have within the overall content
-		 * view.
+		 * Sum any extra width and height areas you have within the overall content view.
+		 * Calling this function with a value of 0 will remove any previously set aspect
+		 * ratios.
 		 */
 		setAspectRatio(aspectRatio: number, extraSize: Size): void;
 		/**
@@ -1602,7 +1686,7 @@
 		 * Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to
 		 * convey some sort of application status or to passively notify the user.
 		 */
-		setOverlayIcon(overlay: NativeImage, description: string): void;
+		setOverlayIcon(overlay: NativeImage | null, description: string): void;
 		/**
 		 * Sets parent as current window's parent window, passing null will turn current
 		 * window into a top-level window.
@@ -2438,6 +2522,12 @@
 		// Docs: http://electron.atom.io/docs/api/structures/desktop-capturer-source
 
 		/**
+		 * A unique identifier that will correspond to the id of the matching returned by
+		 * the . On some platforms, this is equivalent to the XX portion of the id field
+		 * above and on others it will differ. It will be an empty string if not available.
+		 */
+		display_id: string;
+		/**
 		 * The identifier of a window or screen that can be used as a chromeMediaSourceId
 		 * constraint when calling [navigator.webkitGetUserMedia]. The format of the
 		 * identifier will be window:XX or screen:XX, where XX is a random generated
@@ -2785,26 +2875,42 @@
 		 */
 		on(event: 'transactions-updated', listener: (event: Event,
 			/**
-			 * Array of transactions.
+			 * Array of objects.
 			 */
 			transactions: Transaction[]) => void): this;
 		once(event: 'transactions-updated', listener: (event: Event,
 			/**
-			 * Array of transactions.
+			 * Array of objects.
 			 */
 			transactions: Transaction[]) => void): this;
 		addListener(event: 'transactions-updated', listener: (event: Event,
 			/**
-			 * Array of transactions.
+			 * Array of objects.
 			 */
 			transactions: Transaction[]) => void): this;
 		removeListener(event: 'transactions-updated', listener: (event: Event,
 			/**
-			 * Array of transactions.
+			 * Array of objects.
 			 */
 			transactions: Transaction[]) => void): this;
 		canMakePayments(): boolean;
+		/**
+		 * Completes all pending transactions.
+		 */
+		finishAllTransactions(): void;
+		/**
+		 * Completes the pending transactions corresponding to the date.
+		 */
+		finishTransactionByDate(date: string): void;
+		/**
+		 * Retrieves the product descriptions.
+		 */
+		getProducts(productIDs: string[], callback: (products: Product[]) => void): void;
 		getReceiptURL(): string;
+		/**
+		 * You should listen for the transactions-updated event as soon as possible and
+		 * certainly before you call purchaseProduct.
+		 */
 		purchaseProduct(productID: string, quantity?: number, callback?: (isProductValid: boolean) => void): void;
 	}
 
@@ -3097,10 +3203,9 @@
 		removeListener(event: 'menu-will-show', listener: (event: Event) => void): this;
 		constructor();
 		/**
-		 * Generally, the template is just an array of options for constructing a MenuItem.
-		 * The usage can be referenced above. You can also attach other fields to the
-		 * element of the template and they will become properties of the constructed menu
-		 * items.
+		 * Generally, the template is an array of options for constructing a MenuItem. The
+		 * usage can be referenced above. You can also attach other fields to the element
+		 * of the template and they will become properties of the constructed menu items.
 		 */
 		static buildFromTemplate(template: MenuItemConstructorOptions[]): Menu;
 		/**
@@ -3110,9 +3215,9 @@
 		static getApplicationMenu(): Menu | null;
 		/**
 		 * Sends the action to the first responder of application. This is used for
-		 * emulating default macOS menu behaviors. Usually you would just use the role
-		 * property of a MenuItem. See the macOS Cocoa Event Handling Guide for more
-		 * information on macOS' native actions.
+		 * emulating default macOS menu behaviors. Usually you would use the role property
+		 * of a MenuItem. See the macOS Cocoa Event Handling Guide for more information on
+		 * macOS' native actions.
 		 */
 		static sendActionToFirstResponder(action: string): void;
 		/**
@@ -3248,6 +3353,29 @@
 		request(options: any | string): ClientRequest;
 	}
 
+	interface NetLog extends EventEmitter {
+
+		// Docs: http://electron.atom.io/docs/api/net-log
+
+		/**
+		 * Starts recording network events to path.
+		 */
+		startLogging(path: string): void;
+		/**
+		 * Stops recording network events. If not called, net logging will automatically
+		 * end when app quits.
+		 */
+		stopLogging(callback?: (path: string) => void): void;
+		/**
+		 * A Boolean property that indicates whether network logs are recorded.
+		 */
+		currentlyLogging?: boolean;
+		/**
+		 * A String property that returns the path to the current log file.
+		 */
+		currentlyLoggingPath?: string;
+	}
+
 	class Notification extends EventEmitter {
 
 		// Docs: http://electron.atom.io/docs/api/notification
@@ -3329,11 +3457,11 @@
 		close(): void;
 		/**
 		 * Immediately shows the notification to the user, please note this means unlike
-		 * the HTML5 Notification implementation, simply instantiating a new Notification
-		 * does not immediately show it to the user, you need to call this method before
-		 * the OS will display it. If the notification has been shown before, this method
-		 * will dismiss the previously shown notification and create a new one with
-		 * identical properties.
+		 * the HTML5 Notification implementation, instantiating a new Notification does not
+		 * immediately show it to the user, you need to call this method before the OS will
+		 * display it. If the notification has been shown before, this method will dismiss
+		 * the previously shown notification and create a new one with identical
+		 * properties.
 		 */
 		show(): void;
 	}
@@ -3365,6 +3493,13 @@
 		// Docs: http://electron.atom.io/docs/api/power-monitor
 
 		/**
+		 * Emitted when the system is about to lock the screen.
+		 */
+		on(event: 'lock-screen', listener: Function): this;
+		once(event: 'lock-screen', listener: Function): this;
+		addListener(event: 'lock-screen', listener: Function): this;
+		removeListener(event: 'lock-screen', listener: Function): this;
+		/**
 		 * Emitted when the system changes to AC power.
 		 */
 		on(event: 'on-ac', listener: Function): this;
@@ -3402,6 +3537,13 @@
 		once(event: 'suspend', listener: Function): this;
 		addListener(event: 'suspend', listener: Function): this;
 		removeListener(event: 'suspend', listener: Function): this;
+		/**
+		 * Emitted as soon as the systems screen is unlocked.
+		 */
+		on(event: 'unlock-screen', listener: Function): this;
+		once(event: 'unlock-screen', listener: Function): this;
+		addListener(event: 'unlock-screen', listener: Function): this;
+		removeListener(event: 'unlock-screen', listener: Function): this;
 	}
 
 	interface PowerSaveBlocker extends EventEmitter {
@@ -3458,6 +3600,45 @@
 		type: string;
 	}
 
+	interface Product {
+
+		// Docs: http://electron.atom.io/docs/api/structures/product
+
+		/**
+		 * The total size of the content, in bytes.
+		 */
+		contentLengths: number[];
+		/**
+		 * A string that identifies the version of the content.
+		 */
+		contentVersion: string;
+		/**
+		 * A Boolean value that indicates whether the App Store has downloadable content
+		 * for this product.
+		 */
+		downloadable: boolean;
+		/**
+		 * The locale formatted price of the product.
+		 */
+		formattedPrice: string;
+		/**
+		 * A description of the product.
+		 */
+		localizedDescription: string;
+		/**
+		 * The name of the product.
+		 */
+		localizedTitle: string;
+		/**
+		 * The cost of the product in the local currency.
+		 */
+		price: number;
+		/**
+		 * The string that identifies the product to the Apple App Store.
+		 */
+		productIdentifier: string;
+	}
+
 	interface Protocol extends EventEmitter {
 
 		// Docs: http://electron.atom.io/docs/api/protocol
@@ -3590,11 +3771,32 @@
 		y: number;
 	}
 
+	interface Referrer {
+
+		// Docs: http://electron.atom.io/docs/api/structures/referrer
+
+		/**
+		 * Can be default, unsafe-url, no-referrer-when-downgrade, no-referrer, origin,
+		 * strict-origin-when-cross-origin, same-origin or strict-origin. See the for more
+		 * details on the meaning of these values.
+		 */
+		policy: ('default' | 'unsafe-url' | 'no-referrer-when-downgrade' | 'no-referrer' | 'origin' | 'strict-origin-when-cross-origin' | 'same-origin' | 'strict-origin');
+		/**
+		 * HTTP Referrer URL.
+		 */
+		url: string;
+	}
+
 	interface Remote extends MainInterface {
 
 		// Docs: http://electron.atom.io/docs/api/remote
 
 		getCurrentWebContents(): WebContents;
+		/**
+		 * Note: Do not use removeAllListeners on BrowserWindow. Use of this can remove all
+		 * blur listeners, disable click events on touch bar buttons, and other unintended
+		 * consequences.
+		 */
 		getCurrentWindow(): BrowserWindow;
 		getGlobal(name: string): any;
 		/**
@@ -3698,6 +3900,17 @@
 			oldDisplay: Display) => void): this;
 		removeListener(event: 'display-removed', listener: (event: Event,
 			oldDisplay: Display) => void): this;
+		/**
+		 * Converts a screen DIP point to a screen physical point. The DPI scale is
+		 * performed relative to the display containing the DIP point.
+		 */
+		dipToScreenPoint(point: Point): Point;
+		/**
+		 * Converts a screen DIP rect to a screen physical rect. The DPI scale is performed
+		 * relative to the display nearest to window. If window is null, scaling will be
+		 * performed to the display nearest to rect.
+		 */
+		dipToScreenRect(window: BrowserWindow | null, rect: Rectangle): Rectangle;
 		getAllDisplays(): Display[];
 		/**
 		 * The current absolute position of the mouse pointer.
@@ -3705,8 +3918,18 @@
 		getCursorScreenPoint(): Point;
 		getDisplayMatching(rect: Rectangle): Display;
 		getDisplayNearestPoint(point: Point): Display;
-		getMenuBarHeight(): number;
 		getPrimaryDisplay(): Display;
+		/**
+		 * Converts a screen physical point to a screen DIP point. The DPI scale is
+		 * performed relative to the display containing the physical point.
+		 */
+		screenToDipPoint(point: Point): Point;
+		/**
+		 * Converts a screen physical rect to a screen DIP rect. The DPI scale is performed
+		 * relative to the display nearest to window. If window is null, scaling will be
+		 * performed to the display nearest to rect.
+		 */
+		screenToDipRect(window: BrowserWindow | null, rect: Rectangle): Rectangle;
 	}
 
 	interface ScrubberItem {
@@ -4052,6 +4275,11 @@
 		 */
 		postNotification(event: string, userInfo: any): void;
 		/**
+		 * Posts event as native notifications of macOS. The userInfo is an Object that
+		 * contains the user information dictionary sent along with the notification.
+		 */
+		postWorkspaceNotification(event: string, userInfo: any): void;
+		/**
 		 * Add the specified defaults to your application's NSUserDefaults.
 		 */
 		registerDefaults(defaults: any): void;
@@ -4080,6 +4308,12 @@
 		 */
 		subscribeNotification(event: string, callback: (event: string, userInfo: any) => void): void;
 		/**
+		 * Same as subscribeNotification, but uses
+		 * NSWorkspace.sharedWorkspace.notificationCenter. This is necessary for events
+		 * such as NSWorkspaceDidActivateApplicationNotification.
+		 */
+		subscribeWorkspaceNotification(event: string, callback: (event: string, userInfo: any) => void): void;
+		/**
 		 * Same as unsubscribeNotification, but removes the subscriber from
 		 * NSNotificationCenter.
 		 */
@@ -4088,6 +4322,11 @@
 		 * Removes the subscriber with id.
 		 */
 		unsubscribeNotification(id: number): void;
+		/**
+		 * Same as unsubscribeNotification, but removes the subscriber from
+		 * NSWorkspace.sharedWorkspace.notificationCenter.
+		 */
+		unsubscribeWorkspaceNotification(id: number): void;
 	}
 
 	interface Task {
@@ -4251,17 +4490,32 @@
 
 		// Docs: http://electron.atom.io/docs/api/structures/transaction
 
+		/**
+		 * The error code if an error occurred while processing the transaction.
+		 */
 		errorCode: number;
+		/**
+		 * The error message if an error occurred while processing the transaction.
+		 */
 		errorMessage: string;
+		/**
+		 * The identifier of the restored transaction by the App Store.
+		 */
 		originalTransactionIdentifier: string;
 		payment: Payment;
+		/**
+		 * The date the transaction was added to the App Store’s payment queue.
+		 */
 		transactionDate: string;
+		/**
+		 * A string that uniquely identifies a successful payment transaction.
+		 */
 		transactionIdentifier: string;
 		/**
-		 * The transaction sate ("purchasing", "purchased", "failed", "restored", or
-		 * "deferred")
+		 * The transaction state, can be purchasing, purchased, failed, restored or
+		 * deferred.
 		 */
-		transactionState: string;
+		transactionState: ('purchasing' | 'purchased' | 'failed' | 'restored' | 'deferred');
 	}
 
 	class Tray extends EventEmitter {
@@ -4531,6 +4785,7 @@
 		 * The bounds of this tray icon as Object.
 		 */
 		getBounds(): Rectangle;
+		getIgnoreDoubleClickEvents(): boolean;
 		isDestroyed(): boolean;
 		/**
 		 * Pops up the context menu of the tray icon. When menu is passed, the menu will be
@@ -4549,13 +4804,19 @@
 		 */
 		setHighlightMode(mode: 'selection' | 'always' | 'never'): void;
 		/**
+		 * Sets the option to ignore double click events. Ignoring these events allows you
+		 * to detect every individual click of the tray icon. This value is set to false by
+		 * default.
+		 */
+		setIgnoreDoubleClickEvents(ignore: boolean): void;
+		/**
 		 * Sets the image associated with this tray icon.
 		 */
 		setImage(image: NativeImage | string): void;
 		/**
 		 * Sets the image associated with this tray icon when pressed on macOS.
 		 */
-		setPressedImage(image: NativeImage): void;
+		setPressedImage(image: NativeImage | string): void;
 		/**
 		 * Sets the title displayed aside of the tray icon in the status bar (Support ANSI
 		 * colors).
@@ -4625,32 +4886,6 @@
 		type: string;
 	}
 
-	interface UploadFileSystem {
-
-		// Docs: http://electron.atom.io/docs/api/structures/upload-file-system
-
-		/**
-		 * FileSystem url to read data for upload.
-		 */
-		filsSystemURL: string;
-		/**
-		 * Number of bytes to read from offset. Defaults to 0.
-		 */
-		length: number;
-		/**
-		 * Last Modification time in number of seconds since the UNIX epoch.
-		 */
-		modificationTime: number;
-		/**
-		 * Defaults to 0.
-		 */
-		offset: number;
-		/**
-		 * fileSystem.
-		 */
-		type: string;
-	}
-
 	interface UploadRawData {
 
 		// Docs: http://electron.atom.io/docs/api/structures/upload-raw-data
@@ -4737,19 +4972,23 @@
 		 * Emitted when the associated window logs a console message. Will not be emitted
 		 * for windows with offscreen rendering enabled.
 		 */
-		on(event: 'console-message', listener: (level: number,
+		on(event: 'console-message', listener: (event: Event,
+			level: number,
 			message: string,
 			line: number,
 			sourceId: string) => void): this;
-		once(event: 'console-message', listener: (level: number,
+		once(event: 'console-message', listener: (event: Event,
+			level: number,
 			message: string,
 			line: number,
 			sourceId: string) => void): this;
-		addListener(event: 'console-message', listener: (level: number,
+		addListener(event: 'console-message', listener: (event: Event,
+			level: number,
 			message: string,
 			line: number,
 			sourceId: string) => void): this;
-		removeListener(event: 'console-message', listener: (level: number,
+		removeListener(event: 'console-message', listener: (event: Event,
+			level: number,
 			message: string,
 			line: number,
 			sourceId: string) => void): this;
@@ -4938,22 +5177,30 @@
 			errorCode: number,
 			errorDescription: string,
 			validatedURL: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		once(event: 'did-fail-load', listener: (event: Event,
 			errorCode: number,
 			errorDescription: string,
 			validatedURL: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		addListener(event: 'did-fail-load', listener: (event: Event,
 			errorCode: number,
 			errorDescription: string,
 			validatedURL: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		removeListener(event: 'did-fail-load', listener: (event: Event,
 			errorCode: number,
 			errorDescription: string,
 			validatedURL: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		/**
 		 * Emitted when the navigation is done, i.e. the spinner of the tab has stopped
 		 * spinning, and the onload event was dispatched.
@@ -4966,119 +5213,149 @@
 		 * Emitted when a frame has done navigation.
 		 */
 		on(event: 'did-frame-finish-load', listener: (event: Event,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		once(event: 'did-frame-finish-load', listener: (event: Event,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		addListener(event: 'did-frame-finish-load', listener: (event: Event,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		removeListener(event: 'did-frame-finish-load', listener: (event: Event,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		/**
-		 * Emitted when a redirect is received while requesting a resource.
+		 * Emitted when any frame navigation is done. This event is not emitted for in-page
+		 * navigations, such as clicking anchor links or updating the window.location.hash.
+		 * Use did-navigate-in-page event for this purpose.
 		 */
-		on(event: 'did-get-redirect-request', listener: (event: Event,
-			oldURL: string,
-			newURL: string,
-			isMainFrame: boolean,
+		on(event: 'did-frame-navigate', listener: (event: Event,
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
 			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any) => void): this;
-		once(event: 'did-get-redirect-request', listener: (event: Event,
-			oldURL: string,
-			newURL: string,
+			/**
+			 * empty for non HTTP navigations,
+			 */
+			httpStatusText: string,
 			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		once(event: 'did-frame-navigate', listener: (event: Event,
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
 			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any) => void): this;
-		addListener(event: 'did-get-redirect-request', listener: (event: Event,
-			oldURL: string,
-			newURL: string,
+			/**
+			 * empty for non HTTP navigations,
+			 */
+			httpStatusText: string,
 			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		addListener(event: 'did-frame-navigate', listener: (event: Event,
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
 			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any) => void): this;
-		removeListener(event: 'did-get-redirect-request', listener: (event: Event,
-			oldURL: string,
-			newURL: string,
+			/**
+			 * empty for non HTTP navigations,
+			 */
+			httpStatusText: string,
 			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		removeListener(event: 'did-frame-navigate', listener: (event: Event,
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
 			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any) => void): this;
-		/**
-		 * Emitted when details regarding a requested resource are available. status
-		 * indicates the socket connection to download the resource.
-		 */
-		on(event: 'did-get-response-details', listener: (event: Event,
-			status: boolean,
-			newURL: string,
-			originalURL: string,
-			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any,
-			resourceType: string) => void): this;
-		once(event: 'did-get-response-details', listener: (event: Event,
-			status: boolean,
-			newURL: string,
-			originalURL: string,
-			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any,
-			resourceType: string) => void): this;
-		addListener(event: 'did-get-response-details', listener: (event: Event,
-			status: boolean,
-			newURL: string,
-			originalURL: string,
-			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any,
-			resourceType: string) => void): this;
-		removeListener(event: 'did-get-response-details', listener: (event: Event,
-			status: boolean,
-			newURL: string,
-			originalURL: string,
-			httpResponseCode: number,
-			requestMethod: string,
-			referrer: string,
-			headers: any,
-			resourceType: string) => void): this;
+			/**
+			 * empty for non HTTP navigations,
+			 */
+			httpStatusText: string,
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		/**
-		 * Emitted when a navigation is done. This event is not emitted for in-page
-		 * navigations, such as clicking anchor links or updating the window.location.hash.
-		 * Use did-navigate-in-page event for this purpose.
+		 * Emitted when a main frame navigation is done. This event is not emitted for
+		 * in-page navigations, such as clicking anchor links or updating the
+		 * window.location.hash. Use did-navigate-in-page event for this purpose.
 		 */
 		on(event: 'did-navigate', listener: (event: Event,
-			url: string) => void): this;
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
+			httpResponseCode: number,
+			/**
+			 * empty for non HTTP navigations
+			 */
+			httpStatusText: string) => void): this;
 		once(event: 'did-navigate', listener: (event: Event,
-			url: string) => void): this;
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
+			httpResponseCode: number,
+			/**
+			 * empty for non HTTP navigations
+			 */
+			httpStatusText: string) => void): this;
 		addListener(event: 'did-navigate', listener: (event: Event,
-			url: string) => void): this;
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
+			httpResponseCode: number,
+			/**
+			 * empty for non HTTP navigations
+			 */
+			httpStatusText: string) => void): this;
 		removeListener(event: 'did-navigate', listener: (event: Event,
-			url: string) => void): this;
+			url: string,
+			/**
+			 * -1 for non HTTP navigations
+			 */
+			httpResponseCode: number,
+			/**
+			 * empty for non HTTP navigations
+			 */
+			httpStatusText: string) => void): this;
 		/**
-		 * Emitted when an in-page navigation happened. When in-page navigation happens,
-		 * the page URL changes but does not cause navigation outside of the page. Examples
-		 * of this occurring are when anchor links are clicked or when the DOM hashchange
-		 * event is triggered.
+		 * Emitted when an in-page navigation happened in any frame. When in-page
+		 * navigation happens, the page URL changes but does not cause navigation outside
+		 * of the page. Examples of this occurring are when anchor links are clicked or
+		 * when the DOM hashchange event is triggered.
 		 */
 		on(event: 'did-navigate-in-page', listener: (event: Event,
 			url: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		once(event: 'did-navigate-in-page', listener: (event: Event,
 			url: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		addListener(event: 'did-navigate-in-page', listener: (event: Event,
 			url: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		removeListener(event: 'did-navigate-in-page', listener: (event: Event,
 			url: string,
-			isMainFrame: boolean) => void): this;
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
 		/**
 		 * Corresponds to the points in time when the spinner of the tab started spinning.
 		 */
@@ -5087,6 +5364,30 @@
 		addListener(event: 'did-start-loading', listener: Function): this;
 		removeListener(event: 'did-start-loading', listener: Function): this;
 		/**
+		 * Emitted when any frame (including main) starts navigating. isInplace will be
+		 * true for in-page navigations.
+		 */
+		on(event: 'did-start-navigation', listener: (url: string,
+			isInPlace: boolean,
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		once(event: 'did-start-navigation', listener: (url: string,
+			isInPlace: boolean,
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		addListener(event: 'did-start-navigation', listener: (url: string,
+			isInPlace: boolean,
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		removeListener(event: 'did-start-navigation', listener: (url: string,
+			isInPlace: boolean,
+			isMainFrame: boolean,
+			frameProcessId: number,
+			frameRoutingId: number) => void): this;
+		/**
 		 * Corresponds to the points in time when the spinner of the tab stopped spinning.
 		 */
 		on(event: 'did-stop-loading', listener: Function): this;
@@ -5171,7 +5472,12 @@
 			 * The non-standard features (features not handled by Chromium or Electron) given
 			 * to `window.open()`.
 			 */
-			additionalFeatures: string[]) => void): this;
+			additionalFeatures: string[],
+			/**
+			 * The referrer that will be passed to the new window. May or may not result in the
+			 * `Referer` header being sent, depending on the referrer policy.
+			 */
+			referrer: Referrer) => void): this;
 		once(event: 'new-window', listener: (event: Event,
 			url: string,
 			frameName: string,
@@ -5188,7 +5494,12 @@
 			 * The non-standard features (features not handled by Chromium or Electron) given
 			 * to `window.open()`.
 			 */
-			additionalFeatures: string[]) => void): this;
+			additionalFeatures: string[],
+			/**
+			 * The referrer that will be passed to the new window. May or may not result in the
+			 * `Referer` header being sent, depending on the referrer policy.
+			 */
+			referrer: Referrer) => void): this;
 		addListener(event: 'new-window', listener: (event: Event,
 			url: string,
 			frameName: string,
@@ -5205,7 +5516,12 @@
 			 * The non-standard features (features not handled by Chromium or Electron) given
 			 * to `window.open()`.
 			 */
-			additionalFeatures: string[]) => void): this;
+			additionalFeatures: string[],
+			/**
+			 * The referrer that will be passed to the new window. May or may not result in the
+			 * `Referer` header being sent, depending on the referrer policy.
+			 */
+			referrer: Referrer) => void): this;
 		removeListener(event: 'new-window', listener: (event: Event,
 			url: string,
 			frameName: string,
@@ -5222,7 +5538,12 @@
 			 * The non-standard features (features not handled by Chromium or Electron) given
 			 * to `window.open()`.
 			 */
-			additionalFeatures: string[]) => void): this;
+			additionalFeatures: string[],
+			/**
+			 * The referrer that will be passed to the new window. May or may not result in the
+			 * `Referer` header being sent, depending on the referrer policy.
+			 */
+			referrer: Referrer) => void): this;
 		/**
 		 * Emitted when page receives favicon urls.
 		 */
@@ -5290,6 +5611,13 @@
 			name: string,
 			version: string) => void): this;
 		/**
+		 * Emitted when the unresponsive web page becomes responsive again.
+		 */
+		on(event: 'responsive', listener: Function): this;
+		once(event: 'responsive', listener: Function): this;
+		addListener(event: 'responsive', listener: Function): this;
+		removeListener(event: 'responsive', listener: Function): this;
+		/**
 		 * Emitted when bluetooth device needs to be selected on call to
 		 * navigator.bluetooth.requestDevice. To use navigator.bluetooth api webBluetooth
 		 * should be enabled. If event.preventDefault is not called, first available device
@@ -5329,6 +5657,13 @@
 			certificateList: Certificate[],
 			callback: (certificate: Certificate) => void) => void): this;
 		/**
+		 * Emitted when the web page becomes unresponsive.
+		 */
+		on(event: 'unresponsive', listener: Function): this;
+		once(event: 'unresponsive', listener: Function): this;
+		addListener(event: 'unresponsive', listener: Function): this;
+		removeListener(event: 'unresponsive', listener: Function): this;
+		/**
 		 * Emitted when mouse moves over a link or the keyboard moves the focus to a link.
 		 */
 		on(event: 'update-target-url', listener: (event: Event,
@@ -5424,30 +5759,22 @@
 		addWorkSpace(path: string): void;
 		/**
 		 * Begin subscribing for presentation events and captured frames, the callback will
-		 * be called with callback(frameBuffer, dirtyRect) when there is a presentation
-		 * event. The frameBuffer is a Buffer that contains raw pixel data. On most
-		 * machines, the pixel data is effectively stored in 32bit BGRA format, but the
-		 * actual representation depends on the endianness of the processor (most modern
-		 * processors are little-endian, on machines with big-endian processors the data is
-		 * in 32bit ARGB format). The dirtyRect is an object with x, y, width, height
-		 * properties that describes which part of the page was repainted. If onlyDirty is
-		 * set to true, frameBuffer will only contain the repainted area. onlyDirty
-		 * defaults to false.
-		 */
-		beginFrameSubscription(callback: (frameBuffer: Buffer, dirtyRect: Rectangle) => void): void;
+		 * be called with callback(image, dirtyRect) when there is a presentation event.
+		 * The image is an instance of NativeImage that stores the captured frame. The
+		 * dirtyRect is an object with x, y, width, height properties that describes which
+		 * part of the page was repainted. If onlyDirty is set to true, image will only
+		 * contain the repainted area. onlyDirty defaults to false.
+		 */
+		beginFrameSubscription(callback: (image: NativeImage, dirtyRect: Rectangle) => void): void;
 		/**
 		 * Begin subscribing for presentation events and captured frames, the callback will
-		 * be called with callback(frameBuffer, dirtyRect) when there is a presentation
-		 * event. The frameBuffer is a Buffer that contains raw pixel data. On most
-		 * machines, the pixel data is effectively stored in 32bit BGRA format, but the
-		 * actual representation depends on the endianness of the processor (most modern
-		 * processors are little-endian, on machines with big-endian processors the data is
-		 * in 32bit ARGB format). The dirtyRect is an object with x, y, width, height
-		 * properties that describes which part of the page was repainted. If onlyDirty is
-		 * set to true, frameBuffer will only contain the repainted area. onlyDirty
-		 * defaults to false.
-		 */
-		beginFrameSubscription(onlyDirty: boolean, callback: (frameBuffer: Buffer, dirtyRect: Rectangle) => void): void;
+		 * be called with callback(image, dirtyRect) when there is a presentation event.
+		 * The image is an instance of NativeImage that stores the captured frame. The
+		 * dirtyRect is an object with x, y, width, height properties that describes which
+		 * part of the page was repainted. If onlyDirty is set to true, image will only
+		 * contain the repainted area. onlyDirty defaults to false.
+		 */
+		beginFrameSubscription(onlyDirty: boolean, callback: (image: NativeImage, dirtyRect: Rectangle) => void): void;
 		canGoBack(): boolean;
 		canGoForward(): boolean;
 		canGoToOffset(offset: number): boolean;
@@ -5456,13 +5783,13 @@
 		 * called with callback(image). The image is an instance of NativeImage that stores
 		 * data of the snapshot. Omitting rect will capture the whole visible page.
 		 */
-		capturePage(callback: (image: NativeImage) => void): void;
+		capturePage(rect: Rectangle, callback: (image: NativeImage) => void): void;
 		/**
 		 * Captures a snapshot of the page within rect. Upon completion callback will be
 		 * called with callback(image). The image is an instance of NativeImage that stores
 		 * data of the snapshot. Omitting rect will capture the whole visible page.
 		 */
-		capturePage(rect: Rectangle, callback: (image: NativeImage) => void): void;
+		capturePage(callback: (image: NativeImage) => void): void;
 		/**
 		 * Clears the navigation history.
 		 */
@@ -5528,6 +5855,7 @@
 		 * Get the system printer list.
 		 */
 		getPrinters(): PrinterInfo[];
+		getProcessId(): number;
 		getTitle(): string;
 		getURL(): string;
 		getUserAgent(): string;
@@ -5817,6 +6145,9 @@
 		 * Work like executeJavaScript but evaluates scripts in isolated context.
 		 */
 		executeJavaScriptInIsolatedWorld(worldId: number, scripts: WebSource[], userGesture?: boolean, callback?: (result: any) => void): void;
+		findFrameByName(name: string): WebFrame;
+		findFrameByRoutingId(routingId: number): WebFrame;
+		getFrameForSelector(selector: string): WebFrame;
 		/**
 		 * Returns an object describing usage information of Blink's internal memory
 		 * caches. This will generate:
@@ -5841,12 +6172,6 @@
 		 */
 		registerURLSchemeAsPrivileged(scheme: string, options?: RegisterURLSchemeAsPrivilegedOptions): void;
 		/**
-		 * Registers the scheme as secure scheme. Secure schemes do not trigger mixed
-		 * content warnings. For example, https and data are secure schemes because they
-		 * cannot be corrupted by active network attackers.
-		 */
-		registerURLSchemeAsSecure(scheme: string): void;
-		/**
 		 * Set the content security policy of the isolated world.
 		 */
 		setIsolatedWorldContentSecurityPolicy(worldId: number, csp: string): void;
@@ -5883,6 +6208,39 @@
 		 * limits of 300% and 50% of original size, respectively.
 		 */
 		setZoomLevel(level: number): void;
+		/**
+		 * A WebFrame representing the first child frame of webFrame, the property would be
+		 * null if webFrame has no children or if first child is not in the current
+		 * renderer process.
+		 */
+		firstChild?: WebFrame;
+		/**
+		 * A WebFrame representing next sibling frame, the property would be null if
+		 * webFrame is the last frame in its parent or if the next sibling is not in the
+		 * current renderer process.
+		 */
+		nextSibling?: WebFrame;
+		/**
+		 * A WebFrame representing the frame which opened webFrame, the property would be
+		 * null if there's no opener or opener is not in the current renderer process.
+		 */
+		opener?: WebFrame;
+		/**
+		 * A WebFrame representing parent frame of webFrame, the property would be null if
+		 * webFrame is top or parent is not in the current renderer process.
+		 */
+		parent?: WebFrame;
+		/**
+		 * An Integer representing the unique frame id in the current renderer process.
+		 * Distinct WebFrame instances that refer to the same underlying frame will have
+		 * the same routingId.
+		 */
+		routingId?: number;
+		/**
+		 * A WebFrame representing top frame in frame hierarchy to which webFrame belongs,
+		 * the property would be null if top frame is not in the current renderer process.
+		 */
+		top?: WebFrame;
 	}
 
 	class WebRequest extends EventEmitter {
@@ -6030,17 +6388,6 @@
 		addEventListener(event: 'did-stop-loading', listener: (event: Event) => void, useCapture?: boolean): this;
 		removeEventListener(event: 'did-stop-loading', listener: (event: Event) => void): this;
 		/**
-		 * Fired when details regarding a requested resource is available. status indicates
-		 * socket connection to download the resource.
-		 */
-		addEventListener(event: 'did-get-response-details', listener: (event: DidGetResponseDetailsEvent) => void, useCapture?: boolean): this;
-		removeEventListener(event: 'did-get-response-details', listener: (event: DidGetResponseDetailsEvent) => void): this;
-		/**
-		 * Fired when a redirect was received while requesting a resource.
-		 */
-		addEventListener(event: 'did-get-redirect-request', listener: (event: DidGetRedirectRequestEvent) => void, useCapture?: boolean): this;
-		removeEventListener(event: 'did-get-redirect-request', listener: (event: DidGetRedirectRequestEvent) => void): this;
-		/**
 		 * Fired when document in the given frame is loaded.
 		 */
 		addEventListener(event: 'dom-ready', listener: (event: Event) => void, useCapture?: boolean): this;
@@ -6118,8 +6465,8 @@
 		removeEventListener(event: 'close', listener: (event: Event) => void): this;
 		/**
 		 * Fired when the guest page has sent an asynchronous message to embedder page.
-		 * With sendToHost method and ipc-message event you can easily communicate between
-		 * guest page and embedder page:
+		 * With sendToHost method and ipc-message event you can communicate between guest
+		 * page and embedder page:
 		 */
 		addEventListener(event: 'ipc-message', listener: (event: IpcMessageEvent) => void, useCapture?: boolean): this;
 		removeEventListener(event: 'ipc-message', listener: (event: IpcMessageEvent) => void): this;
@@ -6384,12 +6731,6 @@
 		 */
 		autosize?: string;
 		/**
-		 * A list of strings which specifies the blink features to be enabled separated by
-		 * ,. The full list of supported feature strings can be found in the
-		 * RuntimeEnabledFeatures.json5 file.
-		 */
-		blinkfeatures?: string;
-		/**
 		 * A list of strings which specifies the blink features to be disabled separated by
 		 * ,. The full list of supported feature strings can be found in the
 		 * RuntimeEnabledFeatures.json5 file.
@@ -6409,6 +6750,12 @@
 		 */
 		disablewebsecurity?: string;
 		/**
+		 * A list of strings which specifies the blink features to be enabled separated by
+		 * ,. The full list of supported feature strings can be found in the
+		 * RuntimeEnabledFeatures.json5 file.
+		 */
+		enableblinkfeatures?: string;
+		/**
 		 * A value that links the webview to a specific webContents. When a webview first
 		 * loads a new webContents is created and this attribute is set to its instance
 		 * identifier. Setting this attribute on a new or existing webview connects it to
@@ -6827,7 +7174,7 @@
 		origin?: string;
 		/**
 		 * The types of storages to clear, can contain: appcache, cookies, filesystem,
-		 * indexdb, localstorage, shadercache, websql, serviceworkers.
+		 * indexdb, localstorage, shadercache, websql, serviceworkers, cachestorage.
 		 */
 		storages?: string[];
 		/**
@@ -7097,23 +7444,6 @@
 		isMainFrame: boolean;
 	}
 
-	interface DidGetRedirectRequestEvent extends Event {
-		oldURL: string;
-		newURL: string;
-		isMainFrame: boolean;
-	}
-
-	interface DidGetResponseDetailsEvent extends Event {
-		status: boolean;
-		newURL: string;
-		originalURL: string;
-		httpResponseCode: number;
-		requestMethod: string;
-		referrer: string;
-		headers: Headers;
-		resourceType: string;
-	}
-
 	interface DidNavigateEvent extends Event {
 		url: string;
 	}
@@ -7284,6 +7614,18 @@
 	interface Headers {
 	}
 
+	interface HeapStatistics {
+		totalHeapSize: number;
+		totalHeapSizeExecutable: number;
+		totalPhysicalSize: number;
+		totalAvailableSize: number;
+		usedHeapSize: number;
+		heapSizeLimit: number;
+		mallocedMemory: number;
+		peakMallocedMemory: number;
+		doesZapGarbage: boolean;
+	}
+
 	interface IgnoreMouseEventsOptions {
 		/**
 		 * If true, forwards mouse move messages to Chromium, enabling mouse related events
@@ -7413,9 +7755,9 @@
 
 	interface LoadURLOptions {
 		/**
-		 * A HTTP Referrer url.
+		 * An HTTP Referrer url.
 		 */
-		httpReferrer?: string;
+		httpReferrer?: string | Referrer;
 		/**
 		 * A user agent originating the request.
 		 */
@@ -7424,10 +7766,7 @@
 		 * Extra headers separated by "\n"
 		 */
 		extraHeaders?: string;
-		/**
-		 * -
-		 */
-		postData?: UploadRawData[] | UploadFile[] | UploadFileSystem[] | UploadBlob[];
+		postData?: UploadRawData[] | UploadFile[] | UploadBlob[];
 		/**
 		 * Base url (with trailing path separator) for files to be loaded by the data url.
 		 * This is needed only if the specified url is a data url and needs to load other
@@ -7879,7 +8218,13 @@
 	}
 
 	interface Payment {
+		/**
+		 * The identifier of the purchased product.
+		 */
 		productIdentifier: string;
+		/**
+		 * The quantity purchased.
+		 */
 		quantity: number;
 	}
 
@@ -8675,7 +9020,7 @@
 		 * A list of feature strings separated by ,, like CSSVariables,KeyboardEventKey to
 		 * enable. The full list of supported feature strings can be found in the file.
 		 */
-		blinkFeatures?: string;
+		enableBlinkFeatures?: string;
 		/**
 		 * A list of feature strings separated by ,, like CSSVariables,KeyboardEventKey to
 		 * disable. The full list of supported feature strings can be found in the file.
@@ -8745,7 +9090,22 @@
 		 * of this app. Useful for passing small bits of data down to renderer process
 		 * preload scripts.
 		 */
-		additionArguments?: string[];
+		additionalArguments?: string[];
+		/**
+		 * Whether to enable browser style consecutive dialog protection. Default is false.
+		 */
+		safeDialogs?: boolean;
+		/**
+		 * The message to display when consecutive dialog protection is triggered. If not
+		 * defined the default message would be used, note that currently the default
+		 * message is in English and not localized.
+		 */
+		safeDialogsMessage?: string;
+		/**
+		 * Whether dragging and dropping a file or link onto the page causes a navigation.
+		 * Default is false.
+		 */
+		navigateOnDragDrop?: boolean;
 	}
 
 	interface DefaultFontFamily {
@@ -8841,6 +9201,11 @@
 		 */
 		crash(): void;
 		getCPUUsage(): Electron.CPUUsage;
+		/**
+		 * Returns an object with V8 heap statistics. Note that all statistics are reported
+		 * in Kilobytes.
+		 */
+		getHeapStatistics(): Electron.HeapStatistics;
 		getIOCounters(): Electron.IOCounters;
 		/**
 		 * Returns an object giving memory usage statistics about the current process. Note
@@ -8921,4 +9286,4 @@
 		electron: string;
 		chrome: string;
 	}
-}
\ No newline at end of file
+}
merged
  result 100644 1f18683bcdddf2a268fcebbd75901d8104afaf8f src/typings/node.d.ts
  our    100644 b8e246d1ecfcd73b526ff08cc271d3ac734512f4 src/typings/node.d.ts
@@ -1,4 +1,4 @@
-// Type definitions for Node.js 8.9.x
+// Type definitions for Node.js 10.5.x
 // Project: http://nodejs.org/
 // Definitions by: Microsoft TypeScript <http://typescriptlang.org>
 //                 DefinitelyTyped <https://github.com/DefinitelyTyped/DefinitelyTyped>
@@ -16,14 +16,17 @@
 //                 Sebastian Silbermann <https://github.com/eps1lon>
 //                 Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>
 //                 Alberto Schiabel <https://github.com/jkomyno>
+//                 Klaus Meinhardt <https://github.com/ajafff>
 //                 Huw <https://github.com/hoo29>
 //                 Nicolas Even <https://github.com/n-e>
 //                 Bruno Scheufler <https://github.com/brunoscheufler>
+//                 Mohsen Azimi <https://github.com/mohsen1>
 //                 Hoàng Văn Khải <https://github.com/KSXGitHub>
+//                 Alexander T. <https://github.com/a-tarasyuk>
 //                 Lishude <https://github.com/islishude>
 //                 Andrew Makarov <https://github.com/r3nya>
+//                 Zane Hannan AU <https://github.com/ZaneHannanAU>
 // Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
-// TypeScript Version: 2.1
 
 // ### BEGIN VSCODE MODIFICATION ###
 // /** inspector module types */
@@ -33,16 +36,101 @@
 // This needs to be global to avoid TS2403 in case lib.dom.d.ts is present in the same build
 interface Console {
     Console: NodeJS.ConsoleConstructor;
+    /**
+     * A simple assertion test that verifies whether `value` is truthy.
+     * If it is not, an `AssertionError` is thrown.
+     * If provided, the error `message` is formatted using `util.format()` and used as the error message.
+     */
     assert(value: any, message?: string, ...optionalParams: any[]): void;
-    dir(obj: any, options?: NodeJS.InspectOptions): void;
+    /**
+     * When `stdout` is a TTY, calling `console.clear()` will attempt to clear the TTY.
+     * When `stdout` is not a TTY, this method does nothing.
+     */
+    clear(): void;
+    /**
+     * Maintains an internal counter specific to `label` and outputs to `stdout` the number of times `console.count()` has been called with the given `label`.
+     */
+    count(label?: string): void;
+    /**
+     * Resets the internal counter specific to `label`.
+     */
+    countReset(label?: string): void;
+    /**
+     * The `console.debug()` function is an alias for {@link console.log()}.
+     */
     debug(message?: any, ...optionalParams: any[]): void;
+    /**
+     * Uses {@link util.inspect()} on `obj` and prints the resulting string to `stdout`.
+     * This function bypasses any custom `inspect()` function defined on `obj`.
+     */
+    dir(obj: any, options?: NodeJS.InspectOptions): void;
+    /**
+     * This method calls {@link console.log()} passing it the arguments received. Please note that this method does not produce any XML formatting
+     */
+    dirxml(...data: any[]): void;
+    /**
+     * Prints to `stderr` with newline.
+     */
     error(message?: any, ...optionalParams: any[]): void;
+    /**
+     * Increases indentation of subsequent lines by two spaces.
+     * If one or more `label`s are provided, those are printed first without the additional indentation.
+     */
+    group(...label: any[]): void;
+    /**
+     * The `console.groupCollapsed()` function is an alias for {@link console.group()}.
+     */
+    groupCollapsed(): void;
+    /**
+     * Decreases indentation of subsequent lines by two spaces.
+     */
+    groupEnd(): void;
+    /**
+     * The {@link console.info()} function is an alias for {@link console.log()}.
+     */
     info(message?: any, ...optionalParams: any[]): void;
+    /**
+     * Prints to `stdout` with newline.
+     */
     log(message?: any, ...optionalParams: any[]): void;
-    time(label: string): void;
-    timeEnd(label: string): void;
+    /**
+     * This method does not display anything unless used in the inspector.
+     *  Prints to `stdout` the array `array` formatted as a table.
+     */
+    table(tabularData: any, properties?: string[]): void;
+    /**
+     * Starts a timer that can be used to compute the duration of an operation. Timers are identified by a unique `label`.
+     */
+    time(label?: string): void;
+    /**
+     * Stops a timer that was previously started by calling {@link console.time()} and prints the result to `stdout`.
+     */
+    timeEnd(label?: string): void;
+    /**
+     * Prints to `stderr` the string 'Trace :', followed by the {@link util.format()} formatted message and stack trace to the current position in the code.
+     */
     trace(message?: any, ...optionalParams: any[]): void;
+    /**
+     * The {@link console.warn()} function is an alias for {@link console.error()}.
+     */
     warn(message?: any, ...optionalParams: any[]): void;
+
+    // --- Inspector mode only ---
+    /**
+     * This method does not display anything unless used in the inspector.
+     *  Starts a JavaScript CPU profile with an optional label.
+     */
+    profile(label?: string): void;
+    /**
+     * This method does not display anything unless used in the inspector.
+     *  Stops the current JavaScript CPU profiling session if one has been started and prints the report to the Profiles panel of the inspector.
+     */
+    profileEnd(): void;
+    /**
+     * This method does not display anything unless used in the inspector.
+     *  Adds an event with the label `label` to the Timeline panel of the inspector.
+     */
+    timeStamp(label?: string): void;
 }
 
 interface Error {
@@ -78,8 +166,11 @@
     next(value?: any): IteratorResult<T>;
 }
 interface IteratorResult<T> { }
+interface AsyncIterableIterator<T> { }
 interface SymbolConstructor {
+    readonly observable: symbol;
     readonly iterator: symbol;
+    readonly asyncIterator: symbol;
 }
 declare var Symbol: SymbolConstructor;
 
@@ -178,7 +269,61 @@
 
 // Buffer class
 type BufferEncoding = "ascii" | "utf8" | "utf16le" | "ucs2" | "base64" | "latin1" | "binary" | "hex";
-interface Buffer extends NodeBuffer { }
+interface Buffer extends Uint8Array {
+    write(string: string, offset?: number, length?: number, encoding?: string): number;
+    toString(encoding?: string, start?: number, end?: number): string;
+    toJSON(): { type: 'Buffer', data: any[] };
+    equals(otherBuffer: Uint8Array): boolean;
+    compare(otherBuffer: Uint8Array, targetStart?: number, targetEnd?: number, sourceStart?: number, sourceEnd?: number): number;
+    copy(targetBuffer: Uint8Array, targetStart?: number, sourceStart?: number, sourceEnd?: number): number;
+    slice(start?: number, end?: number): Buffer;
+    writeUIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    writeUIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    writeIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    writeIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
+    readUIntLE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readUIntBE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readIntLE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readIntBE(offset: number, byteLength: number, noAssert?: boolean): number;
+    readUInt8(offset: number, noAssert?: boolean): number;
+    readUInt16LE(offset: number, noAssert?: boolean): number;
+    readUInt16BE(offset: number, noAssert?: boolean): number;
+    readUInt32LE(offset: number, noAssert?: boolean): number;
+    readUInt32BE(offset: number, noAssert?: boolean): number;
+    readInt8(offset: number, noAssert?: boolean): number;
+    readInt16LE(offset: number, noAssert?: boolean): number;
+    readInt16BE(offset: number, noAssert?: boolean): number;
+    readInt32LE(offset: number, noAssert?: boolean): number;
+    readInt32BE(offset: number, noAssert?: boolean): number;
+    readFloatLE(offset: number, noAssert?: boolean): number;
+    readFloatBE(offset: number, noAssert?: boolean): number;
+    readDoubleLE(offset: number, noAssert?: boolean): number;
+    readDoubleBE(offset: number, noAssert?: boolean): number;
+    swap16(): Buffer;
+    swap32(): Buffer;
+    swap64(): Buffer;
+    writeUInt8(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt16LE(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt16BE(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt32LE(value: number, offset: number, noAssert?: boolean): number;
+    writeUInt32BE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt8(value: number, offset: number, noAssert?: boolean): number;
+    writeInt16LE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt16BE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt32LE(value: number, offset: number, noAssert?: boolean): number;
+    writeInt32BE(value: number, offset: number, noAssert?: boolean): number;
+    writeFloatLE(value: number, offset: number, noAssert?: boolean): number;
+    writeFloatBE(value: number, offset: number, noAssert?: boolean): number;
+    writeDoubleLE(value: number, offset: number, noAssert?: boolean): number;
+    writeDoubleBE(value: number, offset: number, noAssert?: boolean): number;
+    fill(value: any, offset?: number, end?: number): this;
+    indexOf(value: string | number | Uint8Array, byteOffset?: number, encoding?: string): number;
+    lastIndexOf(value: string | number | Uint8Array, byteOffset?: number, encoding?: string): number;
+    entries(): IterableIterator<[number, number]>;
+    includes(value: string | number | Buffer, byteOffset?: number, encoding?: string): boolean;
+    keys(): IterableIterator<number>;
+    values(): IterableIterator<number>;
+}
 
 /**
  * Raw data is stored in instances of the Buffer class.
@@ -191,18 +336,21 @@
      *
      * @param str String to store in buffer.
      * @param encoding encoding to use, optional.  Default is 'utf8'
+     * @deprecated since v10.0.0 - Use `Buffer.from(string[, encoding])` instead.
      */
     new(str: string, encoding?: string): Buffer;
     /**
      * Allocates a new buffer of {size} octets.
      *
      * @param size count of octets to allocate.
+     * @deprecated since v10.0.0 - Use `Buffer.alloc()` instead (also see `Buffer.allocUnsafe()`).
      */
     new(size: number): Buffer;
     /**
      * Allocates a new buffer containing the given {array} of octets.
      *
      * @param array The octets to store.
+     * @deprecated since v10.0.0 - Use `Buffer.from(array)` instead.
      */
     new(array: Uint8Array): Buffer;
     /**
@@ -211,18 +359,21 @@
      *
      *
      * @param arrayBuffer The ArrayBuffer with which to share memory.
+     * @deprecated since v10.0.0 - Use `Buffer.from(arrayBuffer[, byteOffset[, length]])` instead.
      */
     new(arrayBuffer: ArrayBuffer): Buffer;
     /**
      * Allocates a new buffer containing the given {array} of octets.
      *
      * @param array The octets to store.
+     * @deprecated since v10.0.0 - Use `Buffer.from(array)` instead.
      */
     new(array: any[]): Buffer;
     /**
      * Copies the passed {buffer} data onto a new {Buffer} instance.
      *
      * @param buffer The buffer to copy.
+     * @deprecated since v10.0.0 - Use `Buffer.from(buffer)` instead.
      */
     new(buffer: Buffer): Buffer;
     prototype: Buffer;
@@ -232,14 +383,16 @@
      * The optional {byteOffset} and {length} arguments specify a memory range
      * within the {arrayBuffer} that will be shared by the Buffer.
      *
-     * @param arrayBuffer The .buffer property of a TypedArray or a new ArrayBuffer()
+     * @param arrayBuffer The .buffer property of any TypedArray or a new ArrayBuffer()
      */
     from(arrayBuffer: ArrayBuffer, byteOffset?: number, length?: number): Buffer;
+    // from(arrayBuffer: SharedArrayBuffer, byteOffset?: number, length?: number): Buffer;
     /**
      * Creates a new Buffer using the passed {data}
      * @param data data to create a new Buffer
      */
-    from(data: any[] | string | Buffer | ArrayBuffer /*| TypedArray*/): Buffer;
+    from(data: any[]): Buffer;
+    from(data: Uint8Array): Buffer;
     /**
      * Creates a new Buffer containing the given JavaScript string {str}.
      * If provided, the {encoding} parameter identifies the character encoding.
@@ -247,6 +400,11 @@
      */
     from(str: string, encoding?: string): Buffer;
     /**
+     * Creates a new Buffer using the passed {data}
+     * @param values to create a new Buffer
+     */
+    of(...items: number[]): Buffer;
+    /**
      * Returns true if {obj} is a Buffer
      *
      * @param obj object to test.
@@ -258,7 +416,7 @@
      *
      * @param encoding string to test.
      */
-    isEncoding(encoding: string): boolean;
+    isEncoding(encoding: string): boolean | undefined;
     /**
      * Gives the actual byte length of a string. encoding defaults to 'utf8'.
      * This is not the same as String.prototype.length since that returns the number of characters in a string.
@@ -266,7 +424,7 @@
      * @param string string to test. (TypedArray is also allowed, but it is only available starting ES2017)
      * @param encoding encoding used to evaluate (defaults to 'utf8')
      */
-    byteLength(string: string | Buffer | DataView | ArrayBuffer, encoding?: string): number;
+    byteLength(string: string | ArrayBuffer | ArrayBufferView, encoding?: string): number;
     /**
      * Returns a buffer which is the result of concatenating all the buffers in the list together.
      *
@@ -278,11 +436,11 @@
      * @param totalLength Total length of the buffers when concatenated.
      *   If totalLength is not provided, it is read from the buffers in the list. However, this adds an additional loop to the function, so it is faster to provide the length explicitly.
      */
-    concat(list: Buffer[], totalLength?: number): Buffer;
+    concat(list: Uint8Array[], totalLength?: number): Buffer;
     /**
      * The same as buf1.compare(buf2).
      */
-    compare(buf1: Buffer, buf2: Buffer): number;
+    compare(buf1: Uint8Array, buf2: Uint8Array): number;
     /**
      * Allocates a new buffer of {size} octets.
      *
@@ -326,6 +484,7 @@
         showProxy?: boolean;
         maxArrayLength?: number | null;
         breakLength?: number;
+        compact?: boolean;
     }
 
     export interface ConsoleConstructor {
@@ -420,10 +579,12 @@
         on(event: string | symbol, listener: (...args: any[]) => void): this;
         once(event: string | symbol, listener: (...args: any[]) => void): this;
         removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
+        off(event: string | symbol, listener: (...args: any[]) => void): this;
         removeAllListeners(event?: string | symbol): this;
         setMaxListeners(n: number): this;
         getMaxListeners(): number;
         listeners(event: string | symbol): Function[];
+        rawListeners(event: string | symbol): Function[];
         emit(event: string | symbol, ...args: any[]): boolean;
         listenerCount(type: string | symbol): number;
         // Added in Node 6...
@@ -444,6 +605,7 @@
         unshift(chunk: string): void;
         unshift(chunk: Buffer): void;
         wrap(oldStream: ReadableStream): this;
+        [Symbol.asyncIterator](): AsyncIterableIterator<string | Buffer>;
     }
 
     export interface WritableStream extends EventEmitter {
@@ -466,7 +628,6 @@
         remove(emitter: Events): void;
         bind(cb: (err: Error, data: any) => any): any;
         intercept(cb: (data: any) => any): any;
-        dispose(): void;
 
         addListener(event: string, listener: (...args: any[]) => void): this;
         on(event: string, listener: (...args: any[]) => void): this;
@@ -522,7 +683,7 @@
     type UnhandledRejectionListener = (reason: any, promise: Promise<any>) => void;
     type WarningListener = (warning: Error) => void;
     type MessageListener = (message: any, sendHandle: any) => void;
-    type SignalsListener = () => void;
+    type SignalsListener = (signal: Signals) => void;
     type NewListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
     type RemoveListenerListener = (type: string | symbol, listener: (...args: any[]) => void) => void;
 
@@ -536,6 +697,7 @@
 
     export interface WriteStream extends Socket {
         readonly writableHighWaterMark: number;
+        readonly writableLength: number;
         columns?: number;
         rows?: number;
         _write(chunk: any, encoding: string, callback: Function): void;
@@ -548,6 +710,7 @@
     }
     export interface ReadStream extends Socket {
         readonly readableHighWaterMark: number;
+        readonly readableLength: number;
         isRaw?: boolean;
         setRawMode?(mode: boolean): void;
         _read(size: number): void;
@@ -583,6 +746,8 @@
         setegid(id: number | string): void;
         getgroups(): number[];
         setgroups(groups: Array<string | number>): void;
+        setUncaughtExceptionCaptureCallback(cb: ((err: Error) => void) | null): void;
+        hasUncaughtExceptionCaptureCallback(): boolean;
         version: string;
         versions: ProcessVersions;
         config: {
@@ -613,6 +778,7 @@
         };
         kill(pid: number, signal?: string | number): void;
         pid: number;
+        ppid: number;
         title: string;
         arch: string;
         platform: Platform;
@@ -822,65 +988,6 @@
 
 interface IterableIterator<T> { }
 
-/**
- * @deprecated
- */
-interface NodeBuffer extends Uint8Array {
-    write(string: string, offset?: number, length?: number, encoding?: string): number;
-    toString(encoding?: string, start?: number, end?: number): string;
-    toJSON(): { type: 'Buffer', data: any[] };
-    equals(otherBuffer: Buffer): boolean;
-    compare(otherBuffer: Buffer, targetStart?: number, targetEnd?: number, sourceStart?: number, sourceEnd?: number): number;
-    copy(targetBuffer: Buffer, targetStart?: number, sourceStart?: number, sourceEnd?: number): number;
-    slice(start?: number, end?: number): Buffer;
-    writeUIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
-    writeUIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
-    writeIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
-    writeIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;
-    readUIntLE(offset: number, byteLength: number, noAssert?: boolean): number;
-    readUIntBE(offset: number, byteLength: number, noAssert?: boolean): number;
-    readIntLE(offset: number, byteLength: number, noAssert?: boolean): number;
-    readIntBE(offset: number, byteLength: number, noAssert?: boolean): number;
-    readUInt8(offset: number, noAssert?: boolean): number;
-    readUInt16LE(offset: number, noAssert?: boolean): number;
-    readUInt16BE(offset: number, noAssert?: boolean): number;
-    readUInt32LE(offset: number, noAssert?: boolean): number;
-    readUInt32BE(offset: number, noAssert?: boolean): number;
-    readInt8(offset: number, noAssert?: boolean): number;
-    readInt16LE(offset: number, noAssert?: boolean): number;
-    readInt16BE(offset: number, noAssert?: boolean): number;
-    readInt32LE(offset: number, noAssert?: boolean): number;
-    readInt32BE(offset: number, noAssert?: boolean): number;
-    readFloatLE(offset: number, noAssert?: boolean): number;
-    readFloatBE(offset: number, noAssert?: boolean): number;
-    readDoubleLE(offset: number, noAssert?: boolean): number;
-    readDoubleBE(offset: number, noAssert?: boolean): number;
-    swap16(): Buffer;
-    swap32(): Buffer;
-    swap64(): Buffer;
-    writeUInt8(value: number, offset: number, noAssert?: boolean): number;
-    writeUInt16LE(value: number, offset: number, noAssert?: boolean): number;
-    writeUInt16BE(value: number, offset: number, noAssert?: boolean): number;
-    writeUInt32LE(value: number, offset: number, noAssert?: boolean): number;
-    writeUInt32BE(value: number, offset: number, noAssert?: boolean): number;
-    writeInt8(value: number, offset: number, noAssert?: boolean): number;
-    writeInt16LE(value: number, offset: number, noAssert?: boolean): number;
-    writeInt16BE(value: number, offset: number, noAssert?: boolean): number;
-    writeInt32LE(value: number, offset: number, noAssert?: boolean): number;
-    writeInt32BE(value: number, offset: number, noAssert?: boolean): number;
-    writeFloatLE(value: number, offset: number, noAssert?: boolean): number;
-    writeFloatBE(value: number, offset: number, noAssert?: boolean): number;
-    writeDoubleLE(value: number, offset: number, noAssert?: boolean): number;
-    writeDoubleBE(value: number, offset: number, noAssert?: boolean): number;
-    fill(value: any, offset?: number, end?: number): this;
-    indexOf(value: string | number | Buffer, byteOffset?: number, encoding?: string): number;
-    lastIndexOf(value: string | number | Buffer, byteOffset?: number, encoding?: string): number;
-    entries(): IterableIterator<[number, number]>;
-    includes(value: string | number | Buffer, byteOffset?: number, encoding?: string): boolean;
-    keys(): IterableIterator<number>;
-    values(): IterableIterator<number>;
-}
-
 /************************************************
 *                                               *
 *                   MODULES                     *
@@ -917,7 +1024,8 @@
 
     namespace internal {
         export class EventEmitter extends internal {
-            static listenerCount(emitter: EventEmitter, event: string | symbol): number; // deprecated
+            /** @deprecated since v4.0.0 */
+            static listenerCount(emitter: EventEmitter, event: string | symbol): number;
             static defaultMaxListeners: number;
 
             addListener(event: string | symbol, listener: (...args: any[]) => void): this;
@@ -926,10 +1034,12 @@
             prependListener(event: string | symbol, listener: (...args: any[]) => void): this;
             prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;
             removeListener(event: string | symbol, listener: (...args: any[]) => void): this;
+            off(event: string | symbol, listener: (...args: any[]) => void): this;
             removeAllListeners(event?: string | symbol): this;
             setMaxListeners(n: number): this;
             getMaxListeners(): number;
             listeners(event: string | symbol): Function[];
+            rawListeners(event: string | symbol): Function[];
             emit(event: string | symbol, ...args: any[]): boolean;
             eventNames(): Array<string | symbol>;
             listenerCount(type: string | symbol): number;
@@ -1482,7 +1592,7 @@
     export function createInflateRaw(options?: ZlibOptions): InflateRaw;
     export function createUnzip(options?: ZlibOptions): Unzip;
 
-    type InputType = string | Buffer | DataView /* | TypedArray */;
+    type InputType = string | Buffer | DataView | ArrayBuffer /* | TypedArray */;
     export function deflate(buf: InputType, callback: (error: Error | null, result: Buffer) => void): void;
     export function deflate(buf: InputType, options: ZlibOptions, callback: (error: Error | null, result: Buffer) => void): void;
     export function deflateSync(buf: InputType, options?: ZlibOptions): Buffer;
@@ -1754,18 +1864,10 @@
 
     export type ServerOptions = tls.SecureContextOptions & tls.TlsOptions;
 
-    // see https://nodejs.org/docs/latest-v8.x/api/https.html#https_https_request_options_callback
-    type extendedRequestKeys = "pfx" |
-        "key" |
-        "passphrase" |
-        "cert" |
-        "ca" |
-        "ciphers" |
-        "rejectUnauthorized" |
-        "secureProtocol" |
-        "servername";
-
-    export type RequestOptions = http.RequestOptions & Pick<tls.ConnectionOptions, extendedRequestKeys>;
+    export type RequestOptions = http.RequestOptions & tls.SecureContextOptions & {
+        rejectUnauthorized?: boolean; // Defaults to true
+        servername?: string; // SNI TLS Extension
+    };
 
     export interface AgentOptions extends http.AgentOptions, tls.ConnectionOptions {
         rejectUnauthorized?: boolean;
@@ -2010,6 +2112,7 @@
     export function createContext(sandbox?: Context): Context;
     export function isContext(sandbox: Context): boolean;
     export function runInContext(code: string, contextifiedSandbox: Context, options?: RunningScriptOptions | string): any;
+    /** @deprecated */
     export function runInDebugContext(code: string): any;
     export function runInNewContext(code: string, sandbox?: Context, options?: RunningScriptOptions | string): any;
     export function runInThisContext(code: string, options?: RunningScriptOptions | string): any;
@@ -2093,6 +2196,7 @@
     }
 
     export interface SpawnOptions {
+        argv0?: string;
         cwd?: string;
         env?: any;
         stdio?: any;
@@ -2177,33 +2281,33 @@
 
     export function execFile(file: string): ChildProcess;
     export function execFile(file: string, options: ({ encoding?: string | null } & ExecFileOptions) | undefined | null): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, options: ({ encoding?: string | null } & ExecFileOptions) | undefined | null): ChildProcess;
+    export function execFile(file: string, args?: ReadonlyArray<string> | null): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, options: ({ encoding?: string | null } & ExecFileOptions) | undefined | null): ChildProcess;
 
     // no `options` definitely means stdout/stderr are `string`.
     export function execFile(file: string, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
 
     // `options` with `"buffer"` or `null` for `encoding` means stdout/stderr are definitely `Buffer`.
     export function execFile(file: string, options: ExecFileOptionsWithBufferEncoding, callback: (error: Error | null, stdout: Buffer, stderr: Buffer) => void): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, options: ExecFileOptionsWithBufferEncoding, callback: (error: Error | null, stdout: Buffer, stderr: Buffer) => void): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, options: ExecFileOptionsWithBufferEncoding, callback: (error: Error | null, stdout: Buffer, stderr: Buffer) => void): ChildProcess;
 
     // `options` with well known `encoding` means stdout/stderr are definitely `string`.
     export function execFile(file: string, options: ExecFileOptionsWithStringEncoding, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, options: ExecFileOptionsWithStringEncoding, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, options: ExecFileOptionsWithStringEncoding, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
 
     // `options` with an `encoding` whose type is `string` means stdout/stderr could either be `Buffer` or `string`.
     // There is no guarantee the `encoding` is unknown as `string` is a superset of `BufferEncoding`.
     export function execFile(file: string, options: ExecFileOptionsWithOtherEncoding, callback: (error: Error | null, stdout: string | Buffer, stderr: string | Buffer) => void): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, options: ExecFileOptionsWithOtherEncoding, callback: (error: Error | null, stdout: string | Buffer, stderr: string | Buffer) => void): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, options: ExecFileOptionsWithOtherEncoding, callback: (error: Error | null, stdout: string | Buffer, stderr: string | Buffer) => void): ChildProcess;
 
     // `options` without an `encoding` means stdout/stderr are definitely `string`.
     export function execFile(file: string, options: ExecFileOptions, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, options: ExecFileOptions, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, options: ExecFileOptions, callback: (error: Error | null, stdout: string, stderr: string) => void): ChildProcess;
 
     // fallback if nothing else matches. Worst case is always `string | Buffer`.
     export function execFile(file: string, options: ({ encoding?: string | null } & ExecFileOptions) | undefined | null, callback: ((error: Error | null, stdout: string | Buffer, stderr: string | Buffer) => void) | undefined | null): ChildProcess;
-    export function execFile(file: string, args: string[] | undefined | null, options: ({ encoding?: string | null } & ExecFileOptions) | undefined | null, callback: ((error: Error | null, stdout: string | Buffer, stderr: string | Buffer) => void) | undefined | null): ChildProcess;
+    export function execFile(file: string, args: ReadonlyArray<string> | undefined | null, options: ({ encoding?: string | null } & ExecFileOptions) | undefined | null, callback: ((error: Error | null, stdout: string | Buffer, stderr: string | Buffer) => void) | undefined | null): ChildProcess;
 
     // NOTE: This namespace provides design-time support for util.promisify. Exported members do not exist at runtime.
     export namespace execFile {
@@ -2232,9 +2336,10 @@
         gid?: number;
         windowsVerbatimArguments?: boolean;
     }
-    export function fork(modulePath: string, args?: string[], options?: ForkOptions): ChildProcess;
+    export function fork(modulePath: string, args?: ReadonlyArray<string>, options?: ForkOptions): ChildProcess;
 
     export interface SpawnSyncOptions {
+        argv0?: string;
         cwd?: string;
         input?: string | Buffer;
         stdio?: any;
@@ -2268,9 +2373,9 @@
     export function spawnSync(command: string, options?: SpawnSyncOptionsWithStringEncoding): SpawnSyncReturns<string>;
     export function spawnSync(command: string, options?: SpawnSyncOptionsWithBufferEncoding): SpawnSyncReturns<Buffer>;
     export function spawnSync(command: string, options?: SpawnSyncOptions): SpawnSyncReturns<Buffer>;
-    export function spawnSync(command: string, args?: string[], options?: SpawnSyncOptionsWithStringEncoding): SpawnSyncReturns<string>;
-    export function spawnSync(command: string, args?: string[], options?: SpawnSyncOptionsWithBufferEncoding): SpawnSyncReturns<Buffer>;
-    export function spawnSync(command: string, args?: string[], options?: SpawnSyncOptions): SpawnSyncReturns<Buffer>;
+    export function spawnSync(command: string, args?: ReadonlyArray<string>, options?: SpawnSyncOptionsWithStringEncoding): SpawnSyncReturns<string>;
+    export function spawnSync(command: string, args?: ReadonlyArray<string>, options?: SpawnSyncOptionsWithBufferEncoding): SpawnSyncReturns<Buffer>;
+    export function spawnSync(command: string, args?: ReadonlyArray<string>, options?: SpawnSyncOptions): SpawnSyncReturns<Buffer>;
 
     export interface ExecSyncOptions {
         cwd?: string;
@@ -2320,9 +2425,9 @@
     export function execFileSync(command: string, options?: ExecFileSyncOptionsWithStringEncoding): string;
     export function execFileSync(command: string, options?: ExecFileSyncOptionsWithBufferEncoding): Buffer;
     export function execFileSync(command: string, options?: ExecFileSyncOptions): Buffer;
-    export function execFileSync(command: string, args?: string[], options?: ExecFileSyncOptionsWithStringEncoding): string;
-    export function execFileSync(command: string, args?: string[], options?: ExecFileSyncOptionsWithBufferEncoding): Buffer;
-    export function execFileSync(command: string, args?: string[], options?: ExecFileSyncOptions): Buffer;
+    export function execFileSync(command: string, args?: ReadonlyArray<string>, options?: ExecFileSyncOptionsWithStringEncoding): string;
+    export function execFileSync(command: string, args?: ReadonlyArray<string>, options?: ExecFileSyncOptionsWithBufferEncoding): Buffer;
+    export function execFileSync(command: string, args?: ReadonlyArray<string>, options?: ExecFileSyncOptions): Buffer;
 }
 
 declare module "url" {
@@ -2380,23 +2485,6 @@
         unicode?: boolean;
     }
 
-    export class URLSearchParams implements Iterable<[string, string]> {
-        constructor(init?: URLSearchParams | string | { [key: string]: string | string[] | undefined } | Iterable<[string, string]> | Array<[string, string]>);
-        append(name: string, value: string): void;
-        delete(name: string): void;
-        entries(): IterableIterator<[string, string]>;
-        forEach(callback: (value: string, name: string) => void): void;
-        get(name: string): string | null;
-        getAll(name: string): string[];
-        has(name: string): boolean;
-        keys(): IterableIterator<string>;
-        set(name: string, value: string): void;
-        sort(): void;
-        toString(): string;
-        values(): IterableIterator<string>;
-        [Symbol.iterator](): IterableIterator<[string, string]>;
-    }
-
     export class URL {
         constructor(input: string, base?: string | URL);
         hash: string;
@@ -2414,6 +2502,23 @@
         toString(): string;
         toJSON(): string;
     }
+
+    export class URLSearchParams implements Iterable<[string, string]> {
+        constructor(init?: URLSearchParams | string | { [key: string]: string | string[] | undefined } | Iterable<[string, string]> | Array<[string, string]>);
+        append(name: string, value: string): void;
+        delete(name: string): void;
+        entries(): IterableIterator<[string, string]>;
+        forEach(callback: (value: string, name: string) => void): void;
+        get(name: string): string | null;
+        getAll(name: string): string[];
+        has(name: string): boolean;
+        keys(): IterableIterator<string>;
+        set(name: string, value: string): void;
+        sort(): void;
+        toString(): string;
+        values(): IterableIterator<string>;
+        [Symbol.iterator](): IterableIterator<[string, string]>;
+    }
 }
 
 declare module "dns" {
@@ -2472,11 +2577,19 @@
         ttl: number;
     }
 
+    export interface AnyRecordWithTtl extends RecordWithTtl {
+        type: "A" | "AAAA";
+    }
+
     export interface MxRecord {
         priority: number;
         exchange: string;
     }
 
+    export interface AnyMxRecord extends MxRecord {
+        type: "MX";
+    }
+
     export interface NaptrRecord {
         flags: string;
         service: string;
@@ -2486,6 +2599,10 @@
         preference: number;
     }
 
+    export interface AnyNaptrRecord extends NaptrRecord {
+        type: "NAPTR";
+    }
+
     export interface SoaRecord {
         nsname: string;
         hostmaster: string;
@@ -2496,6 +2613,10 @@
         minttl: number;
     }
 
+    export interface AnySoaRecord extends SoaRecord {
+        type: "SOA";
+    }
+
     export interface SrvRecord {
         priority: number;
         weight: number;
@@ -2503,9 +2624,19 @@
         name: string;
     }
 
+    export interface AnySrvRecord extends SrvRecord {
+        type: "SRV";
+    }
+
+    export interface AnyTxtRecord {
+        type: "TXT";
+        entries: string[];
+    }
+
     export function resolve(hostname: string, callback: (err: NodeJS.ErrnoException, addresses: string[]) => void): void;
     export function resolve(hostname: string, rrtype: "A", callback: (err: NodeJS.ErrnoException, addresses: string[]) => void): void;
     export function resolve(hostname: string, rrtype: "AAAA", callback: (err: NodeJS.ErrnoException, addresses: string[]) => void): void;
+    export function resolve(hostname: string, rrtype: "ANY", callback: (err: NodeJS.ErrnoException, addresses: ReadonlyArray<AnySrvRecord | AnySoaRecord | AnyNaptrRecord | AnyRecordWithTtl | AnyMxRecord | AnyTxtRecord>) => void): void;
     export function resolve(hostname: string, rrtype: "CNAME", callback: (err: NodeJS.ErrnoException, addresses: string[]) => void): void;
     export function resolve(hostname: string, rrtype: "MX", callback: (err: NodeJS.ErrnoException, addresses: MxRecord[]) => void): void;
     export function resolve(hostname: string, rrtype: "NAPTR", callback: (err: NodeJS.ErrnoException, addresses: NaptrRecord[]) => void): void;
@@ -2519,6 +2650,7 @@
     // NOTE: This namespace provides design-time support for util.promisify. Exported members do not exist at runtime.
     export namespace resolve {
         export function __promisify__(hostname: string, rrtype?: "A" | "AAAA" | "CNAME" | "NS" | "PTR"): Promise<string[]>;
+        export function __promisify__(hostname: string, rrtype: "ANY"): Promise<ReadonlyArray<AnySrvRecord | AnySoaRecord | AnyNaptrRecord | AnyRecordWithTtl | AnyMxRecord | AnyTxtRecord>>;
         export function __promisify__(hostname: string, rrtype: "MX"): Promise<MxRecord[]>;
         export function __promisify__(hostname: string, rrtype: "NAPTR"): Promise<NaptrRecord[]>;
         export function __promisify__(hostname: string, rrtype: "SOA"): Promise<SoaRecord>;
@@ -2549,6 +2681,7 @@
         export function __promisify__(hostname: string, options?: ResolveOptions): Promise<string[] | RecordWithTtl[]>;
     }
 
+    export function resolveAny(hostname: string, callback: (err: NodeJS.ErrnoException, addresses: ReadonlyArray<AnySrvRecord | AnySoaRecord | AnyNaptrRecord | AnyRecordWithTtl | AnyMxRecord | AnyTxtRecord>) => void): void;
     export function resolveCname(hostname: string, callback: (err: NodeJS.ErrnoException, addresses: string[]) => void): void;
     export function resolveMx(hostname: string, callback: (err: NodeJS.ErrnoException, addresses: MxRecord[]) => void): void;
     export function resolveNaptr(hostname: string, callback: (err: NodeJS.ErrnoException, addresses: NaptrRecord[]) => void): void;
@@ -2595,6 +2728,12 @@
 
     type LookupFunction = (hostname: string, options: dns.LookupOneOptions, callback: (err: NodeJS.ErrnoException | null, address: string, family: number) => void) => void;
 
+    export interface AddressInfo {
+        address: string;
+        family: string;
+        port: number;
+    }
+
     export interface SocketConstructorOpts {
         fd?: number;
         allowHalfOpen?: boolean;
@@ -2642,7 +2781,7 @@
         setTimeout(timeout: number, callback?: Function): this;
         setNoDelay(noDelay?: boolean): this;
         setKeepAlive(enable?: boolean, initialDelay?: number): this;
-        address(): { port: number; family: string; address: string; };
+        address(): AddressInfo | string;
         unref(): void;
         ref(): void;
 
@@ -2741,6 +2880,8 @@
         backlog?: number;
         path?: string;
         exclusive?: boolean;
+        readableAll?: boolean;
+        writableAll?: boolean;
     }
 
     // https://github.com/nodejs/node/blob/master/lib/net.js
@@ -2758,7 +2899,7 @@
         listen(handle: any, backlog?: number, listeningListener?: Function): this;
         listen(handle: any, listeningListener?: Function): this;
         close(callback?: Function): this;
-        address(): { port: number; family: string; address: string; };
+        address(): AddressInfo | string;
         getConnections(cb: (error: Error | null, count: number) => void): void;
         ref(): this;
         unref(): this;
@@ -2834,22 +2975,17 @@
 }
 
 declare module "dgram" {
-    import * as events from "events";
+    import { AddressInfo } from "net";
     import * as dns from "dns";
+    import * as events from "events";
 
-    interface RemoteInfo {
-        address: string;
-        family: string;
-        port: number;
-    }
-
-    interface AddressInfo {
+    export interface RemoteInfo {
         address: string;
         family: string;
         port: number;
     }
 
-    interface BindOptions {
+    export interface BindOptions {
         port: number;
         address?: string;
         exclusive?: boolean;
@@ -2857,7 +2993,7 @@
 
     type SocketType = "udp4" | "udp6";
 
-    interface SocketOptions {
+    export interface SocketOptions {
         type: SocketType;
         reuseAddr?: boolean;
         recvBufferSize?: number;
@@ -2876,7 +3012,7 @@
         bind(callback?: () => void): void;
         bind(options: BindOptions, callback?: Function): void;
         close(callback?: () => void): void;
-        address(): AddressInfo;
+        address(): AddressInfo | string;
         setBroadcast(flag: boolean): void;
         setTTL(ttl: number): void;
         setMulticastTTL(ttl: number): void;
@@ -3004,7 +3140,9 @@
     }
 
     export class ReadStream extends stream.Readable {
-        close(): void;
+        // ### BEGIN VSCODE MODIFICATION ###
+        // close(): void; // this method does not exist officially and should never be called. Use destroy() instead. See also https://github.com/nodejs/node/issues/2006
+        // ### BEGIN VSCODE MODIFICATION ###
         destroy(): void;
         bytesRead: number;
         path: string | Buffer;
@@ -3036,7 +3174,9 @@
     }
 
     export class WriteStream extends stream.Writable {
-        close(): void;
+        // ### BEGIN VSCODE MODIFICATION ###
+        // close(): void; // this method does not exist officially and should never be called. Use destroy() instead. See also https://github.com/nodejs/node/issues/2006
+        // ### BEGIN VSCODE MODIFICATION ###
         bytesWritten: number;
         path: string | Buffer;
 
@@ -3539,6 +3679,11 @@
          * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
          */
         export function __promisify__(path: PathLike, options?: { encoding?: string | null } | string | null): Promise<string | Buffer>;
+
+        export function native(path: PathLike, options: { encoding?: BufferEncoding | null } | BufferEncoding | undefined | null, callback: (err: NodeJS.ErrnoException, resolvedPath: string) => void): void;
+        export function native(path: PathLike, options: { encoding: "buffer" } | "buffer", callback: (err: NodeJS.ErrnoException, resolvedPath: Buffer) => void): void;
+        export function native(path: PathLike, options: { encoding?: string | null } | string | undefined | null, callback: (err: NodeJS.ErrnoException, resolvedPath: string | Buffer) => void): void;
+        export function native(path: PathLike, callback: (err: NodeJS.ErrnoException, resolvedPath: string) => void): void;
     }
 
     /**
@@ -3562,6 +3707,12 @@
      */
     export function realpathSync(path: PathLike, options?: { encoding?: string | null } | string | null): string | Buffer;
 
+    export namespace realpathSync {
+        export function native(path: PathLike, options?: { encoding?: BufferEncoding | null } | BufferEncoding | null): string;
+        export function native(path: PathLike, options: { encoding: "buffer" } | "buffer"): Buffer;
+        export function native(path: PathLike, options?: { encoding?: string | null } | string | null): string | Buffer;
+    }
+
     /**
      * Asynchronous unlink(2) - delete a name and possibly the file it refers to.
      * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
@@ -4332,6 +4483,17 @@
         /** Constant for fs.access(). File can be executed by the calling process. */
         export const X_OK: number;
 
+        // File Copy Constants
+
+        /** Constant for fs.copyFile. Flag indicating the destination file should not be overwritten if it already exists. */
+        export const COPYFILE_EXCL: number;
+
+        /** Constant for fs.copyFile. copy operation will attempt to create a copy-on-write reflink. If the underlying platform does not support copy-on-write, then a fallback copy mechanism is used. */
+        export const COPYFILE_FICLONE: number;
+
+        /** Constant for fs.copyFile. Copy operation will attempt to create a copy-on-write reflink. If the underlying platform does not support copy-on-write, then the operation will fail with an error. */
+        export const COPYFILE_FICLONE_FORCE: number;
+
         // File Open Constants
 
         /** Constant for fs.open(). Flag indicating to open a file for read-only access. */
@@ -4445,9 +4607,6 @@
 
         /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by others. */
         export const S_IXOTH: number;
-
-        /** Constant for fs.copyFile. Flag indicating the destination file should not be overwritten if it already exists. */
-        export const COPYFILE_EXCL: number;
     }
 
     /**
@@ -4579,37 +4738,512 @@
      * @param flags An optional integer that specifies the behavior of the copy operation. The only supported flag is fs.constants.COPYFILE_EXCL, which causes the copy operation to fail if dest already exists.
      */
     export function copyFileSync(src: PathLike, dest: PathLike, flags?: number): void;
-}
 
-declare module "path" {
-    /**
-     * A parsed path object generated by path.parse() or consumed by path.format().
-     */
-    export interface ParsedPath {
-        /**
-         * The root of the path such as '/' or 'c:\'
-         */
-        root: string;
-        /**
-         * The full directory path such as '/home/user/dir' or 'c:\path\dir'
-         */
-        dir: string;
-        /**
-         * The file name including extension (if any) such as 'index.html'
-         */
-        base: string;
-        /**
-         * The file extension (if any) such as '.html'
-         */
-        ext: string;
-        /**
-         * The file name without extension (if any) such as 'index'
-         */
-        name: string;
-    }
-    export interface FormatInputPathObject {
-        /**
-         * The root of the path such as '/' or 'c:\'
+    export namespace promises {
+        interface FileHandle {
+            /**
+             * Gets the file descriptor for this file handle.
+             */
+            readonly fd: number;
+
+            /**
+             * Asynchronously append data to a file, creating the file if it does not exist. The underlying file will _not_ be closed automatically.
+             * The `FileHandle` must have been opened for appending.
+             * @param data The data to write. If something other than a `Buffer` or `Uint8Array` is provided, the value is coerced to a string.
+             * @param options Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag.
+             * If `encoding` is not supplied, the default of `'utf8'` is used.
+             * If `mode` is not supplied, the default of `0o666` is used.
+             * If `mode` is a string, it is parsed as an octal integer.
+             * If `flag` is not supplied, the default of `'a'` is used.
+             */
+            appendFile(data: any, options?: { encoding?: string | null, mode?: string | number, flag?: string | number } | string | null): Promise<void>;
+
+            /**
+             * Asynchronous fchown(2) - Change ownership of a file.
+             */
+            chown(uid: number, gid: number): Promise<void>;
+
+            /**
+             * Asynchronous fchmod(2) - Change permissions of a file.
+             * @param mode A file mode. If a string is passed, it is parsed as an octal integer.
+             */
+            chmod(mode: string | number): Promise<void>;
+
+            /**
+             * Asynchronous fdatasync(2) - synchronize a file's in-core state with storage device.
+             */
+            datasync(): Promise<void>;
+
+            /**
+             * Asynchronous fsync(2) - synchronize a file's in-core state with the underlying storage device.
+             */
+            sync(): Promise<void>;
+
+            /**
+             * Asynchronously reads data from the file.
+             * The `FileHandle` must have been opened for reading.
+             * @param buffer The buffer that the data will be written to.
+             * @param offset The offset in the buffer at which to start writing.
+             * @param length The number of bytes to read.
+             * @param position The offset from the beginning of the file from which data should be read. If `null`, data will be read from the current position.
+             */
+            read<TBuffer extends Buffer | Uint8Array>(buffer: TBuffer, offset?: number | null, length?: number | null, position?: number | null): Promise<{ bytesRead: number, buffer: TBuffer }>;
+
+            /**
+             * Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.
+             * The `FileHandle` must have been opened for reading.
+             * @param options An object that may contain an optional flag.
+             * If a flag is not provided, it defaults to `'r'`.
+             */
+            readFile(options?: { encoding?: null, flag?: string | number } | null): Promise<Buffer>;
+
+            /**
+             * Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.
+             * The `FileHandle` must have been opened for reading.
+             * @param options An object that may contain an optional flag.
+             * If a flag is not provided, it defaults to `'r'`.
+             */
+            readFile(options: { encoding: BufferEncoding, flag?: string | number } | BufferEncoding): Promise<string>;
+
+            /**
+             * Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.
+             * The `FileHandle` must have been opened for reading.
+             * @param options An object that may contain an optional flag.
+             * If a flag is not provided, it defaults to `'r'`.
+             */
+            readFile(options?: { encoding?: string | null, flag?: string | number } | string | null): Promise<string | Buffer>;
+
+            /**
+             * Asynchronous fstat(2) - Get file status.
+             */
+            stat(): Promise<Stats>;
+
+            /**
+             * Asynchronous ftruncate(2) - Truncate a file to a specified length.
+             * @param len If not specified, defaults to `0`.
+             */
+            truncate(len?: number): Promise<void>;
+
+            /**
+             * Asynchronously change file timestamps of the file.
+             * @param atime The last access time. If a string is provided, it will be coerced to number.
+             * @param mtime The last modified time. If a string is provided, it will be coerced to number.
+             */
+            utimes(atime: string | number | Date, mtime: string | number | Date): Promise<void>;
+
+            /**
+             * Asynchronously writes `buffer` to the file.
+             * The `FileHandle` must have been opened for writing.
+             * @param buffer The buffer that the data will be written to.
+             * @param offset The part of the buffer to be written. If not supplied, defaults to `0`.
+             * @param length The number of bytes to write. If not supplied, defaults to `buffer.length - offset`.
+             * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.
+             */
+            write<TBuffer extends Buffer | Uint8Array>(buffer: TBuffer, offset?: number | null, length?: number | null, position?: number | null): Promise<{ bytesWritten: number, buffer: TBuffer }>;
+
+            /**
+             * Asynchronously writes `string` to the file.
+             * The `FileHandle` must have been opened for writing.
+             * It is unsafe to call `write()` multiple times on the same file without waiting for the `Promise` to be resolved (or rejected). For this scenario, `fs.createWriteStream` is strongly recommended.
+             * @param string A string to write. If something other than a string is supplied it will be coerced to a string.
+             * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.
+             * @param encoding The expected string encoding.
+             */
+            write(data: any, position?: number | null, encoding?: string | null): Promise<{ bytesWritten: number, buffer: string }>;
+
+            /**
+             * Asynchronously writes data to a file, replacing the file if it already exists. The underlying file will _not_ be closed automatically.
+             * The `FileHandle` must have been opened for writing.
+             * It is unsafe to call `writeFile()` multiple times on the same file without waiting for the `Promise` to be resolved (or rejected).
+             * @param data The data to write. If something other than a `Buffer` or `Uint8Array` is provided, the value is coerced to a string.
+             * @param options Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag.
+             * If `encoding` is not supplied, the default of `'utf8'` is used.
+             * If `mode` is not supplied, the default of `0o666` is used.
+             * If `mode` is a string, it is parsed as an octal integer.
+             * If `flag` is not supplied, the default of `'w'` is used.
+             */
+            writeFile(data: any, options?: { encoding?: string | null, mode?: string | number, flag?: string | number } | string | null): Promise<void>;
+
+            /**
+             * Asynchronous close(2) - close a `FileHandle`.
+             */
+            close(): Promise<void>;
+        }
+
+        /**
+         * Asynchronously tests a user's permissions for the file specified by path.
+         * @param path A path to a file or directory. If a URL is provided, it must use the `file:` protocol.
+         * URL support is _experimental_.
+         */
+        function access(path: PathLike, mode?: number): Promise<void>;
+
+        /**
+         * Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it already exists.
+         * Node.js makes no guarantees about the atomicity of the copy operation.
+         * If an error occurs after the destination file has been opened for writing, Node.js will attempt
+         * to remove the destination.
+         * @param src A path to the source file.
+         * @param dest A path to the destination file.
+         * @param flags An optional integer that specifies the behavior of the copy operation. The only
+         * supported flag is `fs.constants.COPYFILE_EXCL`, which causes the copy operation to fail if
+         * `dest` already exists.
+         */
+        function copyFile(src: PathLike, dest: PathLike, flags?: number): Promise<void>;
+
+        /**
+         * Asynchronous open(2) - open and possibly create a file.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param mode A file mode. If a string is passed, it is parsed as an octal integer. If not
+         * supplied, defaults to `0o666`.
+         */
+        function open(path: PathLike, flags: string | number, mode?: string | number): Promise<FileHandle>;
+
+        /**
+         * Asynchronously reads data from the file referenced by the supplied `FileHandle`.
+         * @param handle A `FileHandle`.
+         * @param buffer The buffer that the data will be written to.
+         * @param offset The offset in the buffer at which to start writing.
+         * @param length The number of bytes to read.
+         * @param position The offset from the beginning of the file from which data should be read. If
+         * `null`, data will be read from the current position.
+         */
+        function read<TBuffer extends Buffer | Uint8Array>(handle: FileHandle, buffer: TBuffer, offset?: number | null, length?: number | null, position?: number | null): Promise<{ bytesRead: number, buffer: TBuffer }>;
+
+        /**
+         * Asynchronously writes `buffer` to the file referenced by the supplied `FileHandle`.
+         * It is unsafe to call `fsPromises.write()` multiple times on the same file without waiting for the `Promise` to be resolved (or rejected). For this scenario, `fs.createWriteStream` is strongly recommended.
+         * @param handle A `FileHandle`.
+         * @param buffer The buffer that the data will be written to.
+         * @param offset The part of the buffer to be written. If not supplied, defaults to `0`.
+         * @param length The number of bytes to write. If not supplied, defaults to `buffer.length - offset`.
+         * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.
+         */
+        function write<TBuffer extends Buffer | Uint8Array>(handle: FileHandle, buffer: TBuffer, offset?: number | null, length?: number | null, position?: number | null): Promise<{ bytesWritten: number, buffer: TBuffer }>;
+
+        /**
+         * Asynchronously writes `string` to the file referenced by the supplied `FileHandle`.
+         * It is unsafe to call `fsPromises.write()` multiple times on the same file without waiting for the `Promise` to be resolved (or rejected). For this scenario, `fs.createWriteStream` is strongly recommended.
+         * @param handle A `FileHandle`.
+         * @param string A string to write. If something other than a string is supplied it will be coerced to a string.
+         * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.
+         * @param encoding The expected string encoding.
+         */
+        function write(handle: FileHandle, string: any, position?: number | null, encoding?: string | null): Promise<{ bytesWritten: number, buffer: string }>;
+
+        /**
+         * Asynchronous rename(2) - Change the name or location of a file or directory.
+         * @param oldPath A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * URL support is _experimental_.
+         * @param newPath A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * URL support is _experimental_.
+         */
+        function rename(oldPath: PathLike, newPath: PathLike): Promise<void>;
+
+        /**
+         * Asynchronous truncate(2) - Truncate a file to a specified length.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param len If not specified, defaults to `0`.
+         */
+        function truncate(path: PathLike, len?: number): Promise<void>;
+
+        /**
+         * Asynchronous ftruncate(2) - Truncate a file to a specified length.
+         * @param handle A `FileHandle`.
+         * @param len If not specified, defaults to `0`.
+         */
+        function ftruncate(handle: FileHandle, len?: number): Promise<void>;
+
+        /**
+         * Asynchronous rmdir(2) - delete a directory.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function rmdir(path: PathLike): Promise<void>;
+
+        /**
+         * Asynchronous fdatasync(2) - synchronize a file's in-core state with storage device.
+         * @param handle A `FileHandle`.
+         */
+        function fdatasync(handle: FileHandle): Promise<void>;
+
+        /**
+         * Asynchronous fsync(2) - synchronize a file's in-core state with the underlying storage device.
+         * @param handle A `FileHandle`.
+         */
+        function fsync(handle: FileHandle): Promise<void>;
+
+        /**
+         * Asynchronous mkdir(2) - create a directory.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param mode A file mode. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.
+         */
+        function mkdir(path: PathLike, mode?: string | number): Promise<void>;
+
+        /**
+         * Asynchronous readdir(3) - read a directory.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function readdir(path: PathLike, options?: { encoding?: BufferEncoding | null } | BufferEncoding | null): Promise<string[]>;
+
+        /**
+         * Asynchronous readdir(3) - read a directory.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function readdir(path: PathLike, options: { encoding: "buffer" } | "buffer"): Promise<Buffer[]>;
+
+        /**
+         * Asynchronous readdir(3) - read a directory.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function readdir(path: PathLike, options?: { encoding?: string | null } | string | null): Promise<string[] | Buffer[]>;
+
+        /**
+         * Asynchronous readlink(2) - read value of a symbolic link.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function readlink(path: PathLike, options?: { encoding?: BufferEncoding | null } | BufferEncoding | null): Promise<string>;
+
+        /**
+         * Asynchronous readlink(2) - read value of a symbolic link.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function readlink(path: PathLike, options: { encoding: "buffer" } | "buffer"): Promise<Buffer>;
+
+        /**
+         * Asynchronous readlink(2) - read value of a symbolic link.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function readlink(path: PathLike, options?: { encoding?: string | null } | string | null): Promise<string | Buffer>;
+
+        /**
+         * Asynchronous symlink(2) - Create a new symbolic link to an existing file.
+         * @param target A path to an existing file. If a URL is provided, it must use the `file:` protocol.
+         * @param path A path to the new symlink. If a URL is provided, it must use the `file:` protocol.
+         * @param type May be set to `'dir'`, `'file'`, or `'junction'` (default is `'file'`) and is only available on Windows (ignored on other platforms).
+         * When using `'junction'`, the `target` argument will automatically be normalized to an absolute path.
+         */
+        function symlink(target: PathLike, path: PathLike, type?: string | null): Promise<void>;
+
+        /**
+         * Asynchronous fstat(2) - Get file status.
+         * @param handle A `FileHandle`.
+         */
+        function fstat(handle: FileHandle): Promise<Stats>;
+
+        /**
+         * Asynchronous lstat(2) - Get file status. Does not dereference symbolic links.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function lstat(path: PathLike): Promise<Stats>;
+
+        /**
+         * Asynchronous stat(2) - Get file status.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function stat(path: PathLike): Promise<Stats>;
+
+        /**
+         * Asynchronous link(2) - Create a new link (also known as a hard link) to an existing file.
+         * @param existingPath A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param newPath A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function link(existingPath: PathLike, newPath: PathLike): Promise<void>;
+
+        /**
+         * Asynchronous unlink(2) - delete a name and possibly the file it refers to.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function unlink(path: PathLike): Promise<void>;
+
+        /**
+         * Asynchronous fchmod(2) - Change permissions of a file.
+         * @param handle A `FileHandle`.
+         * @param mode A file mode. If a string is passed, it is parsed as an octal integer.
+         */
+        function fchmod(handle: FileHandle, mode: string | number): Promise<void>;
+
+        /**
+         * Asynchronous chmod(2) - Change permissions of a file.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param mode A file mode. If a string is passed, it is parsed as an octal integer.
+         */
+        function chmod(path: PathLike, mode: string | number): Promise<void>;
+
+        /**
+         * Asynchronous lchmod(2) - Change permissions of a file. Does not dereference symbolic links.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param mode A file mode. If a string is passed, it is parsed as an octal integer.
+         */
+        function lchmod(path: PathLike, mode: string | number): Promise<void>;
+
+        /**
+         * Asynchronous lchown(2) - Change ownership of a file. Does not dereference symbolic links.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function lchown(path: PathLike, uid: number, gid: number): Promise<void>;
+
+        /**
+         * Asynchronous fchown(2) - Change ownership of a file.
+         * @param handle A `FileHandle`.
+         */
+        function fchown(handle: FileHandle, uid: number, gid: number): Promise<void>;
+
+        /**
+         * Asynchronous chown(2) - Change ownership of a file.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         */
+        function chown(path: PathLike, uid: number, gid: number): Promise<void>;
+
+        /**
+         * Asynchronously change file timestamps of the file referenced by the supplied path.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param atime The last access time. If a string is provided, it will be coerced to number.
+         * @param mtime The last modified time. If a string is provided, it will be coerced to number.
+         */
+        function utimes(path: PathLike, atime: string | number | Date, mtime: string | number | Date): Promise<void>;
+
+        /**
+         * Asynchronously change file timestamps of the file referenced by the supplied `FileHandle`.
+         * @param handle A `FileHandle`.
+         * @param atime The last access time. If a string is provided, it will be coerced to number.
+         * @param mtime The last modified time. If a string is provided, it will be coerced to number.
+         */
+        function futimes(handle: FileHandle, atime: string | number | Date, mtime: string | number | Date): Promise<void>;
+
+        /**
+         * Asynchronous realpath(3) - return the canonicalized absolute pathname.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function realpath(path: PathLike, options?: { encoding?: BufferEncoding | null } | BufferEncoding | null): Promise<string>;
+
+        /**
+         * Asynchronous realpath(3) - return the canonicalized absolute pathname.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function realpath(path: PathLike, options: { encoding: "buffer" } | "buffer"): Promise<Buffer>;
+
+        /**
+         * Asynchronous realpath(3) - return the canonicalized absolute pathname.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function realpath(path: PathLike, options?: { encoding?: string | null } | string | null): Promise<string | Buffer>;
+
+        /**
+         * Asynchronously creates a unique temporary directory.
+         * Generates six random characters to be appended behind a required `prefix` to create a unique temporary directory.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function mkdtemp(prefix: string, options?: { encoding?: BufferEncoding | null } | BufferEncoding | null): Promise<string>;
+
+        /**
+         * Asynchronously creates a unique temporary directory.
+         * Generates six random characters to be appended behind a required `prefix` to create a unique temporary directory.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function mkdtemp(prefix: string, options: { encoding: "buffer" } | "buffer"): Promise<Buffer>;
+
+        /**
+         * Asynchronously creates a unique temporary directory.
+         * Generates six random characters to be appended behind a required `prefix` to create a unique temporary directory.
+         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.
+         */
+        function mkdtemp(prefix: string, options?: { encoding?: string | null } | string | null): Promise<string | Buffer>;
+
+        /**
+         * Asynchronously writes data to a file, replacing the file if it already exists.
+         * It is unsafe to call `fsPromises.writeFile()` multiple times on the same file without waiting for the `Promise` to be resolved (or rejected).
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * URL support is _experimental_.
+         * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.
+         * @param data The data to write. If something other than a `Buffer` or `Uint8Array` is provided, the value is coerced to a string.
+         * @param options Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag.
+         * If `encoding` is not supplied, the default of `'utf8'` is used.
+         * If `mode` is not supplied, the default of `0o666` is used.
+         * If `mode` is a string, it is parsed as an octal integer.
+         * If `flag` is not supplied, the default of `'w'` is used.
+         */
+        function writeFile(path: PathLike | FileHandle, data: any, options?: { encoding?: string | null, mode?: string | number, flag?: string | number } | string | null): Promise<void>;
+
+        /**
+         * Asynchronously append data to a file, creating the file if it does not exist.
+         * @param file A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * URL support is _experimental_.
+         * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.
+         * @param data The data to write. If something other than a `Buffer` or `Uint8Array` is provided, the value is coerced to a string.
+         * @param options Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag.
+         * If `encoding` is not supplied, the default of `'utf8'` is used.
+         * If `mode` is not supplied, the default of `0o666` is used.
+         * If `mode` is a string, it is parsed as an octal integer.
+         * If `flag` is not supplied, the default of `'a'` is used.
+         */
+        function appendFile(path: PathLike | FileHandle, data: any, options?: { encoding?: string | null, mode?: string | number, flag?: string | number } | string | null): Promise<void>;
+
+        /**
+         * Asynchronously reads the entire contents of a file.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.
+         * @param options An object that may contain an optional flag.
+         * If a flag is not provided, it defaults to `'r'`.
+         */
+        function readFile(path: PathLike | FileHandle, options?: { encoding?: null, flag?: string | number } | null): Promise<Buffer>;
+
+        /**
+         * Asynchronously reads the entire contents of a file.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.
+         * @param options An object that may contain an optional flag.
+         * If a flag is not provided, it defaults to `'r'`.
+         */
+        function readFile(path: PathLike | FileHandle, options: { encoding: BufferEncoding, flag?: string | number } | BufferEncoding): Promise<string>;
+
+        /**
+         * Asynchronously reads the entire contents of a file.
+         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.
+         * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.
+         * @param options An object that may contain an optional flag.
+         * If a flag is not provided, it defaults to `'r'`.
+         */
+        function readFile(path: PathLike | FileHandle, options?: { encoding?: string | null, flag?: string | number } | string | null): Promise<string | Buffer>;
+    }
+}
+
+declare module "path" {
+    /**
+     * A parsed path object generated by path.parse() or consumed by path.format().
+     */
+    export interface ParsedPath {
+        /**
+         * The root of the path such as '/' or 'c:\'
+         */
+        root: string;
+        /**
+         * The full directory path such as '/home/user/dir' or 'c:\path\dir'
+         */
+        dir: string;
+        /**
+         * The file name including extension (if any) such as 'index.html'
+         */
+        base: string;
+        /**
+         * The file extension (if any) such as '.html'
+         */
+        ext: string;
+        /**
+         * The file name without extension (if any) such as 'index'
+         */
+        name: string;
+    }
+    export interface FormatInputPathObject {
+        /**
+         * The root of the path such as '/' or 'c:\'
          */
         root?: string;
         /**
@@ -5068,23 +5702,6 @@
         prependOnceListener(event: "secureConnection", listener: (tlsSocket: TLSSocket) => void): this;
     }
 
-    export interface ClearTextStream extends stream.Duplex {
-        authorized: boolean;
-        authorizationError: Error;
-        getPeerCertificate(): any;
-        getCipher: {
-            name: string;
-            version: string;
-        };
-        address: {
-            port: number;
-            family: string;
-            address: string;
-        };
-        remoteAddress: string;
-        remotePort: number;
-    }
-
     export interface SecurePair {
         encrypted: any;
         cleartext: any;
@@ -5099,6 +5716,7 @@
         ciphers?: string;
         honorCipherOrder?: boolean;
         ecdhCurve?: string;
+        clientCertEngine?: string;
         crl?: string | Buffer | Array<string | Buffer>;
         dhparam?: string | Buffer;
         secureOptions?: number; // Value is a numeric bitmask of the `SSL_OP_*` options
@@ -5130,16 +5748,19 @@
 }
 
 declare module "crypto" {
+    import * as stream from "stream";
+
     export interface Certificate {
-        exportChallenge(spkac: string | Buffer): Buffer;
-        exportPublicKey(spkac: string | Buffer): Buffer;
-        verifySpkac(spkac: Buffer): boolean;
+        exportChallenge(spkac: string | ArrayBufferView): Buffer;
+        exportPublicKey(spkac: string | ArrayBufferView): Buffer;
+        verifySpkac(spkac: ArrayBufferView): boolean;
     }
     export var Certificate: {
         new(): Certificate;
         (): Certificate;
     };
 
+    /** @deprecated since v10.0.0 */
     export var fips: boolean;
 
     export interface CredentialDetails {
@@ -5153,8 +5774,8 @@
     }
     export interface Credentials { context?: any; }
     export function createCredentials(details: CredentialDetails): Credentials;
-    export function createHash(algorithm: string): Hash;
-    export function createHmac(algorithm: string, key: string | Buffer): Hmac;
+    export function createHash(algorithm: string, options?: stream.TransformOptions): Hash;
+    export function createHmac(algorithm: string, key: string | ArrayBufferView, options?: stream.TransformOptions): Hmac;
 
     type Utf8AsciiLatin1Encoding = "utf8" | "ascii" | "latin1";
     type HexBase64Latin1Encoding = "latin1" | "hex" | "base64";
@@ -5163,69 +5784,112 @@
     type ECDHKeyFormat = "compressed" | "uncompressed" | "hybrid";
 
     export interface Hash extends NodeJS.ReadWriteStream {
-        update(data: string | Buffer | DataView): Hash;
-        update(data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding): Hash;
+        update(data: string | ArrayBufferView): Hash;
+        update(data: string, input_encoding: Utf8AsciiLatin1Encoding): Hash;
         digest(): Buffer;
         digest(encoding: HexBase64Latin1Encoding): string;
     }
     export interface Hmac extends NodeJS.ReadWriteStream {
-        update(data: string | Buffer | DataView): Hmac;
-        update(data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding): Hmac;
+        update(data: string | ArrayBufferView): Hmac;
+        update(data: string, input_encoding: Utf8AsciiLatin1Encoding): Hmac;
         digest(): Buffer;
         digest(encoding: HexBase64Latin1Encoding): string;
     }
-    export function createCipher(algorithm: string, password: any): Cipher;
-    export function createCipheriv(algorithm: string, key: any, iv: any): Cipher;
+    export type CipherCCMTypes = 'aes-128-ccm' | 'aes-192-ccm' | 'aes-256-ccm';
+    export type CipherGCMTypes = 'aes-128-gcm' | 'aes-192-gcm' | 'aes-256-gcm';
+    export interface CipherCCMOptions extends stream.TransformOptions {
+        authTagLength: number;
+    }
+    export interface CipherGCMOptions extends stream.TransformOptions {
+        authTagLength?: number;
+    }
+    /** @deprecated since v10.0.0 use createCipheriv() */
+    export function createCipher(algorithm: string, password: string | ArrayBufferView, options?: stream.TransformOptions): Cipher;
+    export function createCipher(algorithm: CipherCCMTypes, password: string | ArrayBufferView, options: CipherCCMOptions): CipherCCM;
+    export function createCipher(algorithm: CipherGCMTypes, password: string | ArrayBufferView, options: CipherGCMOptions): CipherGCM;
+
+    export function createCipheriv(algorithm: string, key: string | ArrayBufferView, iv: string | ArrayBufferView, options?: stream.TransformOptions): Cipher;
+    export function createCipheriv(algorithm: CipherGCMTypes, key: string | ArrayBufferView, iv: string | ArrayBufferView, options: CipherCCMOptions): CipherCCM;
+    export function createCipheriv(algorithm: CipherGCMTypes, key: string | ArrayBufferView, iv: string | ArrayBufferView, options: CipherGCMOptions): CipherGCM;
+
     export interface Cipher extends NodeJS.ReadWriteStream {
-        update(data: Buffer | DataView): Buffer;
+        update(data: string | ArrayBufferView): Buffer;
         update(data: string, input_encoding: Utf8AsciiBinaryEncoding): Buffer;
-        update(data: Buffer | DataView, input_encoding: any, output_encoding: HexBase64BinaryEncoding): string;
+        update(data: ArrayBufferView, output_encoding: HexBase64BinaryEncoding): string;
+        update(data: ArrayBufferView, input_encoding: any, output_encoding: HexBase64BinaryEncoding): string;
+        // second arg ignored
         update(data: string, input_encoding: Utf8AsciiBinaryEncoding, output_encoding: HexBase64BinaryEncoding): string;
         final(): Buffer;
         final(output_encoding: string): string;
         setAutoPadding(auto_padding?: boolean): this;
+        // getAuthTag(): Buffer;
+        // setAAD(buffer: Buffer): this; // docs only say buffer
+    }
+    export interface CipherCCM extends Cipher {
+        setAAD(buffer: Buffer, options: { plainTextLength: number }): this;
+        getAuthTag(): Buffer;
+    }
+    export interface CipherGCM extends Cipher {
+        setAAD(buffer: Buffer, options?: { plainTextLength: number }): this;
         getAuthTag(): Buffer;
-        setAAD(buffer: Buffer): this;
     }
-    export function createDecipher(algorithm: string, password: any): Decipher;
-    export function createDecipheriv(algorithm: string, key: any, iv: any): Decipher;
+    /** @deprecated since v10.0.0 use createCipheriv() */
+    export function createDecipher(algorithm: string, password: string | ArrayBufferView, options?: stream.TransformOptions): Decipher;
+    export function createDecipher(algorithm: CipherCCMTypes, password: string | ArrayBufferView, options: CipherCCMOptions): DecipherCCM;
+    export function createDecipher(algorithm: CipherGCMTypes, password: string | ArrayBufferView, options: CipherGCMOptions): DecipherGCM;
+
+    export function createDecipheriv(algorithm: string, key: string | ArrayBufferView, iv: string | ArrayBufferView, options?: stream.TransformOptions): Decipher;
+    export function createDecipheriv(algorithm: CipherCCMTypes, key: string | ArrayBufferView, iv: string | ArrayBufferView, options: CipherCCMOptions): DecipherCCM;
+    export function createDecipheriv(algorithm: CipherGCMTypes, key: string | ArrayBufferView, iv: string | ArrayBufferView, options: CipherGCMOptions): DecipherGCM;
+
     export interface Decipher extends NodeJS.ReadWriteStream {
-        update(data: Buffer | DataView): Buffer;
+        update(data: ArrayBufferView): Buffer;
         update(data: string, input_encoding: HexBase64BinaryEncoding): Buffer;
-        update(data: Buffer | DataView, input_encoding: any, output_encoding: Utf8AsciiBinaryEncoding): string;
+        update(data: ArrayBufferView, input_encoding: any, output_encoding: Utf8AsciiBinaryEncoding): string;
+        // second arg is ignored
         update(data: string, input_encoding: HexBase64BinaryEncoding, output_encoding: Utf8AsciiBinaryEncoding): string;
         final(): Buffer;
         final(output_encoding: string): string;
         setAutoPadding(auto_padding?: boolean): this;
-        setAuthTag(tag: Buffer): this;
-        setAAD(buffer: Buffer): this;
+        // setAuthTag(tag: ArrayBufferView): this;
+        // setAAD(buffer: ArrayBufferView): this; // docs say buffer view
+    }
+    export interface DecipherCCM extends Decipher {
+        setAuthTag(buffer: ArrayBufferView, options: { plainTextLength: number }): this;
+        setAAD(buffer: ArrayBufferView): this; // docs say buffer view
     }
-    export function createSign(algorithm: string): Signer;
+    export interface DecipherGCM extends Decipher {
+        setAuthTag(buffer: ArrayBufferView, options?: { plainTextLength: number }): this;
+        setAAD(buffer: ArrayBufferView): this; // docs say buffer view
+    }
+
+    export function createSign(algorithm: string, options?: stream.WritableOptions): Signer;
     export interface Signer extends NodeJS.WritableStream {
-        update(data: string | Buffer | DataView): Signer;
-        update(data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding): Signer;
+        update(data: string | ArrayBufferView): Signer;
+        update(data: string, input_encoding: Utf8AsciiLatin1Encoding): Signer;
         sign(private_key: string | { key: string; passphrase: string }): Buffer;
         sign(private_key: string | { key: string; passphrase: string }, output_format: HexBase64Latin1Encoding): string;
     }
-    export function createVerify(algorith: string): Verify;
+    export function createVerify(algorith: string, options?: stream.WritableOptions): Verify;
     export interface Verify extends NodeJS.WritableStream {
-        update(data: string | Buffer | DataView): Verify;
-        update(data: string | Buffer | DataView, input_encoding: Utf8AsciiLatin1Encoding): Verify;
-        verify(object: string | Object, signature: Buffer | DataView): boolean;
+        update(data: string | ArrayBufferView): Verify;
+        update(data: string, input_encoding: Utf8AsciiLatin1Encoding): Verify;
+        verify(object: string | Object, signature: ArrayBufferView): boolean;
         verify(object: string | Object, signature: string, signature_format: HexBase64Latin1Encoding): boolean;
         // https://nodejs.org/api/crypto.html#crypto_verifier_verify_object_signature_signature_format
         // The signature field accepts a TypedArray type, but it is only available starting ES2017
     }
-    export function createDiffieHellman(prime_length: number, generator?: number): DiffieHellman;
-    export function createDiffieHellman(prime: Buffer): DiffieHellman;
+    export function createDiffieHellman(prime_length: number, generator?: number | ArrayBufferView): DiffieHellman;
+    export function createDiffieHellman(prime: ArrayBufferView): DiffieHellman;
     export function createDiffieHellman(prime: string, prime_encoding: HexBase64Latin1Encoding): DiffieHellman;
-    export function createDiffieHellman(prime: string, prime_encoding: HexBase64Latin1Encoding, generator: number | Buffer): DiffieHellman;
+    export function createDiffieHellman(prime: string, prime_encoding: HexBase64Latin1Encoding, generator: number | ArrayBufferView): DiffieHellman;
     export function createDiffieHellman(prime: string, prime_encoding: HexBase64Latin1Encoding, generator: string, generator_encoding: HexBase64Latin1Encoding): DiffieHellman;
     export interface DiffieHellman {
         generateKeys(): Buffer;
         generateKeys(encoding: HexBase64Latin1Encoding): string;
-        computeSecret(other_public_key: Buffer): Buffer;
+        computeSecret(other_public_key: ArrayBufferView): Buffer;
         computeSecret(other_public_key: string, input_encoding: HexBase64Latin1Encoding): Buffer;
+        computeSecret(other_public_key: ArrayBufferView, output_encoding: HexBase64Latin1Encoding): string;
         computeSecret(other_public_key: string, input_encoding: HexBase64Latin1Encoding, output_encoding: HexBase64Latin1Encoding): string;
         getPrime(): Buffer;
         getPrime(encoding: HexBase64Latin1Encoding): string;
@@ -5235,26 +5899,36 @@
         getPublicKey(encoding: HexBase64Latin1Encoding): string;
         getPrivateKey(): Buffer;
         getPrivateKey(encoding: HexBase64Latin1Encoding): string;
-        setPublicKey(public_key: Buffer): void;
+        setPublicKey(public_key: ArrayBufferView): void;
         setPublicKey(public_key: string, encoding: string): void;
-        setPrivateKey(private_key: Buffer): void;
+        setPrivateKey(private_key: ArrayBufferView): void;
         setPrivateKey(private_key: string, encoding: string): void;
         verifyError: number;
     }
     export function getDiffieHellman(group_name: string): DiffieHellman;
-    export function pbkdf2(password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, digest: string, callback: (err: Error, derivedKey: Buffer) => any): void;
-    export function pbkdf2Sync(password: string | Buffer, salt: string | Buffer, iterations: number, keylen: number, digest: string): Buffer;
+    export function pbkdf2(password: string | ArrayBufferView, salt: string | ArrayBufferView, iterations: number, keylen: number, digest: string, callback: (err: Error | null, derivedKey: Buffer) => any): void;
+    export function pbkdf2Sync(password: string | ArrayBufferView, salt: string | ArrayBufferView, iterations: number, keylen: number, digest: string): Buffer;
+
     export function randomBytes(size: number): Buffer;
-    export function randomBytes(size: number, callback: (err: Error, buf: Buffer) => void): void;
+    export function randomBytes(size: number, callback: (err: Error | null, buf: Buffer) => void): void;
     export function pseudoRandomBytes(size: number): Buffer;
-    export function pseudoRandomBytes(size: number, callback: (err: Error, buf: Buffer) => void): void;
-    export function randomFillSync(buffer: Buffer | Uint8Array, offset?: number, size?: number): Buffer;
-    export function randomFill(buffer: Buffer, callback: (err: Error, buf: Buffer) => void): void;
-    export function randomFill(buffer: Uint8Array, callback: (err: Error, buf: Uint8Array) => void): void;
-    export function randomFill(buffer: Buffer, offset: number, callback: (err: Error, buf: Buffer) => void): void;
-    export function randomFill(buffer: Uint8Array, offset: number, callback: (err: Error, buf: Uint8Array) => void): void;
-    export function randomFill(buffer: Buffer, offset: number, size: number, callback: (err: Error, buf: Buffer) => void): void;
-    export function randomFill(buffer: Uint8Array, offset: number, size: number, callback: (err: Error, buf: Uint8Array) => void): void;
+    export function pseudoRandomBytes(size: number, callback: (err: Error | null, buf: Buffer) => void): void;
+
+    export function randomFillSync<T extends Buffer | ArrayBufferView>(buffer: T, offset?: number, size?: number): T;
+    export function randomFill<T extends Buffer | ArrayBufferView>(buffer: T, callback: (err: Error | null, buf: T) => void): void;
+    export function randomFill<T extends Buffer | ArrayBufferView>(buffer: T, offset: number, callback: (err: Error | null, buf: T) => void): void;
+    export function randomFill<T extends Buffer | ArrayBufferView>(buffer: T, offset: number, size: number, callback: (err: Error | null, buf: T) => void): void;
+
+    export interface ScryptOptions {
+        N?: number;
+        r?: number;
+        p?: number;
+        maxmem?: number;
+    }
+    export function scrypt(password: string | ArrayBufferView, salt: string | ArrayBufferView, keylen: number, callback: (err: Error | null, derivedKey: Buffer) => void): void;
+    export function scrypt(password: string | ArrayBufferView, salt: string | ArrayBufferView, keylen: number, options: ScryptOptions, callback: (err: Error | null, derivedKey: Buffer) => void): void;
+    export function scryptSync(password: string | ArrayBufferView, salt: string | ArrayBufferView, keylen: number, options?: ScryptOptions): Buffer;
+
     export interface RsaPublicKey {
         key: string;
         padding?: number;
@@ -5264,30 +5938,31 @@
         passphrase?: string;
         padding?: number;
     }
-    export function publicEncrypt(public_key: string | RsaPublicKey, buffer: Buffer): Buffer;
-    export function privateDecrypt(private_key: string | RsaPrivateKey, buffer: Buffer): Buffer;
-    export function privateEncrypt(private_key: string | RsaPrivateKey, buffer: Buffer): Buffer;
-    export function publicDecrypt(public_key: string | RsaPublicKey, buffer: Buffer): Buffer;
+    export function publicEncrypt(public_key: string | RsaPublicKey, buffer: ArrayBufferView): Buffer;
+    export function privateDecrypt(private_key: string | RsaPrivateKey, buffer: ArrayBufferView): Buffer;
+    export function privateEncrypt(private_key: string | RsaPrivateKey, buffer: ArrayBufferView): Buffer;
+    export function publicDecrypt(public_key: string | RsaPublicKey, buffer: ArrayBufferView): Buffer;
     export function getCiphers(): string[];
     export function getCurves(): string[];
     export function getHashes(): string[];
-    export interface ECDH {
+    export class ECDH {
+        static convertKey(key: string | ArrayBufferView, curve: string, inputEncoding?: HexBase64Latin1Encoding, outputEncoding?: "latin1" | "hex" | "base64", format?: "uncompressed" | "compressed" | "hybrid"): Buffer | string;
         generateKeys(): Buffer;
-        generateKeys(encoding: HexBase64Latin1Encoding): string;
-        generateKeys(encoding: HexBase64Latin1Encoding, format: ECDHKeyFormat): string;
-        computeSecret(other_public_key: Buffer): Buffer;
+        generateKeys(encoding: HexBase64Latin1Encoding, format?: ECDHKeyFormat): string;
+        computeSecret(other_public_key: ArrayBufferView): Buffer;
         computeSecret(other_public_key: string, input_encoding: HexBase64Latin1Encoding): Buffer;
+        computeSecret(other_public_key: ArrayBufferView, output_encoding: HexBase64Latin1Encoding): string;
         computeSecret(other_public_key: string, input_encoding: HexBase64Latin1Encoding, output_encoding: HexBase64Latin1Encoding): string;
         getPrivateKey(): Buffer;
         getPrivateKey(encoding: HexBase64Latin1Encoding): string;
         getPublicKey(): Buffer;
-        getPublicKey(encoding: HexBase64Latin1Encoding): string;
-        getPublicKey(encoding: HexBase64Latin1Encoding, format: ECDHKeyFormat): string;
-        setPrivateKey(private_key: Buffer): void;
+        getPublicKey(encoding: HexBase64Latin1Encoding, format?: ECDHKeyFormat): string;
+        setPrivateKey(private_key: ArrayBufferView): void;
         setPrivateKey(private_key: string, encoding: HexBase64Latin1Encoding): void;
     }
     export function createECDH(curve_name: string): ECDH;
-    export function timingSafeEqual(a: Buffer, b: Buffer): boolean;
+    export function timingSafeEqual(a: ArrayBufferView, b: ArrayBufferView): boolean;
+    /** @deprecated since v10.0.0 */
     export var DEFAULT_ENCODING: string;
 }
 
@@ -5312,6 +5987,7 @@
         export class Readable extends Stream implements NodeJS.ReadableStream {
             readable: boolean;
             readonly readableHighWaterMark: number;
+            readonly readableLength: number;
             constructor(opts?: ReadableOptions);
             _read(size: number): void;
             read(size?: number): any;
@@ -5383,6 +6059,8 @@
             removeListener(event: "end", listener: () => void): this;
             removeListener(event: "readable", listener: () => void): this;
             removeListener(event: "error", listener: (err: Error) => void): this;
+
+            [Symbol.asyncIterator](): AsyncIterableIterator<Buffer | string>;
         }
 
         export interface WritableOptions {
@@ -5398,6 +6076,7 @@
         export class Writable extends Stream implements NodeJS.WritableStream {
             writable: boolean;
             readonly writableHighWaterMark: number;
+            readonly writableLength: number;
             constructor(opts?: WritableOptions);
             _write(chunk: any, encoding: string, callback: (err?: Error) => void): void;
             _writev?(chunks: Array<{ chunk: any, encoding: string }>, callback: (err?: Error) => void): void;
@@ -5490,6 +6169,7 @@
         export class Duplex extends Readable implements Writable {
             writable: boolean;
             readonly writableHighWaterMark: number;
+            readonly writableLength: number;
             constructor(opts?: DuplexOptions);
             _write(chunk: any, encoding: string, callback: (err?: Error) => void): void;
             _writev?(chunks: Array<{ chunk: any, encoding: string }>, callback: (err?: Error) => void): void;
@@ -5505,18 +6185,35 @@
             uncork(): void;
         }
 
+        type TransformCallback = (err?: Error, data?: any) => void;
+
         export interface TransformOptions extends DuplexOptions {
-            transform?: (chunk: string | Buffer, encoding: string, callback: Function) => any;
-            flush?: (callback: Function) => any;
+            transform?: (chunk: any, encoding: string, callback: TransformCallback) => any;
+            flush?: (callback: TransformCallback) => any;
         }
 
         export class Transform extends Duplex {
             constructor(opts?: TransformOptions);
-            _transform(chunk: any, encoding: string, callback: Function): void;
+            _transform(chunk: any, encoding: string, callback: TransformCallback): void;
             destroy(error?: Error): void;
         }
 
         export class PassThrough extends Transform { }
+
+        export function pipeline<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: T, callback?: (err: NodeJS.ErrnoException) => void): T;
+        export function pipeline<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: T, callback?: (err: NodeJS.ErrnoException) => void): T;
+        export function pipeline<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: NodeJS.ReadWriteStream, stream4: T, callback?: (err: NodeJS.ErrnoException) => void): T;
+        export function pipeline<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: NodeJS.ReadWriteStream, stream4: NodeJS.ReadWriteStream, stream5: T, callback?: (err: NodeJS.ErrnoException) => void): T;
+        export function pipeline(streams: Array<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>, callback?: (err: NodeJS.ErrnoException) => void): NodeJS.WritableStream;
+        export function pipeline(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream, ...streams: Array<NodeJS.ReadWriteStream | NodeJS.WritableStream | ((err: NodeJS.ErrnoException) => void)>): NodeJS.WritableStream;
+        export namespace pipeline {
+            export function __promisify__<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: T): Promise<void>;
+            export function __promisify__<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: T): Promise<void>;
+            export function __promisify__<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: NodeJS.ReadWriteStream, stream4: T): Promise<void>;
+            export function __promisify__<T extends NodeJS.WritableStream>(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream, stream3: NodeJS.ReadWriteStream, stream4: NodeJS.ReadWriteStream, stream5: T): Promise<void>;
+            export function __promisify__(streams: Array<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>): Promise<void>;
+            export function __promisify__(stream1: NodeJS.ReadableStream, stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream, ...streams: Array<NodeJS.ReadWriteStream | NodeJS.WritableStream>): Promise<void>;
+        }
     }
 
     export = internal;
@@ -5525,10 +6222,15 @@
 declare module "util" {
     export interface InspectOptions extends NodeJS.InspectOptions { }
     export function format(format: any, ...param: any[]): string;
+    /** @deprecated since v0.11.3 - use `console.error()` instead. */
     export function debug(string: string): void;
+    /** @deprecated since v0.11.3 - use `console.error()` instead. */
     export function error(...param: any[]): void;
+    /** @deprecated since v0.11.3 - use `console.log()` instead. */
     export function puts(...param: any[]): void;
+    /** @deprecated since v0.11.3 - use `console.log()` instead. */
     export function print(...param: any[]): void;
+    /** @deprecated since v0.11.3 - use a third party module instead. */
     export function log(string: string): void;
     export var inspect: {
         (object: any, showHidden?: boolean, depth?: number | null, color?: boolean): string;
@@ -5542,24 +6244,40 @@
         defaultOptions: InspectOptions;
         custom: symbol;
     };
+    /** @deprecated since v4.0.0 - use `Array.isArray()` instead. */
     export function isArray(object: any): object is any[];
+    /** @deprecated since v4.0.0 - use `util.types.isRegExp()` instead. */
     export function isRegExp(object: any): object is RegExp;
+    /** @deprecated since v4.0.0 - use `util.types.isDate()` instead. */
     export function isDate(object: any): object is Date;
+    /** @deprecated since v4.0.0 - use `util.types.isNativeError()` instead. */
     export function isError(object: any): object is Error;
     export function inherits(constructor: any, superConstructor: any): void;
     export function debuglog(key: string): (msg: string, ...param: any[]) => void;
+    /** @deprecated since v4.0.0 - use `typeof value === 'boolean'` instead. */
     export function isBoolean(object: any): object is boolean;
+    /** @deprecated since v4.0.0 - use `Buffer.isBuffer()` instead. */
     export function isBuffer(object: any): object is Buffer;
+    /** @deprecated since v4.0.0 - use `typeof value === 'function'` instead. */
     export function isFunction(object: any): boolean;
+    /** @deprecated since v4.0.0 - use `value === null` instead. */
     export function isNull(object: any): object is null;
+    /** @deprecated since v4.0.0 - use `value === null || value === undefined` instead. */
     export function isNullOrUndefined(object: any): object is null | undefined;
+    /** @deprecated since v4.0.0 - use `typeof value === 'number'` instead. */
     export function isNumber(object: any): object is number;
+    /** @deprecated since v4.0.0 - use `value !== null && typeof value === 'object'` instead. */
     export function isObject(object: any): boolean;
+    /** @deprecated since v4.0.0 - use `(typeof value !== 'object' && typeof value !== 'function') || value === null` instead. */
     export function isPrimitive(object: any): boolean;
+    /** @deprecated since v4.0.0 - use `typeof value === 'string'` instead. */
     export function isString(object: any): object is string;
+    /** @deprecated since v4.0.0 - use `typeof value === 'symbol'` instead. */
     export function isSymbol(object: any): object is symbol;
+    /** @deprecated since v4.0.0 - use `value === undefined` instead. */
     export function isUndefined(object: any): object is undefined;
     export function deprecate<T extends Function>(fn: T, message: string): T;
+    export function isDeepStrictEqual(val1: any, val2: any): boolean;
 
     export interface CustomPromisify<TCustom extends Function> extends Function {
         __promisify__: TCustom;
@@ -5598,6 +6316,44 @@
         const custom: symbol;
     }
 
+    export namespace types {
+        export function isAnyArrayBuffer(object: any): boolean;
+        export function isArgumentsObject(object: any): object is IArguments;
+        export function isArrayBuffer(object: any): object is ArrayBuffer;
+        export function isAsyncFunction(object: any): boolean;
+        export function isBooleanObject(object: any): object is Boolean;
+        export function isDataView(object: any): object is DataView;
+        export function isDate(object: any): object is Date;
+        export function isExternal(object: any): boolean;
+        export function isFloat32Array(object: any): object is Float32Array;
+        export function isFloat64Array(object: any): object is Float64Array;
+        export function isGeneratorFunction(object: any): boolean;
+        export function isGeneratorObject(object: any): boolean;
+        export function isInt8Array(object: any): object is Int8Array;
+        export function isInt16Array(object: any): object is Int16Array;
+        export function isInt32Array(object: any): object is Int32Array;
+        export function isMap(object: any): boolean;
+        export function isMapIterator(object: any): boolean;
+        export function isNativeError(object: any): object is Error;
+        export function isNumberObject(object: any): object is Number;
+        export function isPromise(object: any): boolean;
+        export function isProxy(object: any): boolean;
+        export function isRegExp(object: any): object is RegExp;
+        export function isSet(object: any): boolean;
+        export function isSetIterator(object: any): boolean;
+        export function isSharedArrayBuffer(object: any): boolean;
+        export function isStringObject(object: any): boolean;
+        export function isSymbolObject(object: any): boolean;
+        export function isTypedArray(object: any): object is Uint8Array | Uint8ClampedArray | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;
+        export function isUint8Array(object: any): object is Uint8Array;
+        export function isUint8ClampedArray(object: any): object is Uint8ClampedArray;
+        export function isUint16Array(object: any): object is Uint16Array;
+        export function isUint32Array(object: any): object is Uint32Array;
+        export function isWeakMap(object: any): boolean;
+        export function isWeakSet(object: any): boolean;
+        export function isWebAssemblyCompiledModule(object: any): boolean;
+    }
+
     export class TextDecoder {
         readonly encoding: string;
         readonly fatal: boolean;
@@ -5649,11 +6405,16 @@
         }
 
         export function fail(message: string): never;
+        /** @deprecated since v10.0.0 */
         export function fail(actual: any, expected: any, message?: string, operator?: string): never;
         export function ok(value: any, message?: string): void;
+        /** @deprecated use strictEqual() */
         export function equal(actual: any, expected: any, message?: string): void;
+        /** @deprecated use notStrictEqual() */
         export function notEqual(actual: any, expected: any, message?: string): void;
+        /** @deprecated use deepStrictEqual() */
         export function deepEqual(actual: any, expected: any, message?: string): void;
+        /** @deprecated use notDeepStrictEqual() */
         export function notDeepEqual(acutal: any, expected: any, message?: string): void;
         export function strictEqual(actual: any, expected: any, message?: string): void;
         export function notStrictEqual(actual: any, expected: any, message?: string): void;
@@ -5671,6 +6432,13 @@
         export function doesNotThrow(block: Function, error: (err: any) => boolean, message?: string): void;
 
         export function ifError(value: any): void;
+
+        export function rejects(block: Function | Promise<any>, message?: string): Promise<void>;
+        export function rejects(block: Function | Promise<any>, error: Function | RegExp | Object | Error, message?: string): Promise<void>;
+        export function doesNotReject(block: Function | Promise<any>, message?: string): Promise<void>;
+        export function doesNotReject(block: Function | Promise<any>, error: Function | RegExp | Object | Error, message?: string): Promise<void>;
+
+        export var strict: typeof internal;
     }
 
     export = internal;
@@ -5701,7 +6469,6 @@
         remove(emitter: events.EventEmitter): void;
         bind(cb: (err: Error, data: any) => any): any;
         intercept(cb: (data: any) => any): any;
-        dispose(): void;
         members: any[];
         enter(): void;
         exit(): void;
@@ -5955,6 +6722,9 @@
     export var R_OK: number;
     export var W_OK: number;
     export var X_OK: number;
+    export var COPYFILE_EXCL: number;
+    export var COPYFILE_FICLONE: number;
+    export var COPYFILE_FICLONE_FORCE: number;
     export var UV_UDP_REUSEADDR: number;
     export var SIGQUIT: number;
     export var SIGTRAP: number;
@@ -5995,7 +6765,6 @@
     export = process;
 }
 
-// tslint:disable-next-line:no-declare-current-package
 declare module "v8" {
     interface HeapSpaceInfo {
         space_name: string;
@@ -6054,15 +6823,11 @@
      * Returns the asyncId of the current execution context.
      */
     export function executionAsyncId(): number;
-    /// @deprecated - replaced by executionAsyncId()
-    export function currentId(): number;
 
     /**
      * Returns the ID of the resource responsible for calling the callback that is currently being executed.
      */
     export function triggerAsyncId(): number;
-    /// @deprecated - replaced by triggerAsyncId()
-    export function triggerId(): number;
 
     export interface HookCallbacks {
         /**
@@ -6149,21 +6914,36 @@
          * @param type The type of async event.
          * @param triggerAsyncId The ID of the execution context that created
          *   this async event (default: `executionAsyncId()`), or an
-         *   AsyncResourceOptions object (since 8.10)
+         *   AsyncResourceOptions object (since 9.3)
          */
         constructor(type: string, triggerAsyncId?: number | AsyncResourceOptions);
 
         /**
          * Call AsyncHooks before callbacks.
+         * @deprecated since 9.6 - Use asyncResource.runInAsyncScope() instead.
          */
         emitBefore(): void;
 
         /**
-         * Call AsyncHooks after callbacks
+         * Call AsyncHooks after callbacks.
+         * @deprecated since 9.6 - Use asyncResource.runInAsyncScope() instead.
          */
         emitAfter(): void;
 
         /**
+         * Call the provided function with the provided arguments in the
+         * execution context of the async resource. This will establish the
+         * context, trigger the AsyncHooks before callbacks, call the function,
+         * trigger the AsyncHooks after callbacks, and then restore the original
+         * execution context.
+         * @param fn The function to call in the execution context of this
+         *   async resource.
+         * @param thisArg The receiver to be used for the function call.
+         * @param args Optional arguments to pass to the function.
+         */
+        runInAsyncScope<This, Result>(fn: (this: This, ...args: any[]) => Result, thisArg?: This, ...args: any[]): Result;
+
+        /**
          * Call AsyncHooks destroy callbacks.
          */
         emitDestroy(): void;
@@ -6188,8 +6968,19 @@
     import * as tls from "tls";
     import * as url from "url";
 
-    import { IncomingHttpHeaders, OutgoingHttpHeaders } from "http";
-    export { IncomingHttpHeaders, OutgoingHttpHeaders } from "http";
+    import { IncomingHttpHeaders as Http1IncomingHttpHeaders, OutgoingHttpHeaders } from "http";
+    export { OutgoingHttpHeaders } from "http";
+
+    export interface IncomingHttpStatusHeader {
+        ":status"?: number;
+    }
+
+    export interface IncomingHttpHeaders extends Http1IncomingHttpHeaders {
+        ":path"?: string;
+        ":method"?: string;
+        ":authority"?: string;
+        ":scheme"?: string;
+    }
 
     // Http2Stream
 
@@ -6232,15 +7023,12 @@
 
     export interface Http2Stream extends stream.Duplex {
         readonly aborted: boolean;
+        close(code?: number, callback?: () => void): void;
+        readonly closed: boolean;
         readonly destroyed: boolean;
+        readonly pending: boolean;
         priority(options: StreamPriorityOptions): void;
         readonly rstCode: number;
-        rstStream(code: number): void;
-        rstWithNoError(): void;
-        rstWithProtocolError(): void;
-        rstWithCancel(): void;
-        rstWithRefuse(): void;
-        rstWithInternalError(): void;
         readonly session: Http2Session;
         setTimeout(msecs: number, callback?: () => void): void;
         readonly state: StreamState;
@@ -6338,42 +7126,42 @@
 
     export interface ClientHttp2Stream extends Http2Stream {
         addListener(event: string, listener: (...args: any[]) => void): this;
-        addListener(event: "headers", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        addListener(event: "headers", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
         addListener(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
-        addListener(event: "response", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        addListener(event: "response", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         emit(event: string | symbol, ...args: any[]): boolean;
-        emit(event: "headers", headers: IncomingHttpHeaders, flags: number): boolean;
+        emit(event: "headers", headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number): boolean;
         emit(event: "push", headers: IncomingHttpHeaders, flags: number): boolean;
-        emit(event: "response", headers: IncomingHttpHeaders, flags: number): boolean;
+        emit(event: "response", headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number): boolean;
 
         on(event: string, listener: (...args: any[]) => void): this;
-        on(event: "headers", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        on(event: "headers", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
         on(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
-        on(event: "response", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        on(event: "response", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         once(event: string, listener: (...args: any[]) => void): this;
-        once(event: "headers", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        once(event: "headers", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
         once(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
-        once(event: "response", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        once(event: "response", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         prependListener(event: string, listener: (...args: any[]) => void): this;
-        prependListener(event: "headers", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        prependListener(event: "headers", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
         prependListener(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
-        prependListener(event: "response", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        prependListener(event: "response", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         prependOnceListener(event: string, listener: (...args: any[]) => void): this;
-        prependOnceListener(event: "headers", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        prependOnceListener(event: "headers", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
         prependOnceListener(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
-        prependOnceListener(event: "response", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;
+        prependOnceListener(event: "response", listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
     }
 
     export interface ServerHttp2Stream extends Http2Stream {
         additionalHeaders(headers: OutgoingHttpHeaders): void;
         readonly headersSent: boolean;
         readonly pushAllowed: boolean;
-        pushStream(headers: OutgoingHttpHeaders, callback?: (pushStream: ServerHttp2Stream) => void): void;
-        pushStream(headers: OutgoingHttpHeaders, options?: StreamPriorityOptions, callback?: (pushStream: ServerHttp2Stream) => void): void;
+        pushStream(headers: OutgoingHttpHeaders, callback?: (err: Error | null, pushStream: ServerHttp2Stream, headers: OutgoingHttpHeaders) => void): void;
+        pushStream(headers: OutgoingHttpHeaders, options?: StreamPriorityOptions, callback?: (err: Error | null, pushStream: ServerHttp2Stream, headers: OutgoingHttpHeaders) => void): void;
         respond(headers?: OutgoingHttpHeaders, options?: ServerStreamResponseOptions): void;
         respondWithFD(fd: number, headers?: OutgoingHttpHeaders, options?: ServerStreamFileResponseOptions): void;
         respondWithFile(path: string, headers?: OutgoingHttpHeaders, options?: ServerStreamFileResponseOptionsWithError): void;
@@ -6398,13 +7186,6 @@
         getTrailers?: (trailers: OutgoingHttpHeaders, flags: number) => void;
     }
 
-    export interface SessionShutdownOptions {
-        graceful?: boolean;
-        errorCode?: number;
-        lastStreamID?: number;
-        opaqueData?: Buffer | Uint8Array;
-    }
-
     export interface SessionState {
         effectiveLocalWindowSize?: number;
         effectiveRecvDataLength?: number;
@@ -6418,20 +7199,26 @@
     }
 
     export interface Http2Session extends events.EventEmitter {
-        destroy(): void;
+        readonly alpnProtocol?: string;
+        close(callback?: () => void): void;
+        readonly closed: boolean;
+        destroy(error?: Error, code?: number): void;
         readonly destroyed: boolean;
+        readonly encrypted?: boolean;
+        goaway(code?: number, lastStreamID?: number, opaqueData?: Buffer | DataView /*| TypedArray*/): void;
         readonly localSettings: Settings;
+        readonly originSet?: string[];
         readonly pendingSettingsAck: boolean;
+        ref(): void;
         readonly remoteSettings: Settings;
         rstStream(stream: Http2Stream, code?: number): void;
         setTimeout(msecs: number, callback?: () => void): void;
-        shutdown(callback?: () => void): void;
-        shutdown(options: SessionShutdownOptions, callback?: () => void): void;
         readonly socket: net.Socket | tls.TLSSocket;
         readonly state: SessionState;
         priority(stream: Http2Stream, options: StreamPriorityOptions): void;
         settings(settings: Settings): void;
         readonly type: number;
+        unref(): void;
 
         addListener(event: string, listener: (...args: any[]) => void): this;
         addListener(event: "close", listener: () => void): this;
@@ -6440,7 +7227,6 @@
         addListener(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData: Buffer) => void): this;
         addListener(event: "localSettings", listener: (settings: Settings) => void): this;
         addListener(event: "remoteSettings", listener: (settings: Settings) => void): this;
-        addListener(event: "socketError", listener: (err: Error) => void): this;
         addListener(event: "timeout", listener: () => void): this;
 
         emit(event: string | symbol, ...args: any[]): boolean;
@@ -6450,7 +7236,6 @@
         emit(event: "goaway", errorCode: number, lastStreamID: number, opaqueData: Buffer): boolean;
         emit(event: "localSettings", settings: Settings): boolean;
         emit(event: "remoteSettings", settings: Settings): boolean;
-        emit(event: "socketError", err: Error): boolean;
         emit(event: "timeout"): boolean;
 
         on(event: string, listener: (...args: any[]) => void): this;
@@ -6460,7 +7245,6 @@
         on(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData: Buffer) => void): this;
         on(event: "localSettings", listener: (settings: Settings) => void): this;
         on(event: "remoteSettings", listener: (settings: Settings) => void): this;
-        on(event: "socketError", listener: (err: Error) => void): this;
         on(event: "timeout", listener: () => void): this;
 
         once(event: string, listener: (...args: any[]) => void): this;
@@ -6470,7 +7254,6 @@
         once(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData: Buffer) => void): this;
         once(event: "localSettings", listener: (settings: Settings) => void): this;
         once(event: "remoteSettings", listener: (settings: Settings) => void): this;
-        once(event: "socketError", listener: (err: Error) => void): this;
         once(event: "timeout", listener: () => void): this;
 
         prependListener(event: string, listener: (...args: any[]) => void): this;
@@ -6480,7 +7263,6 @@
         prependListener(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData: Buffer) => void): this;
         prependListener(event: "localSettings", listener: (settings: Settings) => void): this;
         prependListener(event: "remoteSettings", listener: (settings: Settings) => void): this;
-        prependListener(event: "socketError", listener: (err: Error) => void): this;
         prependListener(event: "timeout", listener: () => void): this;
 
         prependOnceListener(event: string, listener: (...args: any[]) => void): this;
@@ -6490,7 +7272,6 @@
         prependOnceListener(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData: Buffer) => void): this;
         prependOnceListener(event: "localSettings", listener: (settings: Settings) => void): this;
         prependOnceListener(event: "remoteSettings", listener: (settings: Settings) => void): this;
-        prependOnceListener(event: "socketError", listener: (err: Error) => void): this;
         prependOnceListener(event: "timeout", listener: () => void): this;
     }
 
@@ -6498,31 +7279,42 @@
         request(headers?: OutgoingHttpHeaders, options?: ClientSessionRequestOptions): ClientHttp2Stream;
 
         addListener(event: string, listener: (...args: any[]) => void): this;
+        addListener(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;
         addListener(event: "connect", listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;
-        addListener(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
+        addListener(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         emit(event: string | symbol, ...args: any[]): boolean;
+        emit(event: "altsvc", alt: string, origin: string, stream: number): boolean;
         emit(event: "connect", session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;
-        emit(event: "stream", stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;
+        emit(event: "stream", stream: ClientHttp2Stream, headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number): boolean;
 
         on(event: string, listener: (...args: any[]) => void): this;
+        on(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;
         on(event: "connect", listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;
-        on(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
+        on(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         once(event: string, listener: (...args: any[]) => void): this;
+        once(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;
         once(event: "connect", listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;
-        once(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
+        once(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         prependListener(event: string, listener: (...args: any[]) => void): this;
+        prependListener(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;
         prependListener(event: "connect", listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;
-        prependListener(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
+        prependListener(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
 
         prependOnceListener(event: string, listener: (...args: any[]) => void): this;
+        prependOnceListener(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;
         prependOnceListener(event: "connect", listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;
-        prependOnceListener(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
+        prependOnceListener(event: "stream", listener: (stream: ClientHttp2Stream, headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void): this;
+    }
+
+    export interface AlternativeServiceOptions {
+        origin: number | string | url.URL;
     }
 
     export interface ServerHttp2Session extends Http2Session {
+        altsvc(alt: string, originOrStream: number | string | url.URL | AlternativeServiceOptions): void;
         readonly server: Http2Server | Http2SecureServer;
 
         addListener(event: string, listener: (...args: any[]) => void): this;
@@ -6578,93 +7370,93 @@
 
     export interface Http2Server extends net.Server {
         addListener(event: string, listener: (...args: any[]) => void): this;
+        addListener(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         addListener(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         addListener(event: "sessionError", listener: (err: Error) => void): this;
-        addListener(event: "socketError", listener: (err: Error) => void): this;
         addListener(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         addListener(event: "timeout", listener: () => void): this;
 
         emit(event: string | symbol, ...args: any[]): boolean;
+        emit(event: "checkContinue", request: Http2ServerRequest, response: Http2ServerResponse): boolean;
         emit(event: "request", request: Http2ServerRequest, response: Http2ServerResponse): boolean;
         emit(event: "sessionError", err: Error): boolean;
-        emit(event: "socketError", err: Error): boolean;
         emit(event: "stream", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;
         emit(event: "timeout"): boolean;
 
         on(event: string, listener: (...args: any[]) => void): this;
+        on(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         on(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         on(event: "sessionError", listener: (err: Error) => void): this;
-        on(event: "socketError", listener: (err: Error) => void): this;
         on(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         on(event: "timeout", listener: () => void): this;
 
         once(event: string, listener: (...args: any[]) => void): this;
+        once(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         once(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         once(event: "sessionError", listener: (err: Error) => void): this;
-        once(event: "socketError", listener: (err: Error) => void): this;
         once(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         once(event: "timeout", listener: () => void): this;
 
         prependListener(event: string, listener: (...args: any[]) => void): this;
+        prependListener(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependListener(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependListener(event: "sessionError", listener: (err: Error) => void): this;
-        prependListener(event: "socketError", listener: (err: Error) => void): this;
         prependListener(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         prependListener(event: "timeout", listener: () => void): this;
 
         prependOnceListener(event: string, listener: (...args: any[]) => void): this;
+        prependOnceListener(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependOnceListener(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependOnceListener(event: "sessionError", listener: (err: Error) => void): this;
-        prependOnceListener(event: "socketError", listener: (err: Error) => void): this;
         prependOnceListener(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         prependOnceListener(event: "timeout", listener: () => void): this;
     }
 
     export interface Http2SecureServer extends tls.Server {
         addListener(event: string, listener: (...args: any[]) => void): this;
+        addListener(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         addListener(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         addListener(event: "sessionError", listener: (err: Error) => void): this;
-        addListener(event: "socketError", listener: (err: Error) => void): this;
         addListener(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         addListener(event: "timeout", listener: () => void): this;
         addListener(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;
 
         emit(event: string | symbol, ...args: any[]): boolean;
+        emit(event: "checkContinue", request: Http2ServerRequest, response: Http2ServerResponse): boolean;
         emit(event: "request", request: Http2ServerRequest, response: Http2ServerResponse): boolean;
         emit(event: "sessionError", err: Error): boolean;
-        emit(event: "socketError", err: Error): boolean;
         emit(event: "stream", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;
         emit(event: "timeout"): boolean;
         emit(event: "unknownProtocol", socket: tls.TLSSocket): boolean;
 
         on(event: string, listener: (...args: any[]) => void): this;
+        on(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         on(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         on(event: "sessionError", listener: (err: Error) => void): this;
-        on(event: "socketError", listener: (err: Error) => void): this;
         on(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         on(event: "timeout", listener: () => void): this;
         on(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;
 
         once(event: string, listener: (...args: any[]) => void): this;
+        once(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         once(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         once(event: "sessionError", listener: (err: Error) => void): this;
-        once(event: "socketError", listener: (err: Error) => void): this;
         once(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         once(event: "timeout", listener: () => void): this;
         once(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;
 
         prependListener(event: string, listener: (...args: any[]) => void): this;
+        prependListener(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependListener(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependListener(event: "sessionError", listener: (err: Error) => void): this;
-        prependListener(event: "socketError", listener: (err: Error) => void): this;
         prependListener(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         prependListener(event: "timeout", listener: () => void): this;
         prependListener(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;
 
         prependOnceListener(event: string, listener: (...args: any[]) => void): this;
+        prependOnceListener(event: "checkContinue", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependOnceListener(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;
         prependOnceListener(event: "sessionError", listener: (err: Error) => void): this;
-        prependOnceListener(event: "socketError", listener: (err: Error) => void): this;
         prependOnceListener(event: "stream", listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void): this;
         prependOnceListener(event: "timeout", listener: () => void): this;
         prependOnceListener(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;
@@ -6999,6 +7791,8 @@
 }
 
 declare module "perf_hooks" {
+    import { AsyncResource } from "async_hooks";
+
     export interface PerformanceEntry {
         /**
          * The total number of milliseconds elapsed for this entry.
@@ -7211,7 +8005,7 @@
 
     export type PerformanceObserverCallback = (list: PerformanceObserverEntryList, observer: PerformanceObserver) => void;
 
-    export class PerformanceObserver {
+    export class PerformanceObserver extends AsyncResource {
         constructor(callback: PerformanceObserverCallback);
 
         /**
merged
  result 100644 fb4dc0deba536f409a3c68f8bfac222d1d34155b src/vs/base/browser/dom.ts
  our    100644 55d7a57ba6a391c964d03038ed5c842483b5d1f7 src/vs/base/browser/dom.ts
@@ -812,7 +812,6 @@
 export const EventType = {
 	// Mouse
 	CLICK: 'click',
-	AUXCLICK: 'auxclick', // >= Chrome 56
 	DBLCLICK: 'dblclick',
 	MOUSE_UP: 'mouseup',
 	MOUSE_DOWN: 'mousedown',
merged
  result 100644 2ffbf6ba29774ebfa3b63f0fa4f0a512d0faf614 src/vs/base/node/extfs.ts
  our    100644 b52c4e36f0d50b64738354bf296dc8f1052351ff src/vs/base/node/extfs.ts
@@ -388,7 +388,7 @@
 			if (error) {
 				if (isOpen) {
 					writer.once('close', () => callback(error));
-					writer.close();
+					writer.destroy();
 				} else {
 					callback(error);
 				}
@@ -448,10 +448,10 @@
 					canFlush = false;
 				}
 
-				writer.close();
+				writer.destroy();
 			});
 		} else {
-			writer.close();
+			writer.destroy();
 		}
 	});
 
merged
  result 100644 9c495f88edf6673f2521ca37bcfbc6caaca91dbc src/vs/base/node/ps.ts
  our    100644 fc8c25a115347ff7439f36cde991f728a809fc7b src/vs/base/node/ps.ts
@@ -60,7 +60,7 @@
 
 		function findName(cmd: string): string {
 
-			const RENDERER_PROCESS_HINT = /--disable-blink-features=Auxclick/;
+			const SHARED_PROCESS_HINT = /--background-color=#ff0000/;
 			const WINDOWS_WATCHER_HINT = /\\watcher\\win32\\CodeHelper\.exe/;
 			const WINDOWS_CRASH_REPORTER = /--crashes-directory/;
 			const WINDOWS_PTY = /\\pipe\\winpty-control/;
@@ -91,7 +91,7 @@
 			let matches = TYPE.exec(cmd);
 			if (matches && matches.length === 2) {
 				if (matches[1] === 'renderer') {
-					if (!RENDERER_PROCESS_HINT.exec(cmd)) {
+					if (SHARED_PROCESS_HINT.exec(cmd)) {
 						return 'shared-process';
 					}
 
merged
  result 100644 ac08618b9bb7e15451fdd9f183e626491c55e168 src/vs/base/node/zip.ts
  our    100644 652fb21c73bc138f81a5df22570bbfe8f60967cd src/vs/base/node/zip.ts
@@ -86,7 +86,7 @@
 		stream.pipe(istream);
 	}, () => {
 		if (istream) {
-			istream.close();
+			istream.destroy();
 		}
 	}));
 }
merged
  result 100644 c03407a9413d14bb5b15a31d84d556cad8553849 src/vs/base/parts/tree/browser/treeView.ts
  our    100644 6b1e97a1a7f247863b6e4867e10351a2ef228606 src/vs/base/parts/tree/browser/treeView.ts
@@ -553,7 +553,6 @@
 		this.viewListeners.push(DOM.addDisposableListener(this.domNode, 'mousedown', (e) => this.onMouseDown(e)));
 		this.viewListeners.push(DOM.addDisposableListener(this.domNode, 'mouseup', (e) => this.onMouseUp(e)));
 		this.viewListeners.push(DOM.addDisposableListener(this.wrapper, 'click', (e) => this.onClick(e)));
-		this.viewListeners.push(DOM.addDisposableListener(this.wrapper, 'auxclick', (e) => this.onClick(e))); // >= Chrome 56
 		this.viewListeners.push(DOM.addDisposableListener(this.domNode, 'contextmenu', (e) => this.onContextMenu(e)));
 		this.viewListeners.push(DOM.addDisposableListener(this.wrapper, Touch.EventType.Tap, (e) => this.onTap(e)));
 		this.viewListeners.push(DOM.addDisposableListener(this.wrapper, Touch.EventType.Change, (e) => this.onTouchChange(e)));
merged
  result 100644 5b2e51b8bba66fa100e81d25f78f5b8c62219282 src/vs/code/electron-main/auth.ts
  our    100644 2ac42d5406a4a851e749e5b9fff829d003bccb2a src/vs/code/electron-main/auth.ts
@@ -56,10 +56,7 @@
 			width: 450,
 			height: 220,
 			show: true,
-			title: 'VS Code',
-			webPreferences: {
-				disableBlinkFeatures: 'Auxclick'
-			}
+			title: 'VS Code'
 		};
 
 		const focusedWindow = this.windowsMainService.getFocusedWindow();
merged
  result 100644 d169c5d21f0307445ab4c1f123bd090695d18a88 src/vs/code/electron-main/sharedProcess.ts
  our    100644 7f0a1fca2b57c3f32e59c797f508e511672a725e src/vs/code/electron-main/sharedProcess.ts
@@ -37,7 +37,8 @@
 				images: false,
 				webaudio: false,
 				webgl: false
-			}
+			},
+			backgroundColor: '#ff0000' // do NOT change, allows us to identify this window as shared-process in the process explorer
 		});
 		const config = assign({
 			appRoot: this.environmentService.appRoot,
changed in both
  base   100644 9f7403ac236c43ab71e4d2ac52bc9c8e93a9f045 src/vs/code/electron-main/window.ts
  our    100644 98a4328213e146b214e8da866ab92dc7f9c449a9 src/vs/code/electron-main/window.ts
  their  100644 399ca44daf628f7539f9d9823bcc7ae592e889fd src/vs/code/electron-main/window.ts
@@ -140,12 +140,16 @@
 			show: !isFullscreenOrMaximized,
 			title: product.nameLong,
 			webPreferences: {
+<<<<<<< .our
 				// By default if Code is in the background, intervals and timeouts get throttled, so we
 				// want to enforce that Code stays in the foreground. This triggers a disable_hidden_
 				// flag that Electron provides via patch:
 				// https://github.com/electron/libchromiumcontent/blob/master/patches/common/chromium/disable_hidden.patch
 				'backgroundThrottling': false,
 				disableBlinkFeatures: 'Auxclick' // disable auxclick events (see https://developers.google.com/web/updates/2016/10/auxclick)
+=======
+				'backgroundThrottling': false, // by default if Code is in the background, intervals and timeouts get throttled,
+>>>>>>> .their
 			}
 		};
 
merged
  result 100644 9fad9a52fe492d14925a568c83966ad0509a8d91 src/vs/editor/browser/services/codeEditorServiceImpl.ts
  our    100644 aec6b1e4030c7d2800b7bf274e616db80c8ee6a0 src/vs/editor/browser/services/codeEditorServiceImpl.ts
@@ -212,7 +212,7 @@
 
 const _CSS_MAP: { [prop: string]: string; } = {
 	color: 'color:{0} !important;',
-	opacity: 'opacity:{0}; will-change: opacity;', // TODO@Ben: 'will-change: opacity' is a workaround for https://github.com/Microsoft/vscode/issues/52196
+	opacity: 'opacity:{0};',
 	backgroundColor: 'background-color:{0};',
 
 	outline: 'outline:{0};',
merged
  result 100644 84fa5689b5a741654da378ca680f5d95856e4415 src/vs/editor/browser/widget/codeEditorWidget.ts
  our    100644 6f588e16445e2740e0f36730ce132f1ff91e44d8 src/vs/editor/browser/widget/codeEditorWidget.ts
@@ -1831,7 +1831,7 @@
 
 	const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);
 	if (unnecessaryForeground) {
-		collector.addRule(`.${SHOW_UNUSED_ENABLED_CLASS} .monaco-editor .${ClassName.EditorUnnecessaryInlineDecoration} { opacity: ${unnecessaryForeground.rgba.a}; will-change: opacity; }`); // TODO@Ben: 'will-change: opacity' is a workaround for https://github.com/Microsoft/vscode/issues/52196
+		collector.addRule(`.${SHOW_UNUSED_ENABLED_CLASS} .monaco-editor .${ClassName.EditorUnnecessaryInlineDecoration} { opacity: ${unnecessaryForeground.rgba.a}; }`);
 	}
 
 	const unnecessaryBorder = theme.getColor(editorUnnecessaryCodeBorder);
merged
  result 100644 bc0c32ee323e92adad31c8a7ab4e8c7aa9259b0d src/vs/platform/issue/electron-main/issueService.ts
  our    100644 cebb4e612373900c38659291fafa9b78f51e1be1 src/vs/platform/issue/electron-main/issueService.ts
@@ -61,10 +61,7 @@
 				x: position.x,
 				y: position.y,
 				title: localize('issueReporter', "Issue Reporter"),
-				backgroundColor: data.styles.backgroundColor || DEFAULT_BACKGROUND_COLOR,
-				webPreferences: {
-					disableBlinkFeatures: 'Auxclick'
-				}
+				backgroundColor: data.styles.backgroundColor || DEFAULT_BACKGROUND_COLOR
 			});
 
 			this._issueWindow.setMenuBarVisibility(false); // workaround for now, until a menu is implemented
@@ -111,10 +108,7 @@
 				x: position.x,
 				y: position.y,
 				backgroundColor: data.styles.backgroundColor,
-				title: localize('processExplorer', "Process Explorer"),
-				webPreferences: {
-					disableBlinkFeatures: 'Auxclick'
-				}
+				title: localize('processExplorer', "Process Explorer")
 			});
 
 			this._processExplorerWindow.setMenuBarVisibility(false);
merged
  result 100644 7c98f4596173b533496835e7244bf603124ab143 src/vs/workbench/browser/parts/activitybar/activitybarPart.ts
  our    100644 52d0ff4ccf36e18a9e6bb376e85eb8574851026e src/vs/workbench/browser/parts/activitybar/activitybarPart.ts
@@ -19,14 +19,11 @@
 import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
 import { IDisposable, toDisposable } from 'vs/base/common/lifecycle';
 import { ToggleActivityBarVisibilityAction } from 'vs/workbench/browser/actions/toggleActivityBarVisibility';
-import { IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';
+import { IThemeService } from 'vs/platform/theme/common/themeService';
 import { ACTIVITY_BAR_BACKGROUND, ACTIVITY_BAR_BORDER, ACTIVITY_BAR_FOREGROUND, ACTIVITY_BAR_BADGE_BACKGROUND, ACTIVITY_BAR_BADGE_FOREGROUND, ACTIVITY_BAR_DRAG_AND_DROP_BACKGROUND } from 'vs/workbench/common/theme';
 import { contrastBorder } from 'vs/platform/theme/common/colorRegistry';
 import { CompositeBar } from 'vs/workbench/browser/parts/compositeBar';
-import { isMacintosh } from 'vs/base/common/platform';
-import { ILifecycleService, LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';
-import { scheduleAtNextAnimationFrame, Dimension, addClass } from 'vs/base/browser/dom';
-import { Color } from 'vs/base/common/color';
+import { Dimension, addClass } from 'vs/base/browser/dom';
 import { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';
 import { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';
 import URI from 'vs/base/common/uri';
@@ -65,7 +62,6 @@
 		@IInstantiationService private instantiationService: IInstantiationService,
 		@IPartService private partService: IPartService,
 		@IThemeService themeService: IThemeService,
-		@ILifecycleService private lifecycleService: ILifecycleService,
 		@IStorageService private storageService: IStorageService,
 		@IExtensionService private extensionService: IExtensionService
 	) {
@@ -169,27 +165,6 @@
 
 		this.createGlobalActivityActionBar(globalActivities);
 
-		// TODO@Ben: workaround for https://github.com/Microsoft/vscode/issues/45700
-		// It looks like there are rendering glitches on macOS with Chrome 61 when
-		// using --webkit-mask with a background color that is different from the image
-		// The workaround is to promote the element onto its own drawing layer. We do
-		// this only after the workbench has loaded because otherwise there is ugly flicker.
-		if (isMacintosh) {
-			this.lifecycleService.when(LifecyclePhase.Running).then(() => {
-				scheduleAtNextAnimationFrame(() => { // another delay...
-					scheduleAtNextAnimationFrame(() => { // ...to prevent more flickering on startup
-						registerThemingParticipant((theme, collector) => {
-							const activityBarForeground = theme.getColor(ACTIVITY_BAR_FOREGROUND);
-							if (activityBarForeground && !activityBarForeground.equals(Color.white)) {
-								// only apply this workaround if the color is different from the image one (white)
-								collector.addRule('.monaco-workbench .activitybar > .content .monaco-action-bar .action-label { will-change: transform; }');
-							}
-						});
-					});
-				});
-			});
-		}
-
 		return content;
 	}
 
merged
  result 100644 022637f2a1997508511972865d5bec0d1f43080a src/vs/workbench/electron-browser/bootstrap/index.js
  our    100644 8cbef8ef0a0c1d16b84ce10ca0692af3015de2e2 src/vs/workbench/electron-browser/bootstrap/index.js
@@ -224,9 +224,8 @@
 	// Correctly inherit the parent's environment
 	assign(process.env, configuration.userEnv);
 
-	// disable pinch zoom & apply zoom level early to avoid glitches
+	// Apply zoom level early to avoid glitches
 	const zoomLevel = configuration.zoomLevel;
-	webFrame.setVisualZoomLevelLimits(1, 1);
 	if (typeof zoomLevel === 'number' && zoomLevel !== 0) {
 		webFrame.setZoomLevel(zoomLevel);
 	}
merged
  result 100644 94ee33d0ad863d645401c343ebafe18b4f99abc3 src/vs/workbench/parts/webview/electron-browser/webviewElement.ts
  our    100644 a82c36d8793f3379277319554df1f2ce4b3daa29 src/vs/workbench/parts/webview/electron-browser/webviewElement.ts
@@ -49,9 +49,6 @@
 		this._webview = document.createElement('webview');
 		this._webview.setAttribute('partition', this._options.allowSvgs ? 'webview' : `webview${Date.now()}`);
 
-		// disable auxclick events (see https://developers.google.com/web/updates/2016/10/auxclick)
-		this._webview.setAttribute('disableblinkfeatures', 'Auxclick');
-
 		this._webview.setAttribute('disableguestresize', '');
 		this._webview.setAttribute('webpreferences', 'contextIsolation=yes');
 
merged
  result 100644 1e8e64dde981477dbce16421044e89dd9537684c test/smoke/package.json
  our    100644 34cb60f37eea12ad56dcd91bda59439f17bd2961 test/smoke/package.json
@@ -22,7 +22,7 @@
     "@types/webdriverio": "4.6.1",
     "concurrently": "^3.5.1",
     "cpx": "^1.5.0",
-    "electron": "^2.0.6",
+    "electron": "3.0.0-beta.5",
     "htmlparser2": "^3.9.2",
     "mkdirp": "^0.5.1",
     "mocha": "^5.2.0",
merged
  result 100644 19d8e2d5de6e3091a140ee8b63fd45400fbca344 test/smoke/yarn.lock
  our    100644 57ac002dedb03738167be9a4fbb49ef7aca531db test/smoke/yarn.lock
@@ -479,42 +479,42 @@
   dependencies:
     jsbn "~0.1.0"
 
-electron-download@^3.0.1:
-  version "3.3.0"
-  resolved "https://registry.yarnpkg.com/electron-download/-/electron-download-3.3.0.tgz#2cfd54d6966c019c4d49ad65fbe65cc9cdef68c8"
+electron-download@^4.1.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/electron-download/-/electron-download-4.1.0.tgz#bf932c746f2f87ffcc09d1dd472f2ff6b9187845"
   dependencies:
     debug "^2.2.0"
-    fs-extra "^0.30.0"
-    home-path "^1.0.1"
+    env-paths "^1.0.0"
+    fs-extra "^2.0.0"
     minimist "^1.2.0"
     nugget "^2.0.0"
-    path-exists "^2.1.0"
+    path-exists "^3.0.0"
     rc "^1.1.2"
     semver "^5.3.0"
-    sumchecker "^1.2.0"
+    sumchecker "^2.0.1"
 
-electron@^2.0.6:
-  version "2.0.6"
-  resolved "https://registry.yarnpkg.com/electron/-/electron-2.0.6.tgz#8e5c1bd2ebc08fa7a6ee906de3753c1ece9d7300"
+electron@3.0.0-beta.5:
+  version "3.0.0-beta.5"
+  resolved "https://registry.yarnpkg.com/electron/-/electron-3.0.0-beta.5.tgz#06e92b611d3099a03194da34a87133d34ff32851"
   dependencies:
     "@types/node" "^8.0.24"
-    electron-download "^3.0.1"
+    electron-download "^4.1.0"
     extract-zip "^1.0.3"
 
 entities@^1.1.1, entities@~1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/entities/-/entities-1.1.1.tgz#6e5c2d0a5621b5dadaecef80b90edfb5cd7772f0"
 
+env-paths@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/env-paths/-/env-paths-1.0.0.tgz#4168133b42bb05c38a35b1ae4397c8298ab369e0"
+
 error-ex@^1.2.0:
   version "1.3.1"
   resolved "https://registry.yarnpkg.com/error-ex/-/error-ex-1.3.1.tgz#f855a86ce61adc4e8621c3cda21e7a7612c3a8dc"
   dependencies:
     is-arrayish "^0.2.1"
 
-es6-promise@^4.0.5:
-  version "4.1.1"
-  resolved "https://registry.yarnpkg.com/es6-promise/-/es6-promise-4.1.1.tgz#8811e90915d9a0dba36274f0b242dbda78f9c92a"
-
 escape-string-regexp@1.0.5, escape-string-regexp@^1.0.0:
   version "1.0.5"
   resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
@@ -629,15 +629,12 @@
     combined-stream "^1.0.5"
     mime-types "^2.1.12"
 
-fs-extra@^0.30.0:
-  version "0.30.0"
-  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-0.30.0.tgz#f233ffcc08d4da7d432daa449776989db1df93f0"
+fs-extra@^2.0.0:
+  version "2.1.2"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-2.1.2.tgz#046c70163cef9aad46b0e4a7fa467fb22d71de35"
   dependencies:
     graceful-fs "^4.1.2"
     jsonfile "^2.1.0"
-    klaw "^1.0.0"
-    path-is-absolute "^1.0.0"
-    rimraf "^2.2.8"
 
 fs.realpath@^1.0.0:
   version "1.0.0"
@@ -720,7 +717,7 @@
     once "^1.3.0"
     path-is-absolute "^1.0.0"
 
-graceful-fs@^4.1.2, graceful-fs@^4.1.6, graceful-fs@^4.1.9:
+graceful-fs@^4.1.2, graceful-fs@^4.1.6:
   version "4.1.11"
   resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.1.11.tgz#0e8bdfe4d1ddb8854d64e04ea7c00e2a026e5658"
 
@@ -798,10 +795,6 @@
   version "4.2.0"
   resolved "https://registry.yarnpkg.com/hoek/-/hoek-4.2.0.tgz#72d9d0754f7fe25ca2d01ad8f8f9a9449a89526d"
 
-home-path@^1.0.1:
-  version "1.0.5"
-  resolved "https://registry.yarnpkg.com/home-path/-/home-path-1.0.5.tgz#788b29815b12d53bacf575648476e6f9041d133f"
-
 hosted-git-info@^2.1.4:
   version "2.5.0"
   resolved "https://registry.yarnpkg.com/hosted-git-info/-/hosted-git-info-2.5.0.tgz#6d60e34b3abbc8313062c3b798ef8d901a07af3c"
@@ -1009,12 +1002,6 @@
   dependencies:
     is-buffer "^1.1.5"
 
-klaw@^1.0.0:
-  version "1.3.1"
-  resolved "https://registry.yarnpkg.com/klaw/-/klaw-1.3.1.tgz#4088433b46b3b1ba259d78785d8e96f73ba02439"
-  optionalDependencies:
-    graceful-fs "^4.1.9"
-
 load-json-file@^1.0.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/load-json-file/-/load-json-file-1.1.0.tgz#956905708d58b4bab4c2261b04f59f31c99374c0"
@@ -1298,12 +1285,16 @@
   dependencies:
     error-ex "^1.2.0"
 
-path-exists@^2.0.0, path-exists@^2.1.0:
+path-exists@^2.0.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-2.1.0.tgz#0feb6c64f0fc518d9a754dd5efb62c7022761f4b"
   dependencies:
     pinkie-promise "^2.0.0"
 
+path-exists@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-3.0.0.tgz#ce0ebeaa5f78cb18925ea7d810d7b59b010fd515"
+
 path-is-absolute@^1.0.0:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
@@ -1569,7 +1560,7 @@
   dependencies:
     path-parse "^1.0.5"
 
-rimraf@2, rimraf@^2.2.8, rimraf@^2.5.1, rimraf@^2.6.1:
+rimraf@2, rimraf@^2.5.1, rimraf@^2.6.1:
   version "2.6.2"
   resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-2.6.2.tgz#2ed8150d24a16ea8651e6d6ef0f47c4158ce7a36"
   dependencies:
@@ -1730,12 +1721,11 @@
   dependencies:
     minimist "^1.1.0"
 
-sumchecker@^1.2.0:
-  version "1.3.1"
-  resolved "https://registry.yarnpkg.com/sumchecker/-/sumchecker-1.3.1.tgz#79bb3b4456dd04f18ebdbc0d703a1d1daec5105d"
+sumchecker@^2.0.1:
+  version "2.0.2"
+  resolved "https://registry.yarnpkg.com/sumchecker/-/sumchecker-2.0.2.tgz#0f42c10e5d05da5d42eea3e56c3399a37d6c5b3e"
   dependencies:
     debug "^2.2.0"
-    es6-promise "^4.0.5"
 
 supports-color@5.4.0:
   version "5.4.0"
changed in both
  base   100644 454ff72215dd40f4193dd2bcd378af8a0f4255e0 yarn.lock
  our    100644 b56aa332449f9eb6db4b03a16548d91df21604bb yarn.lock
  their  100644 1433c0215318719bf6c503ced27041449743e312 yarn.lock
@@ -2691,7 +2691,7 @@
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/fs-exists-sync/-/fs-exists-sync-0.1.0.tgz#982d6893af918e72d08dec9e8673ff2b5a8d6add"
 
-fs-extra@0.26.7, fs-extra@^0.26.5:
+fs-extra@0.26.7:
   version "0.26.7"
   resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-0.26.7.tgz#9ae1fdd94897798edab76d0918cf42d0c3184fa9"
   dependencies:
@@ -2708,6 +2708,7 @@
     graceful-fs "^4.1.2"
     jsonfile "^2.1.0"
 
+<<<<<<< .our
 fs-minipass@^1.2.5:
   version "1.2.5"
   resolved "https://registry.yarnpkg.com/fs-minipass/-/fs-minipass-1.2.5.tgz#06c277218454ec288df77ada54a03b8702aacb9d"
@@ -2722,6 +2723,15 @@
     iferr "^0.1.5"
     imurmurhash "^0.1.4"
     readable-stream "1 || 2"
+=======
+fs-extra@^7.0.0:
+  version "7.0.0"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-7.0.0.tgz#8cc3f47ce07ef7b3593a11b9fb245f7e34c041d6"
+  dependencies:
+    graceful-fs "^4.1.2"
+    jsonfile "^4.0.0"
+    universalify "^0.1.0"
+>>>>>>> .their
 
 fs.realpath@^1.0.0:
   version "1.0.0"
@@ -4166,6 +4176,12 @@
   optionalDependencies:
     graceful-fs "^4.1.6"
 
+jsonfile@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-4.0.0.tgz#8771aae0799b64076b76640fca058f9c10e33ecb"
+  optionalDependencies:
+    graceful-fs "^4.1.6"
+
 jsonify@~0.0.0:
   version "0.0.0"
   resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"
@@ -4983,7 +4999,11 @@
   version "0.0.7"
   resolved "https://registry.yarnpkg.com/mute-stream/-/mute-stream-0.0.7.tgz#3075ce93bc21b8fab43e1bc4da7e8115ed1e7bab"
 
+<<<<<<< .our
 nan@2.10.0, nan@^2.9.2:
+=======
+nan@2.10.0, nan@^2.10.0:
+>>>>>>> .their
   version "2.10.0"
   resolved "https://registry.yarnpkg.com/nan/-/nan-2.10.0.tgz#96d0cd610ebd58d4b4de9cc0c6828cda99c7548f"
 
@@ -4991,6 +5011,7 @@
   version "2.8.0"
   resolved "https://registry.yarnpkg.com/nan/-/nan-2.8.0.tgz#ed715f3fe9de02b57a5e6252d90a96675e1f085a"
 
+<<<<<<< .our
 nan@^2.0.0:
   version "2.9.2"
   resolved "https://registry.yarnpkg.com/nan/-/nan-2.9.2.tgz#f564d75f5f8f36a6d9456cca7a6c4fe488ab7866"
@@ -5023,6 +5044,8 @@
     snapdragon "^0.8.1"
     to-regex "^3.0.1"
 
+=======
+>>>>>>> .their
 native-is-elevated@^0.2.1:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/native-is-elevated/-/native-is-elevated-0.2.1.tgz#70a2123a8575b9f624a3ef465d98cb74ae017385"
@@ -5128,7 +5151,7 @@
   dependencies:
     is "^3.1.0"
 
-nodegit-promise@~4.0.0:
+nodegit-promise@^4.0.0:
   version "4.0.0"
   resolved "https://registry.yarnpkg.com/nodegit-promise/-/nodegit-promise-4.0.0.tgz#5722b184f2df7327161064a791d2e842c9167b34"
   dependencies:
@@ -5261,7 +5284,7 @@
   version "3.0.0"
   resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-3.0.0.tgz#9bedd5ca0897949bca47e7ff408062d549f587f2"
 
-object-assign@^4.0.0, object-assign@^4.0.1, object-assign@^4.1.0:
+object-assign@^4.0.0, object-assign@^4.0.1, object-assign@^4.1.0, object-assign@^4.1.1:
   version "4.1.1"
   resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-4.1.1.tgz#2109adc7965887cfc05cbbd442cac8bfbb360863"
 
@@ -5327,6 +5350,7 @@
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/onetime/-/onetime-1.1.0.tgz#a1f7838f8314c516f05ecefcbc4ccfe04b4ed789"
 
+<<<<<<< .our
 onetime@^2.0.0:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/onetime/-/onetime-2.0.1.tgz#067428230fd67443b2794b22bba528b6867962d4"
@@ -5334,10 +5358,13 @@
     mimic-fn "^1.0.0"
 
 oniguruma@^7.0.0:
+=======
+oniguruma@bpasero/node-oniguruma#nan-2.10.0:
+>>>>>>> .their
   version "7.0.0"
-  resolved "https://registry.yarnpkg.com/oniguruma/-/oniguruma-7.0.0.tgz#cf258a8b1a2ec1d0d68964d6336df264008ebf4c"
+  resolved "https://codeload.github.com/bpasero/node-oniguruma/tar.gz/ee02dceee2e45f4edf7b1eeef518f5d3ad19a7bd"
   dependencies:
-    nan "^2.0.9"
+    nan "^2.10.0"
 
 optimist@0.3.5:
   version "0.3.5"
@@ -5996,6 +6023,7 @@
   version "1.1.8"
   resolved "https://registry.yarnpkg.com/progress/-/progress-1.1.8.tgz#e260c78f6161cdd9b0e56cc3e0a85de17c7a57be"
 
+<<<<<<< .our
 promise-inflight@^1.0.1:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/promise-inflight/-/promise-inflight-1.0.1.tgz#98472870bf228132fcbdd868129bad12c3c029e3"
@@ -6003,8 +6031,14 @@
 promisify-node@^0.3.0:
   version "0.3.0"
   resolved "https://registry.yarnpkg.com/promisify-node/-/promisify-node-0.3.0.tgz#b4b55acf90faa7d2b8b90ca396899086c03060cf"
+=======
+promisify-node@^0.5.0:
+  version "0.5.0"
+  resolved "https://registry.yarnpkg.com/promisify-node/-/promisify-node-0.5.0.tgz#b7115a9d5cd241e939c96e260acda24938d25720"
+>>>>>>> .their
   dependencies:
-    nodegit-promise "~4.0.0"
+    nodegit-promise "^4.0.0"
+    object-assign "^4.1.1"
 
 proto-list@~1.2.1:
   version "1.2.4"
@@ -7613,6 +7647,10 @@
     json-stable-stringify "^1.0.0"
     through2-filter "^2.0.0"
 
+universalify@^0.1.0:
+  version "0.1.2"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-0.1.2.tgz#b646f69be3942dabcecc9d6639c80dc105efaa66"
+
 unpipe@1.0.0, unpipe@~1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec"
@@ -7855,9 +7893,9 @@
     yauzl "^2.3.1"
     yazl "^2.2.2"
 
-vscode-chokidar@1.6.2:
-  version "1.6.2"
-  resolved "https://registry.yarnpkg.com/vscode-chokidar/-/vscode-chokidar-1.6.2.tgz#4db06e2d963befe42dd44434212f5b8606b53831"
+vscode-chokidar@^1.6.2:
+  version "1.6.3"
+  resolved "https://registry.yarnpkg.com/vscode-chokidar/-/vscode-chokidar-1.6.3.tgz#69d760870549d53355b570789b514db914d16b9c"
   dependencies:
     anymatch "^1.3.0"
     async-each "^1.0.0"
@@ -7868,17 +7906,17 @@
     path-is-absolute "^1.0.0"
     readdirp "^2.0.0"
   optionalDependencies:
-    vscode-fsevents "0.3.8"
+    vscode-fsevents "0.3.9"
 
 vscode-debugprotocol@1.31.0:
   version "1.31.0"
   resolved "https://registry.yarnpkg.com/vscode-debugprotocol/-/vscode-debugprotocol-1.31.0.tgz#8467eeabeea65f52da5ac03b03c18e10e8b95eb4"
 
-vscode-fsevents@0.3.8:
-  version "0.3.8"
-  resolved "https://registry.yarnpkg.com/vscode-fsevents/-/vscode-fsevents-0.3.8.tgz#389647fa2f6daffedf1b40132a5bb96ac6501521"
+vscode-fsevents@0.3.9:
+  version "0.3.9"
+  resolved "https://registry.yarnpkg.com/vscode-fsevents/-/vscode-fsevents-0.3.9.tgz#edbb66ea2c4eeb102b9194bb602e73bd9512c64c"
   dependencies:
-    nan "^2.3.0"
+    nan "^2.10.0"
 
 vscode-nls-dev@3.1.0:
   version "3.1.0"
@@ -7896,25 +7934,25 @@
     xml2js "^0.4.19"
     yargs "^10.1.1"
 
-vscode-nsfw@1.0.17:
-  version "1.0.17"
-  resolved "https://registry.yarnpkg.com/vscode-nsfw/-/vscode-nsfw-1.0.17.tgz#da3820f26aea3a7e95cadc54bd9e5dae3d47e474"
+vscode-nsfw@Tyriar/vscode-nsfw#electron-3.0.x:
+  version "1.0.19"
+  resolved "https://codeload.github.com/Tyriar/vscode-nsfw/tar.gz/a7144a01e246f32d897432921f26fc1cbf2bfba0"
   dependencies:
-    fs-extra "^0.26.5"
+    fs-extra "^7.0.0"
     lodash.isinteger "^4.0.4"
     lodash.isundefined "^3.0.1"
-    nan "^2.0.0"
-    promisify-node "^0.3.0"
+    nan "^2.10.0"
+    promisify-node "^0.5.0"
 
 vscode-ripgrep@1.1.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/vscode-ripgrep/-/vscode-ripgrep-1.1.0.tgz#93c1e39d88342ee1b15530a12898ce930d511948"
 
-vscode-textmate@^4.0.1:
+vscode-textmate@Microsoft/vscode-textmate#electron-3.0.x:
   version "4.0.1"
-  resolved "https://registry.yarnpkg.com/vscode-textmate/-/vscode-textmate-4.0.1.tgz#6c36f28e9059ce12bc34907f7a33ea43166b26a8"
+  resolved "https://codeload.github.com/Microsoft/vscode-textmate/tar.gz/a29af05076a6ad0d598c00d65fe130fe9b84b164"
   dependencies:
-    oniguruma "^7.0.0"
+    oniguruma bpasero/node-oniguruma#nan-2.10.0
 
 vscode-xterm@3.7.0-beta4:
   version "3.7.0-beta4"
@@ -8036,18 +8074,18 @@
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/windows-foreground-love/-/windows-foreground-love-0.1.0.tgz#948e4beac0733cd58624710cc09432b7e8bf3521"
 
-windows-mutex@^0.2.0:
-  version "0.2.0"
-  resolved "https://registry.yarnpkg.com/windows-mutex/-/windows-mutex-0.2.0.tgz#3c1fb8aae592810698cf31576a150aa8161894f4"
+windows-mutex@Microsoft/node-windows-mutex#electron-3.0.x:
+  version "0.2.1"
+  resolved "https://codeload.github.com/Microsoft/node-windows-mutex/tar.gz/14c9465655de19aa76d6092d47d0d28b8aff027e"
   dependencies:
     bindings "^1.2.1"
-    nan "^2.1.0"
+    nan "^2.10.0"
 
-windows-process-tree@0.2.2:
-  version "0.2.2"
-  resolved "https://registry.yarnpkg.com/windows-process-tree/-/windows-process-tree-0.2.2.tgz#1ab2518588d6f389c10e5a6c9c0d5550989506f4"
+windows-process-tree@Microsoft/vscode-windows-process-tree#electron-3.0.x:
+  version "0.2.4"
+  resolved "https://codeload.github.com/Microsoft/vscode-windows-process-tree/tar.gz/11c2f63b412a152a7a40a1c7d2121c76503bbb42"
   dependencies:
-    nan "^2.6.2"
+    nan "^2.10.0"
 
 winreg@^1.2.4:
   version "1.2.4"
