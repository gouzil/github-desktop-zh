changed in both
  base   100644 bbc5c6ca22330d8a7ca0127dfbeb52994efeee03 src/vs/base/common/resources.ts
  our    100644 53357fe29f5f8919d794f7850dfaffd61f179591 src/vs/base/common/resources.ts
  their  100644 d5a6bda7bb2281940b5ecf98493bce8192cbad36 src/vs/base/common/resources.ts
@@ -5,21 +5,33 @@
 'use strict';
 
 import * as paths from 'vs/base/common/paths';
+<<<<<<< .our
 import URI from 'vs/base/common/uri';
 import { equalsIgnoreCase } from 'vs/base/common/strings';
 import { Schemas } from 'vs/base/common/network';
 import { isLinux, isWindows } from 'vs/base/common/platform';
 import { CharCode } from 'vs/base/common/charCode';
+=======
+import uri from 'vs/base/common/uri';
+import { equalsIgnoreCase, rtrim } from 'vs/base/common/strings';
+>>>>>>> .their
 
 export function getComparisonKey(resource: URI): string {
 	return hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();
 }
 
+<<<<<<< .our
 export function hasToIgnoreCase(resource: URI): boolean {
 	// A file scheme resource is in the same platform as code, so ignore case for non linux platforms
 	// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider
 	return resource && resource.scheme === Schemas.file ? !isLinux : true;
 }
+=======
+export function isEqualOrParent(resource: uri, candidate: uri, ignoreCase?: boolean): boolean {
+	if (resource.scheme === candidate.scheme && resource.authority === candidate.authority) {
+		return paths.isEqualOrParent(rtrim(resource.fsPath, paths.sep), rtrim(candidate.fsPath, paths.sep), ignoreCase);
+	}
+>>>>>>> .their
 
 export function basenameOrAuthority(resource: URI): string {
 	return basename(resource) || resource.authority;
@@ -56,11 +68,13 @@
 		return false;
 	}
 
+	const firstStr = rtrim(first.toString(), paths.sep);
+	const secondStr = rtrim(second.toString(), paths.sep);
 	if (ignoreCase) {
-		return equalsIgnoreCase(first.toString(), second.toString());
+		return equalsIgnoreCase(firstStr, secondStr);
 	}
 
-	return first.toString() === second.toString();
+	return firstStr === secondStr;
 }
 
 export function basename(resource: URI): string {
@@ -172,6 +186,7 @@
 
 	return distinctParents;
 }
+<<<<<<< .our
 
 /**
  * Tests wheter the given URL is a file URI created by `URI.parse` instead of `URI.file`.
@@ -187,3 +202,5 @@
 	return void 0;
 }
 
+=======
+>>>>>>> .their
