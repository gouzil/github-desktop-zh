changed in both
  base   100644 8f167afc9049e8db15fd3175ce33a6ad4738b9f1 OSSREADME.json
  our    100644 e15cccabcadbd5afb0980967f0af53c135710fc0 OSSREADME.json
  their  100644 ddfe2a1fa05af54ab5c44aeb8a7cdcafcf729f19 OSSREADME.json
@@ -51,7 +51,11 @@
 },
 {
 	"name": "electron",
+<<<<<<< .our
 	"version": "2.0.7",
+=======
+	"version": "2.0.5",
+>>>>>>> .their
 	"license": "MIT",
 	"repositoryURL": "https://github.com/electron/electron",
 	"isProd": true
changed in both
  base   100644 663f81987ccc076e4b3e08e95663fdd475e09b93 build/builtInExtensions.json
  our    100644 b3efcd2cc657706605008661521b555c93a32c16 build/builtInExtensions.json
  their  100644 e607dada4f85a5d32fa133c9fb0ea836f3a1d185 build/builtInExtensions.json
@@ -6,7 +6,11 @@
 	},
 	{
 		"name": "ms-vscode.node-debug2",
+<<<<<<< .our
 		"version": "1.27.0",
+=======
+		"version": "1.26.8",
+>>>>>>> .their
 		"repo": "https://github.com/Microsoft/vscode-node-debug2"
 	}
 ]
changed in both
  base   100644 4a4588e38b35333ba0d79b6b7a3f80a890cbf3bb package.json
  our    100644 d0e982ce0b76c5b1b5eb02b673e459e47f3353a4 package.json
  their  100644 00364d94c37986c104539c1b7a0131d5c3d4ff87 package.json
@@ -1,7 +1,12 @@
 {
   "name": "code-oss-dev",
+<<<<<<< .our
   "version": "1.27.0",
   "distro": "a4155d9780fbbc94ead6cb3017dd0fc3806c57b8",
+=======
+  "version": "1.26.0",
+  "distro": "3962f36fb9f758cc0c608d0c585d50a1f204de3a",
+>>>>>>> .their
   "author": {
     "name": "Microsoft Corporation"
   },
changed in both
  base   100644 b1543ed3d2f9f297cb6222076ea75e8d4a0186da src/vs/platform/theme/common/colorRegistry.ts
  our    100644 674f67411d4ee542ee937fac9146ef0768ec982d src/vs/platform/theme/common/colorRegistry.ts
  their  100644 8d984bd6f21c8450d851a4c038289b73296eec90 src/vs/platform/theme/common/colorRegistry.ts
@@ -223,6 +223,14 @@
 
 export const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hc: contrastBorder }, nls.localize('progressBarBackground', "Background color of the progress bar that can show for long running operations."));
 
+<<<<<<< .our
+=======
+export const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: Color.fromHex('#6C6C6C').transparent(.7), dark: Color.fromHex('#CCCCCC').transparent(.7), hc: Color.white.transparent(.7) }, nls.localize('breadcrumbsFocusForeground', "Color of focused breadcrumb items."));
+export const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: '#6C6C6C', dark: '#CCCCCC', hc: Color.white }, nls.localize('breadcrumbsFocusForeground', "Color of focused breadcrumb items."));
+export const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: '#6C6C6C', dark: '#CCCCCC', hc: Color.white }, nls.localize('breadcrumbsSelectedForegound', "Color of selected breadcrumb items."));
+export const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: '#ECECEC', dark: '#252526', hc: Color.black }, nls.localize('breadcrumbsSelectedBackground', "Background color of breadcrumb item picker."));
+
+>>>>>>> .their
 /**
  * Editor background color.
  * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254
removed in local
  base   100644 b0cbfbf570f3193ab5f142bbbcca373b9c12cb5c src/vs/workbench/browser/parts/menubar/menubarPart.ts
  their  100644 00f43d61a1077ad0328717e88e9638c44f09f5fc src/vs/workbench/browser/parts/menubar/menubarPart.ts
changed in both
  base   100644 8fc5ed3bca172f911cb941e7aa300e1d97bd1963 src/vs/workbench/parts/extensions/electron-browser/extensionsViews.ts
  our    100644 3bfb6cffba943bf68a9fa9c24fb1903c66dd3fad src/vs/workbench/parts/extensions/electron-browser/extensionsViews.ts
  their  100644 70edc1d5fabc96d5d5c5cd512c403afdba337619 src/vs/workbench/parts/extensions/electron-browser/extensionsViews.ts
changed in both
  base   100644 849d454f33dac6022061ddd66b34aa49cc0d4a06 src/vs/workbench/parts/splash/electron-browser/partsSplash.contribution.ts
  our    100644 5f76b802ea5a6e6aafeb989856a8672f1d126c9d src/vs/workbench/parts/splash/electron-browser/partsSplash.contribution.ts
  their  100644 4632aaf6efb6ed7dc220c62187dbb4c1320cda14 src/vs/workbench/parts/splash/electron-browser/partsSplash.contribution.ts
@@ -17,8 +17,12 @@
 import { IDisposable, dispose } from 'vs/base/common/lifecycle';
 import { debounceEvent } from 'vs/base/common/event';
 import { DEFAULT_EDITOR_MIN_DIMENSIONS } from 'vs/workbench/browser/parts/editor/editor';
+<<<<<<< .our
 import { ColorIdentifier, editorBackground, foreground } from 'vs/platform/theme/common/colorRegistry';
 import { Color } from 'vs/base/common/color';
+=======
+import { ColorIdentifier } from 'vs/platform/theme/common/colorRegistry';
+>>>>>>> .their
 
 class PartsSplash {
 
@@ -45,10 +49,14 @@
 	}
 
 	private _savePartsSplash() {
+<<<<<<< .our
 		const baseTheme = getThemeTypeSelector(this._themeService.getTheme().type);
 		const colorInfo = {
 			foreground: this._getThemeColor(foreground),
 			editorBackground: this._getThemeColor(editorBackground),
+=======
+		const colorInfo = {
+>>>>>>> .their
 			titleBarBackground: this._getThemeColor(themes.TITLE_BAR_ACTIVE_BACKGROUND),
 			activityBarBackground: this._getThemeColor(themes.ACTIVITY_BAR_BACKGROUND),
 			sideBarBackground: this._getThemeColor(themes.SIDE_BAR_BACKGROUND),
@@ -82,6 +90,12 @@
 		return color ? color.toString() : undefined;
 	}
 
+	private _getThemeColor(id: ColorIdentifier): string {
+		const theme = this._themeService.getTheme();
+		const color = theme.getColor(id);
+		return color ? color.toString() : undefined;
+	}
+
 	private _removePartsSplash(): void {
 		let element = document.getElementById(PartsSplash._splashElementId);
 		if (element) {
changed in both
  base   100644 41e23fc99811fdb6c8d80ca026eef510574e9115 src/vs/workbench/services/textfile/common/textFileEditorModel.ts
  our    100644 6faef447dc315ab88c3c3c652840860db088fa46 src/vs/workbench/services/textfile/common/textFileEditorModel.ts
  their  100644 aea7e08e8f002716b37dae617a9cc66c113bbd00 src/vs/workbench/services/textfile/common/textFileEditorModel.ts
@@ -43,7 +43,10 @@
 	static DEFAULT_CONTENT_CHANGE_BUFFER_DELAY = CONTENT_CHANGE_EVENT_BUFFER_DELAY;
 	static DEFAULT_ORPHANED_CHANGE_BUFFER_DELAY = 100;
 	static WHITELIST_JSON = ['package.json', 'package-lock.json', 'tsconfig.json', 'jsconfig.json', 'bower.json', '.eslintrc.json', 'tslint.json', 'composer.json'];
+<<<<<<< .our
 	static WHITELIST_WORKSPACE_JSON = ['settings.json', 'extensions.json', 'tasks.json', 'launch.json'];
+=======
+>>>>>>> .their
 
 	private static saveErrorHandler: ISaveErrorHandler;
 	static setSaveErrorHandler(handler: ISaveErrorHandler): void { TextFileEditorModel.saveErrorHandler = handler; }
@@ -839,6 +842,32 @@
 		return telemetryData;
 	}
 
+	private getTelemetryData(reason: number): Object {
+		const ext = path.extname(this.resource.fsPath);
+		const fileName = path.basename(this.resource.fsPath);
+		const telemetryData = {
+			mimeType: guessMimeTypes(this.resource.fsPath).join(', '),
+			ext,
+			path: this.hashService.createSHA1(this.resource.fsPath),
+			reason
+		};
+
+		if (ext === '.json' && TextFileEditorModel.WHITELIST_JSON.indexOf(fileName) > -1) {
+			telemetryData['whitelistedjson'] = fileName;
+		}
+
+		/* __GDPR__FRAGMENT__
+			"FileTelemetryData" : {
+				"mimeType" : { "classification": "SystemMetaData", "purpose": "FeatureInsight" },
+				"ext": { "classification": "SystemMetaData", "purpose": "FeatureInsight" },
+				"path": { "classification": "SystemMetaData", "purpose": "FeatureInsight" },
+				"reason": { "classification": "SystemMetaData", "purpose": "FeatureInsight", "isMeasurement": true },
+				"whitelistedjson": { "classification": "SystemMetaData", "purpose": "FeatureInsight" }
+			}
+		*/
+		return telemetryData;
+	}
+
 	private doTouch(versionId: number): TPromise<void> {
 		return this.saveSequentializer.setPending(versionId, this.fileService.updateContent(this.lastResolvedDiskStat.resource, this.createSnapshot(), {
 			mtime: this.lastResolvedDiskStat.mtime,
