changed in both
  base   100644 127d134f2254d76c375b7185af1f42369b62fed0 app/src/lib/app-state.ts
  our    100644 b30f0fe080d909b81d2fb683ceb8deb365fb0191 app/src/lib/app-state.ts
  their  100644 d6b50d72651124d3a81bab00a6e4e6db3d7a235c app/src/lib/app-state.ts
@@ -231,7 +231,6 @@
       type: PopupType.DeleteBranch
       repository: Repository
       branch: Branch
-      existsOnRemote: boolean
     }
   | {
       type: PopupType.ConfirmDiscardChanges
@@ -256,6 +255,7 @@
       type: PopupType.CreateBranch
       repository: Repository
       initialName?: string
+      initialBranch?: Branch
     }
   | { type: PopupType.SignIn }
   | { type: PopupType.About }
changed in both
  base   100644 410fbd6dbd6833f45a8a2523bcc15c2ee62655a8 app/src/lib/git/remote.ts
  our    100644 7b66498bbdb1a57b4bb465841fb247d2ee2d855a app/src/lib/git/remote.ts
  their  100644 7d27a42280ceec6a910a852d8d601faec4e26a5c app/src/lib/git/remote.ts
@@ -1,7 +1,11 @@
 import { git } from './core'
 import { Repository } from '../../models/repository'
 import { IRemote } from '../../models/remote'
+<<<<<<< .our
 import { findDefaultRemote } from '../stores/helpers/find-default-remote'
+=======
+import { Branch } from '../../models/branch'
+>>>>>>> .their
 
 /** Get the remote names. */
 export async function getRemotes(
@@ -71,3 +75,21 @@
 ): Promise<void> {
   await git(['remote', 'set-url', name, url], repository.path, 'setRemoteURL')
 }
+
+export async function checkBranchExistsOnRemote(
+  repository: Repository,
+  branch: Branch
+): Promise<boolean> {
+  if (branch.upstream == null) {
+    return false
+  }
+
+  const result = await git(
+    ['show-ref', '--verify', `refs/remotes/${branch.upstream}`],
+    repository.path,
+    'checkBranchExistsOnRemote',
+    { successExitCodes: new Set([0, 128]) }
+  )
+
+  return result.exitCode === 0
+}
changed in both
  base   100644 700d3f933813e7f847a36b6d4955ef5f10bc88c5 app/src/lib/stores/app-store.ts
  our    100644 1a4e387e4d192d34abfd0621b4b5ebe8cc34d8d1 app/src/lib/stores/app-store.ts
  their  100644 96be41b737456250d8c40862f64593fbbeb7c86c app/src/lib/stores/app-store.ts
@@ -2337,17 +2337,25 @@
     includeRemote: boolean
   ): Promise<void> {
     return this.withAuthenticatingUser(repository, async (repo, account) => {
-      const defaultBranch = this.getRepositoryState(repository).branchesState
-        .defaultBranch
-      if (!defaultBranch) {
-        throw new Error(`No default branch!`)
-      }
-
+      const state = this.getRepositoryState(repository)
+      const branchesState = state.branchesState
       const gitStore = this.getGitStore(repository)
 
-      await gitStore.performFailableOperation(() =>
-        checkoutBranch(repository, account, defaultBranch)
-      )
+      // If we are on the branch about to be deleted then checkout the default branch
+      if (
+        branchesState.tip.kind === TipState.Valid &&
+        branchesState.tip.branch.name === branch.name
+      ) {
+        const defaultBranch = branchesState.defaultBranch
+        if (!defaultBranch) {
+          throw new Error(`No default branch!`)
+        }
+
+        await gitStore.performFailableOperation(() =>
+          checkoutBranch(repository, account, defaultBranch)
+        )
+      }
+
       await gitStore.performFailableOperation(() =>
         deleteBranch(repository, branch, account, includeRemote)
       )
changed in both
  base   100644 ad5d5eba9271c0a3c016320ae691ba2d231ebff1 app/src/ui/app.tsx
  our    100644 c38c806e36c237ea70f3cdeee739941530c0c7cd app/src/ui/app.tsx
  their  100644 66fff264a2ab171d481980e7fe2dea6002258633 app/src/ui/app.tsx
@@ -480,13 +480,10 @@
           pullRequest: currentPullRequest,
         })
       } else {
-        const existsOnRemote = state.state.aheadBehind !== null
-
         this.props.dispatcher.showPopup({
           type: PopupType.DeleteBranch,
           repository: state.repository,
           branch: tip.branch,
-          existsOnRemote: existsOnRemote,
         })
       }
     }
@@ -994,7 +991,6 @@
             dispatcher={this.props.dispatcher}
             repository={popup.repository}
             branch={popup.branch}
-            existsOnRemote={popup.existsOnRemote}
             onDismissed={this.onPopupDismissed}
             onDeleted={this.onBranchDeleted}
           />
@@ -1135,6 +1131,7 @@
             onDismissed={this.onPopupDismissed}
             dispatcher={this.props.dispatcher}
             initialName={popup.initialName || ''}
+            initialBranch={popup.initialBranch || null}
           />
         )
       }
changed in both
  base   100644 ab87ff630fe03d9c24c822f395f086c9b3f50e57 app/src/ui/branches/branch-list.tsx
  our    100644 f996cca6bcc1348eedd5f3c852bf8652b60f95aa app/src/ui/branches/branch-list.tsx
  their  100644 171d2fe4f62d9d954f2acc377641cbedfcee050b app/src/ui/branches/branch-list.tsx
@@ -89,6 +89,7 @@
    */
   readonly onCreateNewBranch?: (name: string) => void
 
+<<<<<<< .our
   readonly textbox?: TextBox
 
   /**
@@ -103,6 +104,13 @@
    * Callback to fire when the items in the filter list are updated
    */
   readonly onFilterListResultsChanged?: (resultCount: number) => void
+=======
+  /** Can users perform operations on a branch in the list via a context menu? */
+  readonly canShowBranchContextMenu: boolean
+
+  readonly onCreateNewBranchFromStartPoint?: (branch: Branch) => void
+  readonly onDeleteBranch?: (branch: Branch) => void
+>>>>>>> .their
 }
 
 interface IBranchListState {
@@ -169,6 +177,7 @@
 
   public render() {
     return (
+<<<<<<< .our
       <FilterList<IBranchListItem>
         ref={this.onBranchesFilterListRef}
         className="branches-list"
@@ -187,6 +196,19 @@
         renderNoItems={this.onRenderNoItems}
         filterTextBox={this.props.textbox}
         onFilterListResultsChanged={this.props.onFilterListResultsChanged}
+=======
+      <BranchListItem
+        name={branch.name}
+        branch={branch}
+        isCurrentBranch={branch.name === currentBranchName}
+        lastCommitDate={commit ? commit.author.date : null}
+        filterText={this.props.filterText}
+        canShowBranchContextMenu={this.props.canShowBranchContextMenu}
+        onCreateNewBranchFromStartPoint={
+          this.props.onCreateNewBranchFromStartPoint
+        }
+        onDeleteBranch={this.props.onDeleteBranch}
+>>>>>>> .their
       />
     )
   }
removed in local
  base   100644 8bf53381567f66aec89c869080a6b63370255bc9 app/src/ui/branches/branch.tsx
  their  100644 dd910faed7e44a048ad50cd9b8be32bda1c6b98c app/src/ui/branches/branch.tsx
changed in both
  base   100644 cd420b66aae0a2d4b6b67873a7c96615d8d849b7 app/src/ui/branches/branches-container.tsx
  our    100644 6a5612ae608b20b3a486f139daf4063209bca568 app/src/ui/branches/branches-container.tsx
  their  100644 0be690e0e17b8145499ab1005ba1db57748dd002 app/src/ui/branches/branches-container.tsx
@@ -123,7 +123,13 @@
             onSelectionChanged={this.onBranchSelectionChanged}
             canCreateNewBranch={true}
             onCreateNewBranch={this.onCreateBranchWithName}
+<<<<<<< .our
             renderBranch={this.renderBranch}
+=======
+            canShowBranchContextMenu={true}
+            onCreateNewBranchFromStartPoint={this.onCreateBranchFromStartPoint}
+            onDeleteBranch={this.onDeleteBranch}
+>>>>>>> .their
           />
         )
 
@@ -214,6 +220,7 @@
     this.onCreateBranchWithName('')
   }
 
+<<<<<<< .our
   private onPullRequestFilterTextChanged = (text: string) => {
     this.setState({ pullRequestFilterText: text })
   }
@@ -222,6 +229,25 @@
     selectedPullRequest: PullRequest | null
   ) => {
     this.setState({ selectedPullRequest })
+=======
+  private onCreateBranchFromStartPoint = (branch: Branch) => {
+    this.props.dispatcher.closeFoldout(FoldoutType.Branch)
+    this.props.dispatcher.showPopup({
+      type: PopupType.CreateBranch,
+      repository: this.props.repository,
+      initialBranch: branch,
+    })
+  }
+
+  private onDeleteBranch = (branch: Branch) => {
+    this.props.dispatcher.closeFoldout(FoldoutType.Branch)
+
+    this.props.dispatcher.showPopup({
+      type: PopupType.DeleteBranch,
+      repository: this.props.repository,
+      branch: branch,
+    })
+>>>>>>> .their
   }
 
   private onCreatePullRequest = () => {
changed in both
  base   100644 ab931838d66433189cf4cbb0f620aed220c3541c app/src/ui/create-branch/create-branch-dialog.tsx
  our    100644 32e07b11abcf52024da6e39cb60a165d3f045b96 app/src/ui/create-branch/create-branch-dialog.tsx
  their  100644 607b46f8be838ed96095fcb1dd6bfc2a88df73c8 app/src/ui/create-branch/create-branch-dialog.tsx
@@ -29,11 +29,13 @@
   readonly defaultBranch: Branch | null
   readonly allBranches: ReadonlyArray<Branch>
   readonly initialName: string
+  readonly initialBranch: Branch | null
 }
 
 enum StartPoint {
   CurrentBranch,
   DefaultBranch,
+  InitialBranch,
   Head,
 }
 
@@ -81,6 +83,10 @@
   props: ICreateBranchProps,
   preferred: StartPoint
 ): StartPoint {
+  if (props.initialBranch !== null) {
+    return StartPoint.InitialBranch
+  }
+
   if (preferred === StartPoint.DefaultBranch && props.defaultBranch) {
     return preferred
   }
@@ -144,6 +150,18 @@
   }
 
   private renderBranchSelection() {
+    if (
+      this.state.startPoint === StartPoint.InitialBranch &&
+      this.props.initialBranch !== null
+    ) {
+      const initialBranch = this.props.initialBranch
+      return (
+        <p>
+          Your new branch will be based on <Ref>{initialBranch.name}</Ref>.
+        </p>
+      )
+    }
+
     const tip = this.state.isCreatingBranch
       ? this.state.tipAtCreateStart
       : this.props.tip
@@ -308,6 +326,11 @@
       }
 
       startPoint = this.props.defaultBranch.name
+    } else if (
+      this.state.startPoint === StartPoint.InitialBranch &&
+      this.props.initialBranch !== null
+    ) {
+      startPoint = this.props.initialBranch.name
     }
 
     if (name.length > 0) {
changed in both
  base   100644 da3dac8dfca303eb8512b4031e6da4b6545ba4a7 app/src/ui/delete-branch/delete-branch-dialog.tsx
  our    100644 b5c948eb5b4bf338b32d13ebf5656729b009a7c9 app/src/ui/delete-branch/delete-branch-dialog.tsx
  their  100644 cee22ba52f34ad99f8f83c2b9ae74cee0a0eeefd app/src/ui/delete-branch/delete-branch-dialog.tsx
@@ -8,17 +8,18 @@
 import { Checkbox, CheckboxValue } from '../lib/checkbox'
 import { Dialog, DialogContent, DialogFooter } from '../dialog'
 import { Ref } from '../lib/ref'
+import { checkBranchExistsOnRemote } from '../../lib/git'
 
 interface IDeleteBranchProps {
   readonly dispatcher: Dispatcher
   readonly repository: Repository
   readonly branch: Branch
-  readonly existsOnRemote: boolean
   readonly onDismissed: () => void
   readonly onDeleted: (repository: Repository) => void
 }
 
 interface IDeleteBranchState {
+  readonly existsOnRemote: boolean | null
   readonly includeRemoteBranch: boolean
 }
 
@@ -26,14 +27,49 @@
   IDeleteBranchProps,
   IDeleteBranchState
 > {
+  private checkingRemote = false
+
   public constructor(props: IDeleteBranchProps) {
     super(props)
 
     this.state = {
+      existsOnRemote: null,
       includeRemoteBranch: false,
     }
   }
 
+  public componentWillReceiveProps(nextProps: IDeleteBranchProps) {
+    if (this.checkingRemote) {
+      // a check is being performed, don't start another
+      return
+    }
+
+    const upstreamChanged =
+      this.props.branch.upstream !== nextProps.branch.upstream
+
+    if (this.state.existsOnRemote == null || upstreamChanged) {
+      this.checkingRemote = true
+
+      checkBranchExistsOnRemote(this.props.repository, this.props.branch)
+        .then(existsOnRemote => {
+          this.setState({ existsOnRemote }, () => {
+            this.checkingRemote = false
+          })
+        })
+        .catch(err => {
+          log.warn(
+            `[DeleteBranch] unable to resolve upstream branch: '${
+              this.props.branch.upstream
+            }'`,
+            err
+          )
+          this.setState({ existsOnRemote: false }, () => {
+            this.checkingRemote = false
+          })
+        })
+    }
+  }
+
   public render() {
     return (
       <Dialog
@@ -61,7 +97,7 @@
   }
 
   private renderDeleteOnRemote() {
-    if (this.props.branch.remote && this.props.existsOnRemote) {
+    if (this.props.branch.remote && this.state.existsOnRemote == true) {
       return (
         <div>
           <p>
changed in both
  base   100644 66f1ac9540d0b20783d94a33dc206abae4066abc app/src/ui/merge-branch/merge.tsx
  our    100644 6a7e6976257ec16e58a7331db61b40096a9bde08 app/src/ui/merge-branch/merge.tsx
  their  100644 05e3f12681012e8417df4a5dfe10374049c9fd35 app/src/ui/merge-branch/merge.tsx
@@ -169,7 +169,11 @@
             selectedBranch={selectedBranch}
             onSelectionChanged={this.onSelectionChanged}
             canCreateNewBranch={false}
+<<<<<<< .our
             renderBranch={this.renderBranch}
+=======
+            canShowBranchContextMenu={false}
+>>>>>>> .their
           />
         </DialogContent>
         <DialogFooter>
